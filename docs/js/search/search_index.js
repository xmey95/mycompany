var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AbsencesCalendarComponent.html",[0,0.242,1,0.832]],["body/components/AbsencesCalendarComponent.html",[0,0.419,1,1.244,2,0.07,3,0.07,4,0.791,5,0.791,6,0.791,7,0.057,8,3.64,9,4.37,10,4.37,11,2.027,12,0.862,13,1.803,14,4.37,15,5.267,16,2.307,17,3.697,18,3.58,19,3.58,20,0.261,21,2.423,22,1.754,23,2.423,24,2.887,25,3.674,26,3.674,27,1.841,28,2.718,29,0.791,30,2.114,31,1.172,32,3.674,33,1.172,34,3.674,35,0.084,36,0.208,37,2.08,38,4.842,39,2.204,40,3.697,41,3.448,42,4.337,43,4.842,44,5.416,45,1.513,46,4.378,47,4.842,48,3.081,49,3.674,50,1.357,51,2.478,52,4.092,53,3.113,54,1.797,55,1.722,56,4.255,57,2.776,58,1.76,59,2.676,60,3.291,61,2.592,62,2.295,63,3.674,64,1.338,65,0.017,66,0.243,67,0.174,68,1.338,69,2.87,70,3.004,71,2.87,72,3.291,73,2.676,74,3.674,75,3.674,76,1.777,77,1.655,78,2.87,79,2.776,80,2.586,81,5.606,82,1.754,83,1.754,84,2.87,85,2.027,86,1.596,87,2.87,88,2.87,89,2.718,90,2.478,91,1.723,92,2.307,93,1.523,94,0.383,95,1.818,96,1.922,97,2.147,98,2.87,99,2.87,100,2.87,101,0.789,102,2.87,103,2.87,104,0.472,105,3.21,106,0.988,107,2.87,108,1.511,109,0.637,110,2.478,111,2.478,112,2.478,113,2.478,114,2.478,115,2.478,116,0.941,117,2.478,118,1.873,119,1.873,120,1.873,121,1.183,122,1.306,123,0.901,124,0.151,125,1.306,126,1.306,127,3.96,128,3.291,129,2.194,130,4.378,131,2.027,132,1.023,133,1.744,134,3.291,135,3.921,136,2.22,137,3.921,138,2.22,139,3.291,140,2.22,141,2.22,142,3.291,143,2.22,144,2.22,145,0.07,146,0.986,147,2.423,148,1.744,149,1.873,150,1.873,151,1.453,152,1.936,153,2.478,154,2.22,155,2.478,156,2.22,157,2.478,158,2.22,159,2.478,160,1.634,161,1.242,162,1.634,163,1.634,164,1.634,165,1.128,166,2.478,167,3.674,168,2.478,169,4.378,170,2.478,171,1.458,172,0.862,173,2.307,174,1.648,175,2.478,176,0.203,177,1.873,178,1.376,179,1.376,180,1.744,181,2.478,182,2.478,183,2.478,184,2.22,185,2.22,186,2.22,187,2.027,188,2.027,189,2.776,190,2.027,191,4.229,192,1.453,193,2.027,194,2.478,195,1.183,196,1.634,197,1.744,198,1.873,199,2.776,200,2.776,201,4.255,202,4.255,203,4.255,204,2.87,205,2.776,206,2.586,207,2.586,208,4.337,209,0.725,210,1.172,211,1.123,212,1.172,213,0.791,214,2.87,215,0.791,216,0.637,217,0.791,218,0.637,219,0.791,220,0.665,221,1.338,222,0.791,223,0.665,224,0.757,225,1.172,226,0.637,227,0.791,228,0.665,229,0.791,230,0.637,231,0.791,232,0.637,233,0.791,234,0.665,235,0.791,236,0.637,237,0.791,238,0.665,239,0.695,240,0.791,241,0.637,242,0.695,243,0.791,244,0.665,245,0.791,246,1.338,247,1.172,248,0.665,249,1.123,250,0.791,251,0.665,252,0.791,253,0.637,254,0.791,255,0.665,256,0.695,257,0.791,258,0.665,259,0.791,260,0.665,261,0.791,262,0.665,263,0.791,264,0.665,265,0.791,266,0.665,267,0.757,268,0.791,269,0.009,270,0.009]],["title/interfaces/AddRequestResponseType.html",[124,0.197,271,0.664]],["body/interfaces/AddRequestResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.735,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.971,272,0.763,273,1.207,274,1.277,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/components/AdminComponent.html",[0,0.242,216,0.832]],["body/components/AdminComponent.html",[0,0.396,1,0.54,2,0.06,3,0.06,4,0.671,5,0.671,6,0.671,7,0.048,12,0.732,13,0.909,20,0.127,27,1.626,29,0.671,30,2.075,31,1.035,33,1.035,35,0.134,36,0.183,37,1.421,39,1.803,45,0.95,50,0.909,54,1.554,55,1.746,58,1.989,62,1.44,64,1.834,65,0.017,66,0.27,67,0.15,68,1.784,76,1.952,77,1.753,89,1.305,91,1.694,94,0.184,97,1.849,104,0.427,105,2.459,108,1.443,109,0.54,121,1.004,122,1.108,123,0.764,124,0.128,125,2.536,126,1.108,145,0.06,146,0.564,152,1.108,171,1.91,172,0.732,174,1.746,176,0.238,178,2.672,179,1.167,196,2.14,209,0.615,210,1.035,211,0.991,212,1.035,213,0.671,215,0.671,216,1.144,217,0.671,218,0.54,219,0.671,220,0.564,221,1.211,222,0.671,223,0.564,224,0.643,225,1.035,226,0.54,227,0.671,228,0.564,229,0.671,230,0.54,231,0.671,232,0.54,233,0.671,234,0.564,235,0.671,236,0.54,237,0.671,238,0.564,239,0.589,240,0.671,241,0.54,242,0.589,243,0.671,244,0.564,245,0.671,246,1.211,247,1.035,248,0.564,249,0.991,250,0.671,251,0.564,252,0.671,253,0.54,254,0.671,255,0.564,256,0.589,257,0.671,258,0.564,259,0.671,260,0.564,261,0.671,262,0.564,263,0.671,264,0.564,265,0.671,266,0.564,267,0.643,268,0.671,269,0.008,270,0.008,273,1.128,276,0.513,277,0.392,278,1.175,289,0.832,293,0.356,294,0.965,295,0.67,297,0.995,298,0.412,299,1.138,301,0.374,305,1.034,306,0.957,317,0.412,318,1.123,326,0.392,327,0.412,335,4.414,336,2.103,337,1.549,338,2.653,339,2.014,340,3.758,341,1.549,342,2.284,343,3.244,344,3.24,345,3.758,346,3.758,347,3.758,348,2.473,349,5.085,350,3.244,351,2.906,352,3.758,353,3.758,354,3.758,355,3.758,356,5.574,357,3.642,358,3.758,359,5.158,360,3.758,361,3.244,362,1.72,363,3.29,364,3.107,365,3.107,366,5.085,367,3.758,368,3.758,369,2.435,370,3.244,371,2.435,372,2.906,373,3.244,374,2.014,375,3.244,376,3.758,377,2.435,378,2.284,379,2.788,380,2.452,381,4.812,382,2.435,383,2.435,384,5.138,385,2.103,386,3.29,387,4.476,388,3.758,389,2.435,390,2.435,391,2.435,392,3.758,393,2.435,394,3.61,395,3.758,396,3.758,397,2.435,398,3.758,399,2.435,400,4.588,401,2.435,402,3.758,403,2.435,404,3.758,405,2.435,406,2.452,407,2.435,408,2.435,409,2.435,410,3.961,411,1.883,412,1.48,413,1.233,414,1.167,415,1.902,416,1.233,417,1.387,418,2.435,419,2.981,420,3.579,421,3.843,422,3.843,423,4.159,424,4.159,425,3.157,426,3.843,427,4.691,428,4.691,429,4.31,430,4.31,431,3.174,432,4.159,433,3.843,434,2.435,435,1.883,436,2.435,437,2.103,438,2.435,439,2.435,440,3.935,441,3.843,442,1.589,443,1.883,444,2.103,445,1.72,446,2.103,447,2.103,448,1.883,449,2.103,450,1.387,451,2.103,452,1.883,453,2.103,454,1.305,455,1.387,456,1.72,457,1.72,458,1.72,459,1.589,460,2.435,461,2.435,462,2.435,463,2.103,464,2.435,465,2.435,466,2.435,467,2.435,468,2.993,469,2.435,470,1.883,471,2.435,472,2.435,473,3.989,474,4.588,475,2.103,476,2.435,477,2.435,478,1.48,479,5.158,480,3.758,481,2.435,482,2.103,483,2.653,484,3.244,485,3.244,486,3.244,487,3.758,488,2.764,489,3.758,490,3.244,491,3.244,492,5.085,493,3.244,494,3.758,495,3.758,496,3.758,497,2.103,498,2.435,499,1.883,500,1.72,501,2.284,502,2.284,503,3.244,504,2.906,505,2.906,506,3.758,507,3.758,508,3.244,509,3.244]],["title/components/AllsurveysComponent.html",[0,0.242,218,0.832]],["body/components/AllsurveysComponent.html",[0,0.452,1,0.826,2,0.091,3,0.091,4,1.026,5,1.026,6,1.026,7,0.074,13,1.241,20,0.174,27,2.219,28,1.996,29,1.026,30,2.165,31,1.412,33,1.412,35,0.109,36,0.25,37,2.085,45,1.296,50,1.241,55,1.754,59,2.89,62,2.148,64,1.547,65,0.017,66,0.257,67,0.167,68,1.547,73,2.113,76,1.872,77,1.353,89,2.748,91,1.475,93,1.119,94,0.281,97,2.264,104,0.587,108,1.584,109,0.826,116,1.221,121,1.535,122,1.695,124,0.196,125,1.695,126,1.695,145,0.091,146,0.863,171,1.276,172,1.54,174,1.656,176,0.225,192,2.595,209,0.941,210,1.412,211,1.353,212,1.412,213,1.026,215,1.026,216,0.826,217,1.026,218,1.401,219,1.026,220,0.863,221,1.547,222,1.026,223,0.863,224,0.983,225,1.412,226,0.826,227,1.026,228,0.863,229,1.026,230,0.826,231,1.026,232,0.826,233,1.026,234,0.863,235,1.026,236,0.826,237,1.026,238,0.863,239,0.901,240,1.026,241,0.826,242,0.901,243,1.026,244,0.863,245,1.026,246,1.547,247,1.412,248,0.863,249,1.353,250,1.026,251,0.863,252,1.026,253,0.826,254,1.026,255,0.863,256,0.901,257,1.026,258,0.863,259,1.026,260,0.863,261,1.026,262,0.863,263,1.026,264,0.863,265,1.026,266,0.863,267,0.983,268,1.026,269,0.011,270,0.011,286,1.018,289,0.871,296,1.018,335,4.459,337,2.113,338,3.62,339,2.748,341,2.113,344,4.14,357,4.46,364,3.55,365,3.465,378,3.116,381,5.91,386,3.758,414,1.786,415,1.885,416,1.885,450,2.919,501,4.16,503,4.426,510,3.216,511,6.845,512,5.127,513,5.127,514,6.316,515,6.316,516,6.316,517,5.127,518,5.127,519,6.316,520,3.216,521,5.127,522,5.127,523,5.127,524,3.725,525,3.965,526,5.127,527,3.725,528,5.127,529,3.725,530,3.725,531,3.725,532,3.725,533,3.725,534,3.725,535,3.725,536,3.725,537,3.345,538,2.919,539,3.725,540,3.725,541,3.725,542,3.725,543,3.725,544,3.725,545,3.725,546,3.725,547,3.725,548,3.725,549,3.725,550,5.127,551,5.127,552,5.127,553,5.127,554,5.127,555,5.127,556,5.127]],["title/interfaces/AnswerResponseType.html",[124,0.197,277,0.604]],["body/interfaces/AnswerResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.701,277,0.884,278,1.191,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/components/AppComponent.html",[0,0.242,220,0.869]],["body/components/AppComponent.html",[0,0.452,1,0.976,2,0.108,3,0.108,4,1.212,5,1.212,6,1.212,7,0.087,13,1.387,20,0.194,29,1.212,30,2.192,31,1.579,33,1.579,35,0.128,36,0.28,37,1.579,45,1.449,50,1.387,54,1.93,55,1.695,59,1.814,64,1.161,65,0.017,66,0.247,67,0.156,68,1.161,76,1.611,77,1.161,94,0.482,95,2.055,96,1.965,108,1.554,109,0.976,116,1.443,123,1.381,145,0.108,146,1.02,151,2.902,165,2.253,172,1.722,174,1.635,176,0.238,209,1.112,210,1.579,211,1.513,212,1.579,213,1.212,215,1.212,216,0.976,217,1.212,218,0.976,219,1.212,220,1.565,221,1.848,222,1.212,223,1.02,224,1.161,225,1.579,226,0.976,227,1.212,228,1.02,229,1.212,230,0.976,231,1.212,232,0.976,233,1.212,234,1.02,235,1.212,236,0.976,237,1.212,238,1.02,239,1.543,240,1.212,241,0.976,242,1.065,243,1.212,244,1.02,245,1.212,246,1.895,247,1.579,248,1.02,249,1.513,250,1.212,251,1.02,252,1.212,253,0.976,254,1.212,255,1.02,256,1.065,257,1.212,258,1.02,259,1.212,260,1.02,261,1.212,262,1.02,263,1.212,264,1.02,265,1.212,266,1.02,267,1.161,268,1.212,269,0.012,270,0.012,276,0.499,342,2.674,363,3.621,413,2.228,442,4.408,488,3.073,557,3.8,558,5.733,559,5.733,560,5.733,561,5.225,562,5.833,563,5.225,564,3.8,565,3.92,566,5.733,567,4.95,568,4.401,569,3.621,570,3.484,571,4.434,572,3.265,573,4.95,574,3.74,575,4.401,576,3.484,577,5.733,578,4.95,579,5.733,580,4.401,581,2.871,582,3.107,583,3.8,584,2.506,585,3.8,586,3.107,587,2.674,588,2.674,589,4.401,590,5.733,591,2.871]],["title/modules/AppModule.html",[592,2.01,593,2.648]],["body/modules/AppModule.html",[1,1.481,2,0.084,3,0.084,7,0.068,9,2.09,10,2.09,13,1.724,14,2.09,24,1.959,53,3.2,54,1.761,57,2.244,65,0.017,86,1.29,91,0.989,95,1.233,106,0.477,108,1.759,109,0.763,121,1.418,123,1.079,145,0.119,146,0.797,209,0.869,216,1.481,218,1.481,220,1.707,221,0.908,223,1.623,226,1.481,228,1.547,230,1.481,232,1.481,234,1.547,236,1.481,238,1.547,239,0.832,241,1.481,242,1.174,244,1.547,248,1.623,251,1.623,253,1.481,255,1.547,256,1.615,258,1.623,260,1.547,262,1.547,264,1.547,266,1.547,269,0.01,270,0.01,289,0.719,365,3.379,413,1.741,565,3.578,581,2.244,582,2.429,592,2.599,593,5.681,594,2.97,595,4.851,596,4.851,597,4.718,598,2.97,599,2.97,600,2.97,601,2.97,602,2.97,603,4.355,604,4.187,605,2.97,606,2.66,607,3.44,608,4.85,609,3.44,610,2.97,611,3.44,612,4.85,613,4.85,614,3.44,615,4.85,616,2.97,617,3.44,618,4.85,619,3.44,620,3.44,621,2.97,622,4.85,623,4.85,624,4.187,625,4.85,626,3.44,627,3.44,628,4.85,629,4.85,630,2.66,631,3.44,632,2.244,633,3.44,634,4.85,635,4.85,636,4.85,637,4.85,638,4.85,639,4.85,640,4.85,641,4.85,642,4.85,643,4.85,644,4.85,645,4.85,646,4.85,647,4.85,648,4.85,649,4.85,650,4.85,651,4.85,652,4.85,653,4.85,654,4.85,655,4.85,656,3.44,657,4.85,658,3.44,659,2.244,660,2.97,661,2.66,662,2.66,663,3.44,664,4.187,665,2.97,666,2.97,667,2.66,668,3.44,669,3.44,670,3.44,671,3.44,672,3.44,673,3.44,674,3.44,675,3.44,676,2.948,677,2.948,678,2.97,679,2.429,680,3.44,681,2.97,682,2.97,683,2.97,684,3.44,685,2.97,686,2.97,687,2.97,688,2.97,689,3.44,690,3.44,691,3.44,692,3.44,693,2.97,694,2.97,695,3.44,696,3.44,697,3.44,698,1.741,699,3.44,700,3.44,701,3.44,702,3.44,703,3.44,704,3.44,705,3.44,706,3.44,707,3.44,708,3.44,709,3.44,710,3.44,711,3.44,712,3.44]],["title/modules/AppRoutingModule.html",[592,2.01,603,2.446]],["body/modules/AppRoutingModule.html",[0,0.5,1,1.401,2,0.125,3,0.125,7,0.102,9,3.116,10,3.116,13,1.729,65,0.017,108,1.743,109,1.137,133,3.116,172,1.54,176,0.174,216,1.401,218,1.401,226,1.401,228,1.463,230,1.401,232,1.401,236,1.401,241,1.401,242,1.241,253,1.401,269,0.013,270,0.013,289,0.798,414,2.458,592,2.748,603,3.345,610,4.427,621,4.427,624,5.453,659,3.345,660,4.427,676,3.116,677,3.116,678,4.427,681,4.427,685,4.427,686,4.427,687,4.427,688,4.427,693,4.427,694,4.427,713,5.127,714,5.127,715,5.127,716,3.197,717,5.127,718,7.795,719,3.62,720,4.46,721,4.46,722,3.62,723,3.62,724,3.62,725,5.127,726,3.62,727,5.127,728,5.127,729,3.965,730,5.127,731,5.127]],["title/injectables/BlockScrollService.html",[93,1.126,565,2.01]],["body/injectables/BlockScrollService.html",[2,0.116,3,0.116,7,0.094,12,1.423,21,3.424,24,3.424,35,0.138,36,0.357,37,2.018,39,2.879,40,3.424,45,1.519,50,1.598,55,1.735,65,0.017,67,0.116,76,1.755,77,1.833,86,2.69,89,3.222,91,1.363,93,2.086,108,1.334,109,1.051,145,0.116,146,1.098,171,2.061,174,1.147,211,1.586,239,1.455,246,1.586,269,0.013,270,0.013,337,2.478,342,3.654,483,4.245,565,3.222,570,3.654,572,3.424,574,3.923,581,3.923,586,3.346,587,3.654,588,3.654,732,6.324,733,4.091,734,5.923,735,5.191,736,6.013,737,6.013,738,6.013,739,6.424,740,6.604,741,5.172,742,6.013,743,6.013,744,6.946,745,6.946,746,5.824,747,6.324,748,6.013,749,4.739,750,7.169,751,4.739,752,4.739,753,4.245,754,4.739,755,3.665,756,6.604,757,4.739,758,3.346,759,4.739,760,4.091,761,4.739,762,4.739,763,6.604,764,4.739,765,4.739,766,4.739,767,4.739,768,4.739,769,4.739,770,4.739]],["title/interfaces/BossResponseType.html",[124,0.197,279,0.634]],["body/interfaces/BossResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.735,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.927,280,0.961,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/components/BottomListComponent.html",[0,0.242,223,0.869]],["body/components/BottomListComponent.html",[0,0.483,1,0.804,2,0.089,3,0.089,4,1.386,5,0.999,6,0.999,7,0.072,12,1.089,13,1.218,20,0.222,21,2.865,22,2.074,23,2.865,24,2.865,29,0.999,30,2.164,31,0.999,33,1.592,35,0.106,36,0.245,37,1.87,39,2.833,45,1.657,50,1.399,54,1.925,55,1.399,58,2.058,59,1.494,62,2.29,64,1.328,65,0.017,66,0.263,67,0.123,68,1.328,73,2.074,76,1.46,77,0.957,82,2.382,89,1.943,91,2.002,92,3.168,93,1.875,94,0.38,104,0.538,108,1.455,109,0.804,116,1.189,121,1.494,123,1.138,124,0.191,145,0.123,146,1.166,148,3.058,171,1.243,172,1.512,173,1.65,174,1.718,176,0.264,180,2.203,184,3.892,185,3.892,195,2.798,197,3.058,209,0.916,210,1.386,211,1.328,212,1.386,213,0.999,215,0.999,216,0.804,217,0.999,218,0.804,219,0.999,220,0.84,221,1.525,222,0.999,223,1.447,224,1.791,225,1.386,226,0.804,227,0.999,228,0.84,229,0.999,230,0.804,231,0.999,232,0.804,233,0.999,234,0.84,235,0.999,236,0.804,237,0.999,238,0.84,239,0.877,240,0.999,241,1.116,242,1.587,243,0.999,244,0.84,245,0.999,246,1.525,247,1.386,248,0.84,249,1.328,250,0.999,251,0.84,252,0.999,253,0.804,254,0.999,255,0.84,256,0.877,257,0.999,258,0.84,259,0.999,260,0.84,261,0.999,262,0.84,263,0.999,264,0.84,265,0.999,266,0.84,267,1.328,268,0.999,269,0.011,270,0.011,276,0.571,280,0.991,291,0.478,310,0.642,324,1.055,329,0.811,330,0.772,337,2.382,379,2.203,386,1.943,406,2.365,478,3.794,509,4.345,572,2.865,574,2.365,659,4.073,698,1.835,729,2.804,758,3.553,771,4.408,772,2.804,773,2.697,774,3.892,775,4.345,776,4.345,777,2.697,778,3.892,779,3.553,780,4.408,781,3.626,782,4.47,783,5.39,784,3.626,785,3.892,786,3.626,787,3.553,788,3.771,789,2.56,790,3.626,791,3.13,792,4.345,793,3.13,794,4.345,795,3.13,796,3.13,797,3.13,798,3.13,799,2.56,800,3.13,801,3.13,802,2.804,803,3.13,804,2.56,805,3.097,806,3.553,807,3.13,808,3.13,809,3.892,810,3.892,811,4.345,812,3.892,813,3.892,814,3.13,815,2.56,816,3.735,817,3.13,818,3.13,819,2.804,820,4.345,821,3.13,822,3.13,823,3.892,824,5.032,825,3.553,826,5.032,827,5.032]],["title/components/CompileComponent.html",[0,0.242,226,0.832]],["body/components/CompileComponent.html",[0,0.407,1,0.583,2,0.064,3,0.064,4,0.724,5,0.724,6,0.724,7,0.052,12,0.79,13,0.964,20,0.135,27,1.724,29,0.724,30,2.094,31,1.098,33,1.098,35,0.077,36,0.194,37,1.789,45,1.007,50,0.964,54,1.664,55,1.756,58,2.038,61,1.138,62,0.825,64,1.789,65,0.017,66,0.252,67,0.166,68,1.602,76,1.931,77,1.602,80,1.598,91,1.746,96,0.901,97,1.924,104,0.657,105,2.578,108,1.528,109,0.583,116,0.862,121,1.084,122,1.196,123,0.825,124,0.138,125,1.196,126,1.196,145,0.064,146,0.609,152,1.196,171,1.977,172,1.197,174,1.727,176,0.163,178,2.573,179,1.26,209,0.664,210,1.098,211,1.051,212,1.098,213,0.724,215,0.724,216,0.583,217,0.724,218,0.583,219,0.724,220,0.609,221,1.269,222,0.724,223,0.609,224,0.694,225,1.098,226,1.19,227,0.724,228,0.609,229,0.724,230,0.583,231,0.724,232,0.583,233,0.724,234,0.609,235,0.724,236,0.583,237,0.724,238,0.609,239,0.636,240,0.724,241,0.583,242,0.636,243,0.724,244,0.609,245,0.724,246,1.269,247,1.098,248,0.609,249,1.051,250,0.724,251,0.609,252,0.724,253,0.583,254,0.724,255,0.609,256,0.636,257,0.724,258,0.609,259,0.724,260,0.609,261,0.724,262,0.609,263,0.724,264,0.609,265,0.724,266,0.609,267,0.694,268,0.724,269,0.008,270,0.008,273,1.151,275,0.642,276,0.549,277,0.424,278,1.124,281,0.444,282,0.706,289,0.757,293,0.384,294,1.036,295,0.886,297,1.243,301,0.885,315,0.384,319,0.951,335,4.441,337,1.642,338,2.813,339,2.135,344,3.397,348,2.573,350,4.634,357,3.79,361,3.44,363,3.38,364,3.192,365,3.072,378,1.598,379,1.598,384,3.72,386,3.091,387,3.397,394,3.284,406,3.138,411,4.151,412,1.598,413,1.331,414,1.26,415,2.435,416,1.331,417,2.269,419,3.192,420,3.689,421,3.96,422,3.96,423,4.286,424,4.286,425,3.253,426,3.96,427,4.696,428,4.865,429,4.694,430,4.694,431,3.456,432,4.286,433,3.96,435,2.033,437,2.27,440,4.073,441,3.96,454,2.877,468,3.138,470,2.033,473,3.081,482,2.27,497,2.27,499,2.033,500,1.856,505,3.081,520,2.27,698,1.331,716,2.435,828,2.27,829,5.608,830,3.984,831,3.984,832,6.495,833,3.984,834,3.984,835,3.44,836,3.984,837,4.634,838,4.634,839,3.984,840,2.629,841,2.629,842,2.629,843,3.984,844,2.629,845,4.634,846,3.44,847,3.984,848,2.629,849,3.984,850,3.984,851,2.629,852,2.629,853,2.629,854,3.984,855,2.629,856,3.44,857,2.629,858,2.629,859,2.629,860,2.629,861,2.629,862,2.629,863,2.629,864,2.629,865,1.497,866,1.856,867,1.856,868,1.856,869,1.409,870,2.629,871,1.715,872,3.984,873,4.811,874,2.629,875,5.368,876,2.629,877,2.27,878,2.27,879,2.033,880,2.27,881,2.27,882,2.629,883,2.629,884,2.629,885,3.984,886,2.629,887,2.629,888,3.984,889,3.79,890,3.984,891,1.497,892,2.629,893,1.856,894,1.598,895,2.27,896,2.629,897,3.984,898,2.27,899,2.629,900,2.033,901,3.081,902,2.629,903,3.44,904,2.033,905,2.629,906,2.27,907,3.984,908,3.984]],["title/interfaces/ConditionResponseType.html",[124,0.197,281,0.634]],["body/interfaces/ConditionResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.701,277,0.663,278,1.043,279,0.695,280,0.601,281,0.927,282,1.165,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/components/EmployeeComponent.html",[0,0.242,230,0.832]],["body/components/EmployeeComponent.html",[0,0.438,1,0.737,2,0.155,3,0.081,4,1.304,5,0.916,6,0.916,7,0.109,8,3.627,12,0.998,13,1.454,16,2.154,17,3.421,18,3.342,20,0.26,22,1.37,27,2.048,28,2.955,29,0.916,30,2.144,31,1.304,33,1.304,35,0.097,36,0.231,37,2.102,45,1.196,48,3.351,50,1.454,53,3.387,54,1.891,55,1.71,59,2.721,61,2.748,62,1.485,64,1.455,65,0.017,66,0.233,67,0.161,68,1.249,76,1.393,77,0.877,79,3.088,85,2.347,86,2.069,91,2.032,92,2.734,95,1.191,96,1.139,101,0.792,104,0.559,105,2.537,106,0.834,108,1.464,109,0.737,116,1.09,122,1.512,123,1.043,124,0.175,132,0.922,145,0.081,146,0.77,147,1.892,148,4.669,152,3.215,171,2.328,174,1.597,176,0.23,186,2.57,187,2.347,188,2.347,190,2.347,191,3.893,192,3.214,205,3.92,206,4.219,207,2.877,208,3.661,209,0.84,210,1.304,211,1.249,212,1.304,213,0.916,215,0.916,216,0.737,217,0.916,218,0.737,219,0.916,220,0.77,221,1.676,222,0.916,223,0.77,224,0.877,225,1.304,226,0.737,227,0.916,228,0.77,229,0.916,230,1.333,231,0.916,232,0.737,233,0.916,234,0.77,235,0.916,236,0.737,237,0.916,238,0.77,239,0.804,240,0.916,241,0.737,242,0.804,243,0.916,244,0.77,245,0.916,246,1.455,247,1.304,248,0.77,249,1.249,250,0.916,251,0.77,252,0.916,253,0.737,254,0.916,255,0.77,256,0.804,257,0.916,258,0.77,259,0.916,260,0.77,261,0.916,262,0.77,263,0.916,264,0.77,265,0.916,266,0.77,267,0.877,268,0.916,269,0.01,270,0.01,276,0.48,280,0.691,291,0.792,301,0.51,337,1.37,348,3.044,364,3.438,374,2.537,379,2.02,394,2.695,414,1.593,417,1.892,419,1.682,425,2.537,431,3.421,488,2.537,525,4.646,538,2.695,569,1.781,572,2.695,716,2.791,721,2.347,799,3.342,838,5.187,904,2.57,909,2.869,910,3.661,911,5.514,912,4.087,913,4.734,914,4.734,915,6.009,916,6.009,917,4.264,918,3.661,919,2.869,920,4.734,921,3.324,922,3.324,923,2.57,924,2.57,925,3.324,926,2.869,927,3.324,928,3.324,929,3.324,930,3.324,931,3.324,932,3.324,933,3.324,934,3.324,935,3.324,936,3.324,937,2.869,938,2.869,939,3.324,940,6.601,941,4.087,942,4.087,943,4.734,944,2.537,945,4.646,946,3.92,947,4.242,948,4.087,949,5.187,950,4.087,951,3.661,952,4.087,953,4.646,954,4.646,955,4.242,956,3.661,957,3.661,958,4.087,959,3.661,960,3.088,961,4.734,962,4.734,963,3.661,964,4.087,965,4.734,966,4.087,967,4.087,968,4.087,969,3.342]],["title/components/EmployeesComponent.html",[0,0.242,232,0.832]],["body/components/EmployeesComponent.html",[0,0.448,1,0.795,2,0.088,3,0.088,4,0.987,5,0.987,6,0.987,7,0.071,8,3.685,12,1.076,13,1.208,16,2.614,19,2.53,20,0.263,22,2.057,27,2.16,28,3.078,29,0.987,30,2.158,31,1.375,33,1.375,35,0.104,36,0.243,37,2.045,42,4.804,45,1.261,48,3.491,50,1.39,53,3.393,55,1.74,59,3.032,60,2.771,61,3.15,62,2.387,64,1.639,65,0.017,66,0.269,67,0.16,68,1.639,76,1.65,77,0.945,85,2.53,86,2.451,91,1.879,101,0.819,104,0.608,108,1.449,109,0.795,116,1.175,122,1.631,124,0.189,129,2.16,145,0.088,146,0.83,147,3.851,148,4.707,154,2.771,156,3.86,160,2.842,161,2.16,162,2.842,163,2.842,164,2.842,165,1.962,171,2.238,174,1.637,176,0.211,206,3.775,209,0.905,210,1.375,211,1.317,212,1.375,213,0.987,215,0.987,216,0.795,217,0.987,218,0.795,219,0.987,220,0.83,221,1.515,222,0.987,223,0.83,224,0.945,225,1.375,226,0.795,227,0.987,228,0.83,229,0.987,230,0.795,231,0.987,232,1.378,233,0.987,234,0.83,235,0.987,236,0.795,237,0.987,238,0.83,239,0.867,240,0.987,241,0.795,242,0.867,243,0.987,244,0.83,245,0.987,246,1.515,247,1.375,248,0.83,249,1.317,250,0.987,251,0.83,252,0.987,253,0.795,254,0.987,255,0.83,256,0.867,257,0.987,258,0.83,259,0.987,260,0.83,261,0.987,262,0.83,263,0.987,264,0.83,265,0.987,266,0.83,267,0.945,268,0.987,269,0.011,270,0.011,280,0.729,291,0.819,301,0.766,341,2.057,364,1.814,394,3.271,414,1.718,425,2.675,502,3.033,538,2.04,799,4.386,912,4.309,937,3.094,938,3.094,941,4.309,942,4.309,944,3.329,945,3.86,946,4.412,947,4.386,963,3.86,964,4.309,966,4.309,967,4.309,968,5.363,969,3.524,970,3.094,971,4.992,972,4.309,973,4.992,974,4.992,975,6.212,976,4.992,977,4.992,978,4.992,979,3.583,980,4.992,981,3.583,982,3.583,983,4.992,984,3.583,985,3.583,986,3.583,987,3.583,988,2.771,989,3.583,990,3.583,991,3.094,992,3.583,993,3.583,994,3.583,995,2.178,996,3.583,997,3.583,998,3.583,999,3.583,1000,3.583,1001,2.771,1002,4.804,1003,4.992,1004,4.992,1005,4.992,1006,4.309,1007,3.86,1008,4.992,1009,4.992,1010,4.992]],["title/components/HeaderComponent.html",[0,0.242,234,0.869]],["body/components/HeaderComponent.html",[0,0.489,1,0.988,2,0.109,3,0.109,4,1.228,5,1.228,6,1.228,7,0.088,12,1.339,13,1.399,16,2.63,20,0.196,29,1.228,30,2.194,31,1.592,33,1.592,35,0.13,41,2.255,45,1.461,50,1.078,54,1.902,55,1.702,58,1.398,64,1.176,65,0.017,66,0.249,67,0.157,68,1.176,76,1.461,77,1.525,82,2.382,83,2.798,86,2.169,94,0.437,108,1.282,109,0.988,123,1.398,129,2.776,145,0.109,146,1.032,151,2.255,161,2.501,174,1.643,176,0.151,209,1.126,210,1.592,211,1.525,212,1.592,213,1.228,215,1.228,216,0.988,217,1.228,218,0.988,219,1.228,220,1.032,221,1.693,222,1.228,223,1.032,224,1.176,225,1.592,226,0.988,227,1.228,228,1.032,229,1.228,230,0.988,231,1.228,232,0.988,233,1.228,234,1.573,235,1.228,236,0.988,237,1.228,238,1.032,239,1.702,240,1.228,241,0.988,242,1.078,243,1.228,244,1.032,245,1.228,246,1.962,247,1.592,248,1.032,249,1.525,250,1.228,251,1.032,252,1.228,253,0.988,254,1.228,255,1.032,256,1.078,257,1.228,258,1.032,259,1.228,260,1.032,261,1.228,262,1.032,263,1.228,264,1.032,265,1.228,266,1.032,267,1.176,268,1.228,269,0.012,270,0.012,362,3.146,420,3.512,561,4.961,563,5.249,569,3.098,570,3.512,571,4.47,572,3.865,576,3.898,583,3.847,584,3.865,585,3.847,606,4.47,773,3.438,777,3.438,995,2.708,1011,3.847,1012,5.78,1013,5.78,1014,5.78,1015,5.78,1016,5.574,1017,4.38,1018,5.78,1019,4.456,1020,3.898,1021,4.456,1022,4.456,1023,4.456,1024,2.907,1025,2.907,1026,4.456,1027,4.99,1028,4.99,1029,4.47]],["title/components/HomeComponent.html",[0,0.242,236,0.832]],["body/components/HomeComponent.html",[0,0.468,1,0.942,2,0.104,3,0.104,4,1.17,5,1.17,6,1.17,7,0.084,12,1.276,13,1.613,17,3.19,20,0.19,29,1.17,30,2.186,31,1.543,33,1.543,50,1.028,54,1.877,55,1.028,64,1.121,65,0.017,66,0.243,67,0.104,68,1.121,108,1.242,109,0.942,123,1.333,145,0.104,146,0.984,174,1.613,176,0.144,192,3.373,199,3.654,200,4.347,209,1.073,210,1.543,211,1.478,212,1.543,213,1.17,215,1.17,216,0.942,217,1.17,218,0.942,219,1.17,220,0.984,221,1.914,222,1.17,223,0.984,224,1.121,225,1.543,226,0.942,227,1.17,228,0.984,229,1.17,230,0.942,231,1.17,232,0.942,233,1.17,234,0.984,235,1.17,236,1.478,237,1.17,238,0.984,239,1.028,240,1.17,241,0.942,242,1.028,243,1.17,244,0.984,245,1.17,246,1.654,247,1.543,248,0.984,249,1.478,250,1.17,251,0.984,252,1.17,253,0.942,254,1.17,255,0.984,256,1.028,257,1.17,258,0.984,259,1.17,260,0.984,261,1.17,262,0.984,263,1.17,264,0.984,265,1.17,266,0.984,267,1.121,268,1.17,269,0.012,270,0.012,289,0.626,339,3.002,341,2.309,362,2.999,450,3.794,452,4.332,454,3.571,492,6.141,501,4.474,721,3.955,755,4.332,825,3.955,944,3.002,946,4.641,963,4.332,969,4.705,995,2.581,1002,4.332,1027,4.836,1030,3.667,1031,5.602,1032,4.836,1033,4.836,1034,4.836,1035,3.955,1036,5.602,1037,5.602,1038,4.248,1039,5.602,1040,5.198,1041,4.705,1042,6.664,1043,5.602,1044,5.602,1045,5.753,1046,5.602,1047,5.602,1048,5.602,1049,5.602,1050,5.602,1051,5.602,1052,2.835,1053,4.836,1054,5.753,1055,5.602,1056,5.602,1057,4.836,1058,4.836,1059,5.602,1060,5.602,1061,5.602,1062,4.836,1063,5.602,1064,4.836,1065,5.602,1066,5.602,1067,5.602,1068,5.602,1069,4.836,1070,5.602,1071,5.602,1072,5.602,1073,4.836,1074,5.602,1075,5.602,1076,5.602,1077,5.602,1078,3.955]],["title/interfaces/LogResponseType.html",[124,0.197,290,0.634]],["body/interfaces/LogResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.119,36,0.266,65,0.017,66,0.265,67,0.167,94,0.595,101,0.72,104,0.733,106,0.758,124,0.419,132,0.628,145,0.194,176,0.248,269,0.012,270,0.012,271,0.724,272,0.758,273,1.207,274,0.794,275,1.267,276,0.701,277,0.659,278,1.039,279,0.691,280,0.597,281,0.691,282,0.724,283,0.628,284,0.691,285,0.691,286,0.88,287,1.06,288,0.691,289,0.764,290,0.923,291,0.947,292,1.109,293,0.597,294,0.854,295,0.898,296,0.991,297,1.039,298,0.691,299,1.013,300,0.967,301,1.05,302,0.794,303,0.794,304,0.794,305,0.758,306,0.758,307,0.794,308,0.691,309,0.724,310,1.211,311,0.691,312,0.794,313,0.691,314,0.691,315,0.597,316,0.659,317,0.691,318,0.923,319,0.724,320,0.691,321,0.691,322,0.758,323,0.923,324,0.691,325,0.691,326,0.659,327,0.691,328,0.967,329,0.88,330,0.838,331,0.724,332,0.794,333,0.659,334,0.724]],["title/components/LoginDialogComponent.html",[0,0.242,238,0.869]],["body/components/LoginDialogComponent.html",[0,0.452,1,0.819,2,0.09,3,0.09,4,1.018,5,1.018,6,1.018,7,0.073,12,1.11,13,1.234,20,0.173,24,2.903,29,1.018,30,2.163,31,1.405,33,1.405,35,0.108,36,0.249,37,2.038,40,3.584,45,1.288,50,1.523,54,1.846,55,1.693,64,0.975,65,0.017,66,0.226,67,0.154,68,0.975,76,1.669,77,1.345,82,2.814,83,1.523,86,1.913,94,0.476,95,2.093,96,2.001,97,1.324,108,1.295,109,0.819,123,1.159,145,0.09,146,0.856,151,3.343,172,1.754,174,1.523,176,0.237,192,3.186,197,3.098,209,0.934,210,1.405,211,1.345,212,1.405,213,1.018,215,1.018,216,0.819,217,1.018,218,0.819,219,1.018,220,0.856,221,1.54,222,1.018,223,0.856,224,0.975,225,1.405,226,0.819,227,1.018,228,0.856,229,1.018,230,0.819,231,1.018,232,0.819,233,1.018,234,0.856,235,1.018,236,0.819,237,1.018,238,1.458,239,1.863,240,1.018,241,0.819,242,0.894,243,1.018,244,0.856,245,1.018,246,1.54,247,1.405,248,0.856,249,1.345,250,1.018,251,0.856,252,1.018,253,0.819,254,1.018,255,0.856,256,0.894,257,1.018,258,0.856,259,1.018,260,0.856,261,1.018,262,0.856,263,1.018,264,0.856,265,1.018,266,0.856,267,0.975,268,1.018,269,0.011,270,0.011,276,0.595,330,1.094,341,2.101,380,3.326,488,3.373,490,4.402,502,3.825,565,3.821,569,3.659,570,3.548,571,4.515,572,3.324,573,4.402,574,3.326,581,2.411,582,2.609,586,3.6,667,5.514,734,4.515,746,5.107,774,4.868,802,4.868,805,3.75,806,5.172,812,3.943,813,4.515,825,4.444,988,3.943,1029,3.943,1045,4.402,1052,2.581,1064,4.402,1079,6.156,1080,3.19,1081,3.943,1082,5.099,1083,5.099,1084,5.434,1085,5.434,1086,3.888,1087,3.19,1088,5.099,1089,5.099,1090,3.695,1091,4.402,1092,4.402,1093,3.326,1094,4.402,1095,3.695,1096,5.099,1097,4.402,1098,3.695,1099,4.402,1100,4.402,1101,3.695,1102,3.695,1103,3.695,1104,5.099,1105,3.695,1106,3.695,1107,5.099,1108,5.099,1109,5.099,1110,5.099,1111,5.099,1112,3.098,1113,4.402,1114,5.099,1115,3.943,1116,5.099,1117,5.099,1118,5.099,1119,5.099,1120,3.695]],["title/components/ManageUsersComponent.html",[0,0.242,241,0.832]],["body/components/ManageUsersComponent.html",[0,0.46,1,0.681,2,0.075,3,0.075,4,1.453,5,0.846,6,0.846,7,0.061,12,0.922,13,1.082,20,0.196,21,1.748,22,1.265,23,1.748,24,1.748,29,0.846,30,2.133,31,1.232,33,1.453,35,0.089,36,0.218,37,1.94,39,2.969,45,1.624,50,1.276,54,1.858,55,1.811,58,1.817,59,1.265,62,2.174,64,1.391,65,0.017,66,0.273,67,0.169,68,1.391,72,2.374,73,2.387,76,1.779,77,1.624,82,2.173,89,2.396,91,1.286,92,2.801,93,1.343,94,0.514,95,1.603,96,1.985,104,0.655,108,1.365,109,0.681,116,1.007,121,1.265,123,0.963,124,0.162,145,0.109,146,1.036,148,2.717,161,1.329,171,1.052,172,1.74,173,1.397,174,1.645,176,0.264,180,2.717,195,2.734,197,3.52,209,0.776,210,1.232,211,1.18,212,1.232,213,0.846,215,0.846,216,0.681,217,0.846,218,0.681,219,0.846,220,0.711,221,1.391,222,0.846,223,1.036,224,1.624,225,1.232,226,0.681,227,0.846,228,0.711,229,0.846,230,0.681,231,0.846,232,0.681,233,0.846,234,0.711,235,0.846,236,0.681,237,0.846,238,0.711,239,0.743,240,0.846,241,1.285,242,1.677,243,0.846,244,0.711,245,0.846,246,1.391,247,1.232,248,0.711,249,1.18,250,0.846,251,0.711,252,0.846,253,0.681,254,0.846,255,0.711,256,0.743,257,0.846,258,0.711,259,0.846,260,0.711,261,0.846,262,0.711,263,0.846,264,0.711,265,0.846,266,0.711,267,1.528,268,0.846,269,0.01,270,0.01,276,0.648,280,0.938,291,0.405,324,0.756,329,0.992,330,0.945,337,2.173,379,1.866,386,2.396,406,2.003,478,3.741,488,2.396,572,3.298,574,2.003,586,3.157,659,4.907,698,2.263,729,2.374,758,4.09,771,5.311,772,2.374,773,1.645,774,4.761,775,2.651,776,2.651,777,1.645,778,2.374,779,2.168,780,3.723,782,2.374,783,3.86,785,2.374,787,2.168,788,2.917,791,2.651,792,5.001,793,2.651,794,3.86,795,2.651,796,2.651,797,2.651,798,2.651,799,3.157,800,3.86,801,3.86,802,4.479,803,5.001,804,3.723,805,3.299,806,4.972,807,5.315,808,3.86,809,4.761,810,3.457,811,3.86,812,3.457,813,3.457,814,2.651,815,2.168,816,3.659,817,2.651,818,3.86,819,4.969,820,3.86,821,3.86,822,2.651,946,2.917,947,3.157,988,2.374,1002,3.457,1006,3.86,1007,4.479,1052,2.263,1084,4.552,1086,3.298,1091,3.86,1092,3.86,1093,2.917,1094,3.86,1100,2.651,1115,3.457,1121,4.471,1122,5.273,1123,4.471,1124,5.273,1125,3.07,1126,4.471,1127,3.07,1128,3.07,1129,3.07,1130,3.07,1131,2.651,1132,3.07,1133,3.07,1134,3.07,1135,3.07,1136,3.07,1137,3.07,1138,3.07,1139,3.07,1140,3.07,1141,2.374,1142,3.07,1143,3.07,1144,3.07,1145,3.07,1146,3.07,1147,3.07,1148,3.07,1149,3.86,1150,4.471,1151,4.471,1152,4.471]],["title/interfaces/MenuItem.html",[124,0.197,283,0.575]],["body/interfaces/MenuItem.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.283,67,0.161,94,0.593,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.199,274,0.799,275,1.259,276,0.702,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.842,284,1.112,285,1.112,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/components/MiniSidebarItem.html",[0,0.242,244,0.869]],["body/components/MiniSidebarItem.html",[0,0.479,1,0.727,2,0.08,3,0.08,4,0.903,5,0.903,6,0.903,7,0.065,12,0.985,13,1.445,14,2.849,16,2.133,20,0.159,29,0.903,30,2.145,31,1.507,33,1.507,35,0.096,36,0.229,37,0.903,39,1.289,45,1.383,50,0.793,54,0.865,55,1.59,58,1.029,62,1.029,64,0.865,65,0.017,66,0.255,67,0.134,68,0.865,73,2.788,76,1.78,82,1.932,83,2.604,91,1.574,93,0.985,94,0.477,95,1.175,96,1.124,97,2.265,108,1.401,109,0.727,116,1.075,123,1.029,124,0.173,129,2.368,133,1.993,145,0.115,146,1.384,149,4.902,150,4.414,151,3.198,161,2.029,165,2.151,172,1.898,173,2.49,174,1.59,176,0.111,195,1.351,199,2.139,200,3.896,207,1.993,209,0.829,210,1.291,211,1.825,212,1.291,213,0.903,215,0.903,216,0.727,217,0.903,218,0.727,219,0.903,220,0.76,221,1.444,222,0.903,223,0.76,224,0.865,225,1.291,226,0.727,227,0.903,228,0.76,229,0.903,230,0.727,231,0.903,232,0.727,233,0.903,234,0.76,235,0.903,236,0.727,237,0.903,238,0.76,239,0.793,240,0.903,241,0.727,242,0.793,243,0.903,244,1.384,245,1.864,246,2.01,247,1.291,248,0.76,249,1.237,250,0.903,251,0.76,252,0.903,253,0.727,254,0.903,255,0.76,256,0.793,257,0.903,258,0.76,259,0.903,260,0.76,261,0.903,262,0.76,263,0.903,264,1.086,265,2.081,266,0.76,267,0.865,268,0.903,269,0.01,270,0.01,283,0.916,284,0.925,285,0.925,289,0.524,294,0.651,339,3.386,342,1.993,364,3.565,374,2.513,414,1.572,417,2.67,450,1.867,454,1.757,455,2.67,501,3.839,502,3.326,576,1.993,584,3.116,587,2.849,588,2.849,591,3.059,632,4.414,716,2.373,719,2.315,720,2.315,722,2.315,723,2.315,724,2.315,726,2.315,741,3.31,753,2.315,773,2.513,777,2.933,865,1.867,869,1.757,891,1.867,893,2.315,894,2.849,944,2.513,995,2.849,1017,3.629,1020,2.849,1024,2.139,1025,2.139,1035,3.31,1040,4.461,1052,2.77,1078,2.315,1093,2.139,1112,2.849,1153,4.777,1154,2.315,1155,3.625,1156,3.625,1157,4.232,1158,4.232,1159,4.618,1160,4.618,1161,4.232,1162,4.688,1163,3.279,1164,4.618,1165,4.688,1166,3.625,1167,3.279,1168,3.279,1169,3.625,1170,3.279,1171,3.279,1172,3.625,1173,3.31,1174,4.232,1175,3.279,1176,3.625,1177,4.216,1178,5.649,1179,3.625,1180,3.625,1181,3.279,1182,4.232,1183,2.536,1184,2.536,1185,3.625,1186,2.536,1187,2.536,1188,2.536,1189,2.536,1190,3.625,1191,5.082,1192,2.536,1193,2.536,1194,4.232,1195,4.232,1196,2.315,1197,2.536,1198,2.536,1199,2.536,1200,2.536,1201,3.059,1202,4.232,1203,4.232,1204,2.536,1205,2.536,1206,2.536,1207,2.315,1208,2.536,1209,2.536,1210,2.536,1211,4.688,1212,4.048]],["title/components/ModifyQuestionComponent.html",[0,0.242,248,0.869]],["body/components/ModifyQuestionComponent.html",[0,0.384,1,0.413,2,0.045,3,0.045,4,0.513,5,0.513,6,0.836,7,0.037,12,0.559,13,0.734,20,0.166,22,0.767,27,0.805,29,0.513,30,2.011,31,1.059,33,1.059,35,0.161,36,0.148,37,1.763,39,2.171,40,2.524,45,1.12,50,0.93,52,1.98,54,1.655,55,1.742,58,1.733,61,0.805,62,1.968,64,1.52,65,0.017,66,0.231,67,0.184,68,1.288,70,3.13,73,1.251,76,1.865,77,1.655,80,1.131,83,1.251,86,1.139,89,2.376,91,1.873,92,1.381,93,0.912,94,0.335,95,1.589,96,1.519,97,1.98,104,0.514,105,3.362,108,1.419,109,0.413,116,0.61,118,3.417,119,1.214,120,1.214,121,0.767,122,0.847,123,0.584,124,0.098,125,0.847,126,0.847,131,2.143,145,0.074,146,0.703,152,0.847,158,1.439,165,0.731,171,1.317,172,1.573,173,2.384,174,1.62,176,0.15,177,1.214,178,2.511,179,1.455,192,0.942,195,1.584,196,1.728,197,1.844,198,2.507,209,0.47,210,0.836,211,0.801,212,0.836,213,0.513,215,0.513,216,0.413,217,0.513,218,0.413,219,0.513,220,0.431,221,1.014,222,0.513,223,0.431,224,0.491,225,0.836,226,0.413,227,0.513,228,0.703,229,0.513,230,0.413,231,0.513,232,0.413,233,0.513,234,0.431,235,0.513,236,0.413,237,0.513,238,0.431,239,0.45,240,0.513,241,0.413,242,0.45,243,0.513,244,0.431,245,0.513,246,1.014,247,0.836,248,1.027,249,1.617,250,0.513,251,0.431,252,0.513,253,0.413,254,0.513,255,0.431,256,0.45,257,0.513,258,0.431,259,0.513,260,0.431,261,0.513,262,0.431,263,0.513,264,0.431,265,0.513,266,0.431,267,0.491,268,0.513,269,0.006,270,0.006,273,0.982,275,0.3,276,0.654,278,1.291,282,1.111,289,0.765,292,0.513,293,0.272,294,1.068,295,1.009,297,1.145,315,0.272,316,0.3,319,0.33,335,4.396,337,1.584,338,1.314,339,0.997,341,2.159,343,2.62,344,2.143,348,2.511,351,1.439,357,1.314,363,3.194,364,2.244,365,3.016,372,4.851,373,1.606,374,0.997,375,1.606,378,3.183,379,3.501,380,2.892,384,3.428,385,3.318,386,3.542,387,4.597,394,1.06,406,2.892,411,2.972,412,1.131,413,0.942,414,0.892,415,1.945,416,0.942,417,1.06,419,2.472,420,3.183,421,2.892,422,3.417,423,3.13,424,3.13,425,2.376,426,2.892,427,3.698,428,3.698,429,2.347,430,2.347,431,1.728,432,2.143,433,2.507,435,2.347,440,3.13,441,2.892,442,1.98,443,2.347,444,2.62,445,2.143,446,1.606,447,1.606,448,1.439,449,1.606,450,1.06,451,1.606,452,1.439,453,1.606,454,1.626,455,1.728,456,2.143,457,2.143,458,2.143,459,1.98,463,2.62,468,2.892,470,1.439,473,2.347,478,1.131,491,3.827,493,2.62,499,3.428,500,1.314,504,2.347,505,2.347,508,4.216,538,2.188,570,2.335,592,0.997,630,1.439,755,1.439,788,1.98,789,1.314,805,1.626,810,1.439,816,1.728,835,1.606,837,4.216,845,2.62,846,3.318,856,1.606,865,1.06,866,1.314,867,1.314,868,1.314,869,0.997,871,1.214,877,1.606,878,4.216,879,3.428,880,4.769,881,2.62,889,3.698,891,1.06,894,1.131,895,1.606,898,2.62,900,2.347,901,1.439,904,2.347,906,2.62,1032,2.62,1034,1.606,1069,1.606,1073,1.606,1086,1.06,1099,2.62,1201,1.214,1207,1.314,1213,1.606,1214,4.883,1215,3.035,1216,3.035,1217,4.883,1218,3.035,1219,3.035,1220,3.035,1221,4.433,1222,3.035,1223,3.035,1224,4.051,1225,6.4,1226,6.775,1227,3.035,1228,3.035,1229,4.883,1230,4.883,1231,3.035,1232,1.439,1233,3.035,1234,1.861,1235,1.861,1236,3.843,1237,1.861,1238,3.843,1239,1.861,1240,1.861,1241,1.861,1242,6.273,1243,3.843,1244,1.861,1245,1.861,1246,1.861,1247,1.861,1248,1.861,1249,1.861,1250,1.861,1251,1.861,1252,1.861,1253,1.861,1254,1.861,1255,1.861,1256,1.861,1257,1.861,1258,1.861,1259,1.861,1260,3.035,1261,3.843,1262,1.861,1263,3.035,1264,1.861,1265,1.861,1266,1.861,1267,1.861,1268,1.861,1269,1.861,1270,1.861,1271,1.861,1272,5.238,1273,1.861,1274,1.861,1275,3.035,1276,3.035,1277,3.035,1278,1.861,1279,1.861,1280,1.861,1281,5.238,1282,1.861,1283,1.861,1284,1.861,1285,3.035,1286,1.861,1287,3.035,1288,1.861,1289,1.861,1290,1.861,1291,3.035,1292,3.035,1293,1.861,1294,2.62,1295,1.606,1296,1.861,1297,4.883,1298,1.861,1299,3.843,1300,1.861,1301,1.861,1302,3.035,1303,1.861,1304,4.883,1305,4.433,1306,3.035,1307,3.843,1308,1.861,1309,1.861,1310,1.861,1311,1.861,1312,1.861,1313,1.861,1314,1.861,1315,1.861,1316,1.861,1317,1.861,1318,4.433,1319,3.035,1320,1.861,1321,1.861,1322,1.861,1323,1.861,1324,1.861,1325,3.035,1326,3.035,1327,1.861,1328,1.861,1329,1.861,1330,1.861,1331,1.861,1332,1.861,1333,1.861,1334,1.861,1335,1.861,1336,1.861,1337,1.606,1338,1.861,1339,1.861,1340,1.861,1341,1.861,1342,1.861,1343,1.861,1344,1.861,1345,1.861,1346,1.861,1347,1.861,1348,1.861,1349,1.861,1350,1.861,1351,3.428,1352,3.035,1353,3.035]],["title/components/ModifyRequestComponent.html",[0,0.242,251,0.869]],["body/components/ModifyRequestComponent.html",[0,0.412,1,0.667,2,0.073,3,0.073,4,0.828,5,0.828,6,0.828,7,0.114,8,3.672,13,1.887,16,1.368,20,0.248,22,1.239,27,1.301,28,2.36,29,0.828,30,2.123,31,1.213,33,1.213,35,0.088,36,0.215,37,2.044,39,2.507,40,2.507,41,1.522,45,1.316,50,1.065,52,2.872,53,3.305,55,1.738,58,1.799,59,2.147,61,1.905,62,1.799,64,1.374,65,0.017,66,0.222,67,0.176,68,1.162,70,4.049,73,1.239,76,1.875,77,1.513,82,1.239,83,1.239,86,1.128,91,2.087,92,1.368,93,1.323,94,0.227,97,2.362,101,0.686,104,0.41,105,2.36,106,0.796,108,1.461,109,0.667,116,0.986,118,3.982,119,1.961,120,1.961,121,1.239,122,1.368,124,0.158,125,1.368,126,1.368,129,2.254,132,0.676,145,0.073,146,0.697,147,1.712,152,2.371,160,1.712,161,1.301,162,1.712,163,1.712,164,1.712,165,2.048,171,1.965,172,1.723,173,1.368,174,1.668,176,0.194,177,1.961,178,1.441,179,1.441,193,2.123,195,1.239,196,1.712,198,1.961,209,0.76,210,1.213,211,1.162,212,1.213,213,0.828,215,0.828,216,0.667,217,0.828,218,0.667,219,0.828,220,0.697,221,1.374,222,0.828,223,0.697,224,0.793,225,1.213,226,0.667,227,0.828,228,0.697,229,0.828,230,0.667,231,0.828,232,0.667,233,0.828,234,0.697,235,0.828,236,0.667,237,0.828,238,0.697,239,0.727,240,0.828,241,0.667,242,0.727,243,0.828,244,0.697,245,0.828,246,1.374,247,1.213,248,0.697,249,1.783,250,0.828,251,1.207,252,0.828,253,0.667,254,0.828,255,1.02,256,0.727,257,0.828,258,0.697,259,0.828,260,0.697,261,0.828,262,0.697,263,0.828,264,0.697,265,0.828,266,0.697,267,0.793,268,0.828,269,0.009,270,0.009,276,0.531,311,1.142,313,0.969,314,0.969,337,1.239,341,1.239,348,2.111,415,2.637,416,1.522,419,1.522,431,2.966,442,1.961,445,2.123,455,1.712,456,2.123,457,2.123,458,2.123,459,2.872,537,1.961,538,1.712,569,1.611,676,4.409,677,4.409,679,5.122,698,2.637,779,2.123,789,2.123,805,2.792,816,1.712,917,2.325,923,2.325,924,2.325,960,2.872,1001,2.325,1041,4.31,1052,1.522,1086,3.476,1141,2.325,1224,4.435,1232,2.325,1351,3.405,1354,2.325,1355,4.403,1356,3.006,1357,3.006,1358,4.498,1359,5.27,1360,4.951,1361,3.801,1362,4.951,1363,4.403,1364,3.006,1365,3.405,1366,3.006,1367,3.006,1368,3.006,1369,3.006,1370,3.006,1371,3.006,1372,3.006,1373,3.006,1374,3.006,1375,2.595,1376,3.801,1377,2.595,1378,2.123,1379,2.595,1380,2.595,1381,3.801,1382,2.595,1383,3.801,1384,2.595,1385,4.029,1386,3.801,1387,4.435,1388,3.801,1389,6.316,1390,4.721,1391,4.721,1392,5.225,1393,4.932,1394,2.595,1395,4.029,1396,2.325,1397,3.405,1398,2.325,1399,2.325,1400,2.595,1401,2.595,1402,4.498,1403,2.595,1404,2.595,1405,2.595,1406,2.595,1407,2.595,1408,2.595,1409,2.595,1410,2.595,1411,2.595,1412,2.595,1413,2.595,1414,2.595,1415,2.595,1416,3.801,1417,3.801,1418,3.801,1419,3.801,1420,4.403,1421,4.403]],["title/components/MyAbsencesComponent.html",[0,0.242,253,0.832]],["body/components/MyAbsencesComponent.html",[0,0.427,1,0.677,2,0.075,3,0.075,4,0.841,5,0.841,6,0.841,7,0.139,8,3.647,12,0.917,13,1.76,15,4.959,17,2.535,20,0.252,22,1.258,29,0.841,30,2.127,31,1.226,33,1.226,35,0.089,36,0.217,37,2.096,41,1.545,45,1.552,50,1.077,53,3.174,54,1.747,55,1.724,58,2.171,62,1.397,64,1.174,65,0.017,66,0.224,67,0.162,68,1.174,76,1.821,77,1.174,83,2.643,86,1.145,91,1.661,92,2.628,94,0.336,95,1.094,96,1.046,97,1.884,106,1.038,108,1.468,109,0.677,122,1.389,123,0.958,125,1.389,126,1.389,145,0.075,146,0.707,147,2.535,165,2.27,171,1.801,172,1.926,174,1.702,176,0.178,178,1.463,179,1.463,192,2.924,195,2.166,209,0.771,210,1.226,211,1.174,212,1.226,213,0.841,215,0.841,216,0.677,217,0.841,218,0.677,219,0.841,220,0.707,221,1.386,222,0.841,223,0.707,224,0.805,225,1.226,226,0.677,227,0.841,228,0.707,229,0.841,230,0.677,231,0.841,232,0.677,233,0.841,234,0.707,235,0.841,236,0.677,237,0.841,238,0.707,239,0.739,240,0.841,241,0.677,242,0.739,243,0.841,244,0.707,245,0.841,246,1.386,247,1.226,248,0.707,249,1.174,250,0.841,251,0.707,252,0.841,253,1.281,254,0.841,255,0.707,256,0.739,257,0.841,258,0.707,259,0.841,260,0.707,261,0.841,262,0.707,263,0.841,264,0.707,265,0.841,266,0.707,267,0.805,268,0.841,269,0.009,270,0.009,276,0.603,311,1.239,313,1.084,314,1.147,337,1.835,341,1.835,348,2.944,363,3.436,386,3.291,394,1.738,412,1.855,413,1.545,415,1.545,416,1.545,419,1.545,443,3.442,488,2.816,569,2.386,630,2.36,676,4.379,677,4.379,698,3.351,735,2.635,804,2.155,805,2.816,815,2.155,816,3.289,825,3.143,869,2.386,894,1.855,944,2.386,960,2.904,969,3.143,1033,2.635,1041,3.143,1052,2.253,1053,3.843,1054,4.987,1057,3.843,1058,3.843,1062,3.843,1086,3.651,1112,2.705,1115,3.442,1173,3.143,1295,5.302,1337,2.635,1358,4.987,1359,6.071,1361,3.843,1365,3.442,1378,3.143,1385,4.467,1387,4.959,1390,3.442,1391,3.442,1392,4.749,1393,4.467,1395,4.064,1396,2.36,1398,3.442,1399,3.442,1417,3.843,1418,3.843,1419,3.843,1422,2.635,1423,4.452,1424,4.452,1425,5.776,1426,5.776,1427,2.635,1428,4.452,1429,3.052,1430,4.452,1431,3.052,1432,4.452,1433,3.052,1434,4.987,1435,4.452,1436,4.452,1437,6.62,1438,3.052,1439,4.537,1440,4.452,1441,4.452,1442,3.052,1443,3.052,1444,3.052,1445,3.052,1446,3.052,1447,3.052,1448,3.052,1449,3.052,1450,3.052,1451,3.052,1452,3.052,1453,3.052,1454,3.052,1455,3.052,1456,2.36,1457,3.052,1458,3.052,1459,3.052,1460,3.052,1461,3.052,1462,4.452,1463,3.052,1464,3.052,1465,3.052,1466,2.635,1467,4.452,1468,4.452,1469,4.452,1470,4.452,1471,4.452,1472,4.452,1473,4.452,1474,4.452,1475,4.452,1476,4.452,1477,4.452,1478,4.452,1479,4.452,1480,4.452,1481,4.452]],["title/components/MyAbsencesListComponent.html",[0,0.242,255,0.869]],["body/components/MyAbsencesListComponent.html",[0,0.406,1,0.641,2,0.071,3,0.071,4,0.797,5,0.797,6,0.797,7,0.112,8,3.608,13,1.885,16,1.316,17,2.436,20,0.246,22,1.192,27,1.852,28,2.729,29,0.797,30,2.115,31,1.179,33,1.179,35,0.084,36,0.209,37,2.002,39,2.212,40,3.582,45,1.287,48,3.095,49,3.694,50,1.035,51,2.497,52,4.104,53,3.272,55,1.704,58,1.766,59,2.476,61,1.852,62,1.885,64,1.485,65,0.017,66,0.233,67,0.154,68,1.344,73,1.192,76,1.875,77,1.344,82,1.192,83,1.192,86,1.085,91,2.05,92,1.316,93,0.869,95,1.037,96,0.991,97,2.333,101,0.792,104,0.524,105,2.729,106,0.781,108,1.444,109,0.641,116,0.948,118,1.887,119,1.887,120,1.887,121,1.192,122,1.316,124,0.152,125,1.316,126,1.316,129,2.204,132,0.782,145,0.071,146,0.67,147,1.647,152,2.862,160,1.647,161,1.251,162,1.647,163,1.647,164,1.647,165,2.002,171,1.929,172,1.691,173,1.316,174,1.652,176,0.191,177,1.887,178,1.386,179,1.386,187,2.042,188,2.042,190,2.042,191,3.596,192,3.041,193,2.042,195,1.192,196,1.647,198,1.887,205,3.672,206,4.061,207,2.6,208,3.309,209,0.731,210,1.179,211,1.129,212,1.179,213,0.797,215,0.797,216,0.641,217,0.797,218,0.641,219,0.797,220,0.67,221,1.344,222,0.797,223,0.67,224,0.763,225,1.179,226,0.641,227,0.797,228,0.67,229,0.797,230,0.641,231,0.797,232,0.641,233,0.797,234,0.67,235,0.797,236,0.641,237,0.797,238,0.67,239,0.7,240,0.797,241,0.641,242,0.7,243,0.797,244,0.67,245,0.797,246,1.344,247,1.179,248,0.67,249,1.585,250,0.797,251,0.67,252,0.797,253,0.641,254,0.797,255,1.304,256,0.7,257,0.797,258,0.67,259,0.797,260,0.67,261,0.797,262,0.67,263,0.797,264,0.67,265,0.797,266,0.67,267,0.763,268,0.797,269,0.009,270,0.009,276,0.49,311,1.015,313,0.489,314,0.489,337,1.192,341,1.192,348,2.88,415,2.578,416,1.464,419,1.464,431,3.421,442,1.887,445,2.042,455,1.647,456,2.042,457,2.042,458,2.042,459,2.791,504,3.309,537,1.887,538,1.647,569,1.55,676,4.331,677,4.331,679,5.033,698,2.578,779,3.021,805,2.729,816,1.647,819,4.646,917,4.353,918,3.309,923,2.236,924,2.236,926,2.497,944,2.293,945,3.309,946,2.791,947,3.021,948,3.694,949,4.859,950,3.694,951,3.309,952,3.694,953,4.353,954,4.353,955,3.974,956,3.309,957,3.309,958,3.694,959,3.309,960,2.791,1001,2.236,1041,3.596,1052,2.578,1086,2.436,1112,2.6,1141,2.236,1351,3.309,1354,2.236,1360,2.497,1362,2.497,1365,2.236,1375,3.694,1376,5.187,1377,4.859,1378,2.042,1379,2.497,1380,2.497,1381,3.694,1382,2.497,1383,3.694,1384,2.497,1385,3.939,1386,3.694,1387,4.353,1388,3.694,1389,6.273,1390,3.939,1391,3.939,1392,5.168,1393,4.864,1394,2.497,1395,3.939,1396,2.236,1397,3.309,1398,2.236,1399,2.236,1400,2.497,1401,2.497,1402,2.497,1403,2.497,1404,2.497,1405,2.497,1406,2.497,1407,2.497,1408,2.497,1409,2.497,1410,2.497,1411,2.497,1412,2.497,1413,2.497,1414,2.497,1415,2.497,1482,4.279,1483,2.892,1484,2.892,1485,2.892,1486,2.892,1487,2.892,1488,2.892,1489,2.892,1490,2.892,1491,2.892,1492,2.892]],["title/interfaces/MySurveyType.html",[124,0.197,286,0.604]],["body/interfaces/MySurveyType.html",[2,0.102,3,0.102,7,0.083,20,0.141,35,0.121,36,0.27,65,0.017,66,0.267,67,0.135,94,0.594,101,0.729,104,0.736,106,0.768,124,0.42,132,0.64,145,0.195,176,0.233,269,0.012,270,0.012,271,0.738,272,0.773,273,1.2,274,0.809,275,1.26,276,0.7,277,0.671,278,1.049,279,0.704,280,0.609,281,0.704,282,0.738,283,0.64,284,0.704,285,0.704,286,1,287,1.336,288,0.704,289,0.769,290,0.704,291,0.907,292,0.704,293,0.609,294,0.862,295,0.907,296,1,297,1.049,298,0.704,299,1.026,300,0.98,301,1.056,302,0.809,303,0.809,304,0.809,305,0.773,306,0.773,307,0.809,308,0.704,309,0.738,310,1.219,311,0.704,312,0.809,313,0.704,314,0.704,315,0.609,316,0.671,317,0.704,318,0.935,319,0.738,320,0.704,321,0.704,322,0.773,323,0.935,324,0.704,325,0.704,326,0.671,327,0.704,328,0.98,329,0.891,330,0.849,331,0.738,332,0.809,333,0.671,334,0.738]],["title/interfaces/MySurveysResponseType.html",[124,0.197,288,0.634]],["body/interfaces/MySurveysResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,1.06,287,1.065,288,0.927,289,0.817,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/interfaces/PercentualAnswerResponseType.html",[124,0.197,298,0.634]],["body/interfaces/PercentualAnswerResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.735,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.927,299,1.271,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/interfaces/PercentualAnswerType.html",[124,0.197,300,0.664]],["body/interfaces/PercentualAnswerType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.121,36,0.269,65,0.017,66,0.266,67,0.151,94,0.593,101,0.726,104,0.736,106,0.765,124,0.419,132,0.636,145,0.195,176,0.233,269,0.012,270,0.012,271,0.733,272,0.768,273,1.2,274,0.804,275,1.259,276,0.701,277,0.667,278,1.193,279,0.7,280,0.605,281,0.7,282,0.733,283,0.636,284,0.7,285,0.7,286,0.887,287,1.069,288,0.7,289,0.767,290,0.7,291,0.905,292,0.7,293,0.605,294,0.859,295,0.904,296,0.997,297,1.046,298,0.7,299,1.274,300,1.096,301,1.054,302,0.804,303,0.804,304,0.804,305,0.768,306,0.768,307,0.804,308,0.7,309,0.733,310,1.216,311,0.7,312,0.804,313,0.7,314,0.7,315,0.605,316,0.667,317,0.7,318,0.931,319,0.733,320,0.7,321,0.7,322,0.768,323,0.931,324,0.7,325,0.7,326,0.667,327,0.7,328,0.975,329,0.887,330,0.845,331,0.733,332,0.804,333,0.667,334,0.733]],["title/interfaces/QuestionsResponseType.html",[124,0.197,293,0.548]],["body/interfaces/QuestionsResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.138,35,0.119,36,0.266,65,0.017,66,0.265,67,0.172,94,0.595,101,0.718,104,0.732,106,0.756,124,0.419,132,0.625,145,0.194,176,0.232,269,0.012,270,0.012,271,0.721,272,0.755,273,1.206,274,0.79,275,1.266,276,0.7,277,0.656,278,1.037,279,0.688,280,0.595,281,0.688,282,0.721,283,0.625,284,0.688,285,0.688,286,0.878,287,1.057,288,0.688,289,0.815,290,0.688,291,0.9,292,0.688,293,0.795,294,0.976,295,0.997,296,1.1,297,1.188,298,0.688,299,1.01,300,0.965,301,1.048,302,0.79,303,0.79,304,0.79,305,0.755,306,0.755,307,0.79,308,0.688,309,0.721,310,1.21,311,0.688,312,0.79,313,0.688,314,0.688,315,0.595,316,0.656,317,0.688,318,0.92,319,0.721,320,0.688,321,0.688,322,0.755,323,0.92,324,0.688,325,0.688,326,0.656,327,0.688,328,0.965,329,0.878,330,0.836,331,0.721,332,0.79,333,0.656,334,0.721]],["title/interfaces/QuestionsType.html",[124,0.197,295,0.548]],["body/interfaces/QuestionsType.html",[2,0.095,3,0.095,7,0.077,20,0.132,35,0.114,36,0.258,65,0.017,66,0.261,67,0.188,94,0.595,101,0.697,104,0.737,106,0.734,124,0.418,132,0.598,145,0.194,176,0.228,269,0.011,270,0.011,271,0.69,272,0.723,273,1.192,274,0.756,275,1.252,276,0.702,277,0.628,278,1.173,279,0.659,280,0.569,281,0.659,282,0.69,283,0.598,284,0.659,285,0.659,286,0.852,287,1.306,288,0.659,289,0.752,290,0.659,291,0.887,292,0.659,293,0.569,294,0.963,295,0.94,296,0.967,297,1.173,298,0.659,299,0.981,300,1.14,301,1.108,302,1.249,303,1.249,304,1.249,305,1.194,306,1.194,307,1.249,308,0.659,309,0.69,310,1.192,311,0.659,312,0.756,313,0.659,314,0.659,315,0.569,316,0.628,317,0.659,318,0.894,319,0.69,320,0.659,321,0.659,322,0.723,323,0.894,324,0.659,325,0.659,326,0.628,327,0.659,328,0.936,329,0.852,330,0.812,331,0.69,332,0.756,333,0.628,334,0.69]],["title/interfaces/RegisterResponseType.html",[124,0.197,308,0.634]],["body/interfaces/RegisterResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.121,36,0.269,65,0.017,66,0.266,67,0.151,94,0.596,101,0.726,104,0.733,106,0.765,124,0.419,132,0.636,145,0.195,176,0.233,269,0.012,270,0.012,271,0.733,272,0.768,273,1.208,274,0.804,275,1.268,276,0.701,277,0.667,278,1.046,279,0.7,280,0.605,281,0.7,282,0.733,283,0.636,284,0.7,285,0.7,286,0.887,287,1.069,288,0.7,289,0.767,290,0.7,291,0.905,292,0.7,293,0.605,294,0.859,295,0.904,296,0.997,297,1.046,298,0.7,299,1.022,300,0.975,301,1.054,302,0.804,303,0.804,304,0.804,305,0.768,306,0.768,307,0.804,308,0.931,309,0.733,310,1.216,311,0.7,312,0.804,313,0.7,314,0.7,315,0.605,316,0.667,317,0.7,318,0.931,319,0.733,320,0.7,321,0.7,322,0.768,323,0.931,324,0.7,325,0.7,326,0.667,327,0.7,328,0.975,329,0.887,330,0.845,331,0.733,332,0.804,333,0.667,334,0.733]],["title/components/RequestDetailsComponent.html",[0,0.242,258,0.869]],["body/components/RequestDetailsComponent.html",[0,0.422,1,0.959,2,0.106,3,0.072,4,0.808,5,0.808,6,0.808,7,0.102,8,3.468,9,4.163,10,4.163,11,2.072,12,0.881,13,1.71,14,4.078,15,4.89,16,2.337,17,2.463,18,3.054,19,3.054,20,0.261,21,1.671,22,1.209,23,1.671,24,2.463,25,2.533,26,2.533,27,1.27,28,2.318,29,0.808,30,2.118,31,1.191,32,2.533,33,1.191,34,2.533,35,0.085,36,0.211,37,1.946,38,2.533,39,2.485,40,3.228,41,3.059,42,2.269,43,2.533,44,2.533,45,1.527,46,2.533,47,2.533,50,1.243,52,2.821,53,2.462,54,1.807,55,1.624,57,1.914,58,1.357,59,2.336,60,2.269,61,2.223,62,2.217,63,2.533,64,1.355,65,0.017,66,0.254,67,0.167,68,1.355,70,4.002,72,2.269,73,2.606,74,2.533,75,2.533,76,1.785,77,1.355,79,1.914,80,1.783,81,4.894,82,1.209,83,1.209,86,1.101,89,2.318,90,2.533,91,2.077,92,2.337,93,1.543,94,0.222,96,1.005,97,2.032,101,0.677,104,0.273,105,3.038,106,1.002,108,1.519,109,0.651,110,2.533,111,2.533,112,2.533,113,2.533,114,2.533,115,2.533,116,0.962,117,2.533,118,3.943,119,1.914,120,1.914,121,1.209,122,1.335,123,0.921,124,0.154,125,1.335,126,1.335,127,4.267,128,3.972,129,2.453,130,5.218,131,2.072,132,1.097,133,1.783,134,3.972,135,3.972,136,2.269,137,3.972,138,2.269,139,3.972,140,2.269,141,2.269,142,3.972,143,2.269,144,2.269,145,0.072,146,1.19,147,2.925,148,1.783,149,1.914,150,1.914,151,1.485,152,1.968,153,2.533,154,2.269,155,2.533,156,2.269,157,2.533,158,2.269,159,2.533,160,1.671,161,1.27,162,1.671,163,1.671,164,1.671,165,1.153,166,2.533,167,3.734,168,2.533,169,4.434,170,2.533,171,1.482,172,0.881,173,2.975,174,1.658,175,2.533,176,0.222,177,1.914,178,1.406,179,1.406,180,2.628,181,3.734,182,5.459,183,2.533,184,2.269,185,2.269,186,3.344,187,3.054,188,3.054,189,2.821,190,3.054,191,3.054,192,3.2,193,3.054,194,3.734,195,1.782,196,3.228,197,2.628,198,1.914,205,3.698,206,3.842,209,0.741,210,1.191,211,1.141,212,1.191,213,0.808,215,0.808,216,0.651,217,0.808,218,0.651,219,0.808,220,0.68,221,1.355,222,0.808,223,0.68,224,0.774,225,1.191,226,0.651,227,0.808,228,0.68,229,0.808,230,0.651,231,0.808,232,0.651,233,0.808,234,0.68,235,0.808,236,0.651,237,0.808,238,0.68,239,0.71,240,0.808,241,0.651,242,0.71,243,0.808,244,0.68,245,0.808,246,1.355,247,1.191,248,0.68,249,1.141,250,0.808,251,0.68,252,0.808,253,0.651,254,0.808,255,0.68,256,0.71,257,0.808,258,1.19,259,0.808,260,0.68,261,0.808,262,0.68,263,0.808,264,0.68,265,0.808,266,0.68,267,0.774,268,0.808,269,0.009,270,0.009,276,0.447,341,1.209,348,2.462,431,2.463,488,2.318,789,2.072,918,3.344,951,3.344,953,4.383,954,4.383,955,4.002,956,3.344,957,3.344,959,3.344,960,2.821,1224,4.383,1232,2.269,1416,3.734,1493,4.325,1494,2.934,1495,2.934,1496,4.325,1497,4.325,1498,2.934,1499,2.934,1500,2.934,1501,2.934,1502,2.934,1503,2.934,1504,4.325,1505,4.325,1506,4.325,1507,4.325,1508,4.325,1509,4.325]],["title/interfaces/RequestType.html",[101,0.494,124,0.197]],["body/interfaces/RequestType.html",[2,0.098,3,0.098,7,0.08,20,0.136,35,0.117,36,0.263,65,0.017,66,0.264,67,0.178,94,0.592,101,0.803,104,0.738,106,0.972,124,0.419,132,1,145,0.194,176,0.231,269,0.012,270,0.012,271,0.711,272,0.745,273,1.196,274,0.779,275,1.256,276,0.7,277,0.647,278,1.03,279,0.679,280,0.586,281,0.679,282,0.711,283,0.616,284,0.679,285,0.679,286,0.869,287,1.047,288,0.679,289,0.759,290,0.679,291,0.896,292,0.679,293,0.586,294,0.846,295,0.89,296,0.982,297,1.03,298,0.679,299,1.001,300,0.956,301,1.116,302,0.779,303,0.779,304,0.779,305,0.745,306,0.745,307,0.779,308,0.679,309,0.711,310,1.288,311,1.101,312,1.265,313,1.101,314,1.101,315,0.586,316,0.647,317,0.679,318,0.912,319,0.711,320,0.679,321,0.679,322,0.745,323,0.912,324,0.679,325,0.679,326,0.647,327,0.679,328,0.956,329,0.869,330,0.828,331,0.711,332,0.779,333,0.647,334,0.711]],["title/interfaces/RequestsResponseType.html",[124,0.197,309,0.664]],["body/interfaces/RequestsResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.223,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.867,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.971,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/injectables/RequestsSurveysService.html",[93,1.126,365,1.898]],["body/injectables/RequestsSurveysService.html",[0,0.183,2,0.07,3,0.07,7,0.056,12,0.854,20,0.234,22,1.172,23,3.937,35,0.083,36,0.206,37,1.933,39,2.457,45,1.68,50,1.351,54,1.894,55,1.719,57,3.642,58,2.346,59,2.301,61,3.16,62,2.087,64,1.793,65,0.017,66,0.231,67,0.163,68,1.574,76,1.858,77,1.649,79,2.757,80,1.728,82,1.742,86,1.586,91,1.862,93,1.677,95,1.515,96,2.52,97,1.515,104,0.469,108,1.475,109,0.631,116,0.932,123,0.892,124,0.15,125,1.294,126,1.294,129,2.878,131,2.008,145,0.07,146,0.659,152,1.294,160,3.179,162,2.406,163,3.179,164,2.406,165,1.661,172,1.269,174,1.444,176,0.171,178,3.257,179,1.363,189,2.757,195,2.301,249,1.115,269,0.009,270,0.009,273,1.021,275,0.458,276,0.602,286,0.458,288,0.481,289,0.821,292,0.943,293,0.415,294,1.005,295,0.415,296,0.458,315,0.415,316,0.458,320,0.481,333,0.813,334,1.225,335,4.362,341,2.301,348,2.86,351,3.268,363,3.351,365,2.139,370,3.648,372,4.317,374,2.265,378,2.568,380,2.757,386,2.703,387,4.696,412,1.728,413,1.439,415,1.439,416,1.439,419,3.02,420,4.402,421,4.339,422,4.634,423,4.696,424,4.696,425,3.564,426,3.642,427,3.942,428,3.942,433,3.642,440,3.942,441,3.642,448,2.199,454,1.524,468,3.642,500,2.984,525,4.835,537,2.757,698,3.164,787,4.696,788,4.079,865,1.619,866,4.212,867,3.561,868,2.008,879,3.268,889,2.984,891,2.406,900,2.199,901,2.199,1081,3.268,1294,4.82,1427,2.455,1510,2.455,1511,3.648,1512,4.226,1513,4.226,1514,5.583,1515,6.474,1516,5.583,1517,6.474,1518,4.226,1519,4.226,1520,5.583,1521,5.583,1522,4.226,1523,4.226,1524,4.226,1525,2.844,1526,2.844,1527,4.226,1528,2.844,1529,2.844,1530,2.844,1531,4.226,1532,2.844,1533,2.844,1534,2.844,1535,2.844,1536,2.844,1537,2.844,1538,4.226,1539,4.82,1540,2.844,1541,3.648,1542,4.226,1543,3.648,1544,4.82,1545,5.043,1546,3.648,1547,3.648,1548,2.844,1549,3.648,1550,2.844,1551,2.844,1552,5.043,1553,2.844,1554,4.226,1555,2.844,1556,4.226,1557,2.844]],["title/components/SidebarBodyComponent.html",[0,0.242,260,0.869]],["body/components/SidebarBodyComponent.html",[0,0.487,1,0.703,2,0.077,3,0.077,4,0.873,5,0.873,6,0.873,7,0.063,12,0.952,13,1.423,14,1.926,16,2.082,20,0.155,29,0.873,30,2.139,31,1.479,33,1.479,35,0.092,36,0.223,37,1.479,39,1.245,41,1.604,45,1.357,50,1.107,54,1.551,55,1.621,58,0.994,61,1.371,62,1.435,64,0.836,65,0.017,66,0.252,67,0.159,68,0.836,73,2.569,76,1.765,77,1.207,82,1.306,83,2.569,91,1.793,93,1.613,94,0.406,95,1.64,96,1.568,97,2.235,104,0.426,108,1.383,109,0.703,116,1.039,123,0.994,124,0.167,129,2.698,133,1.926,145,0.112,146,1.244,149,4.849,150,3.502,151,2.976,161,2.544,165,1.798,172,1.766,173,2.082,174,1.572,176,0.107,195,1.306,199,2.067,200,3.835,205,2.985,206,3.573,207,1.926,209,0.801,210,1.26,211,1.714,212,1.26,213,0.873,215,0.873,216,0.703,217,0.873,218,0.703,219,0.873,220,0.734,221,1.416,222,0.873,223,0.734,224,0.836,225,1.26,226,0.703,227,0.873,228,0.734,229,0.873,230,0.703,231,0.873,232,0.703,233,0.873,234,0.734,235,0.873,236,0.703,237,0.873,238,0.734,239,0.767,240,0.873,241,0.703,242,0.767,243,0.873,244,1.244,245,1.619,246,2.016,247,1.26,248,0.734,249,1.207,250,0.873,251,0.734,252,0.873,253,0.703,254,0.873,255,0.734,256,0.767,257,0.873,258,0.734,259,0.873,260,1.244,261,0.873,262,0.734,263,0.873,264,1.244,265,2.047,266,0.734,267,0.836,268,0.873,269,0.01,270,0.01,283,0.957,284,0.907,285,0.907,289,0.511,294,0.44,339,3.151,341,1.306,342,1.926,362,2.237,364,3.536,374,1.698,414,1.519,417,1.804,425,1.698,450,1.804,454,1.698,455,1.804,501,3.789,502,3.263,576,3.263,584,3.55,587,3.263,588,3.263,591,2.985,632,4.473,716,1.604,719,2.237,720,2.237,721,4.151,722,2.237,723,2.237,724,2.237,726,2.237,739,2.736,741,2.237,753,3.23,773,2.877,777,3.341,865,1.804,869,2.452,891,2.605,893,2.237,894,1.926,944,2.452,955,3.23,995,2.78,1016,3.538,1017,4.166,1020,3.263,1024,2.067,1025,2.067,1028,3.95,1029,3.538,1035,3.23,1040,4.402,1052,2.717,1078,2.237,1093,2.067,1112,2.78,1153,4.841,1154,2.237,1155,2.451,1156,2.451,1157,3.538,1158,3.538,1159,2.451,1160,2.451,1161,2.451,1164,3.538,1166,2.451,1169,2.451,1172,2.451,1173,2.237,1174,3.538,1176,2.451,1177,3.791,1178,5.024,1179,2.451,1180,2.451,1182,4.152,1183,2.451,1184,2.451,1185,3.538,1186,2.451,1187,2.451,1188,2.451,1189,2.451,1190,3.538,1191,5.024,1192,2.451,1193,2.451,1194,4.152,1195,4.152,1196,2.237,1197,2.451,1198,2.451,1199,3.538,1200,3.538,1201,3.502,1202,4.152,1203,4.152,1204,2.451,1205,2.451,1206,2.451,1207,2.237,1208,3.538,1209,4.546,1210,4.546,1558,3.169,1559,3.169,1560,3.169,1561,6.985,1562,4.575,1563,4.575,1564,3.169,1565,3.169,1566,3.169,1567,3.169,1568,3.169,1569,3.169,1570,3.169,1571,3.169,1572,3.169,1573,3.169,1574,3.169,1575,3.169]],["title/components/SidebarComponent.html",[0,0.242,262,0.869]],["body/components/SidebarComponent.html",[0,0.487,1,1.063,2,0.117,3,0.117,4,1.32,5,1.32,6,1.32,7,0.095,13,1.465,20,0.205,29,1.32,30,2.204,31,1.668,33,1.668,35,0.14,41,2.426,45,1.53,50,1.607,55,1.688,58,1.504,65,0.017,66,0.235,67,0.148,76,1.211,77,1.265,83,2.965,94,0.362,108,1.063,109,1.063,129,2.873,145,0.117,146,1.11,161,2.621,174,1.688,176,0.163,209,1.211,210,1.668,211,1.598,212,1.668,213,1.32,215,1.32,216,1.063,217,1.32,218,1.063,219,1.32,220,1.403,221,1.752,222,1.32,223,1.11,224,1.265,225,1.668,226,1.063,227,1.32,228,1.11,229,1.32,230,1.063,231,1.32,232,1.063,233,1.32,234,1.11,235,1.32,236,1.063,237,1.32,238,1.11,239,1.16,240,1.32,241,1.063,242,1.16,243,1.32,244,1.11,245,1.32,246,2.01,247,1.668,248,1.11,249,1.598,250,1.32,251,1.11,252,1.32,253,1.063,254,1.32,255,1.11,256,1.16,257,1.32,258,1.11,259,1.32,260,1.11,261,1.32,262,1.616,263,1.32,264,1.11,265,1.32,266,1.11,267,1.265,268,1.32,269,0.013,270,0.013,561,4.683,563,5.394,576,4.035,578,4.138,584,3.972,773,2.569,777,3.558,1017,4.464,1020,4.035,1024,3.127,1025,3.127,1576,4.138,1577,6.056,1578,6.056,1579,6.056,1580,4.793,1581,4.793,1582,6.056,1583,4.793]],["title/components/SidebarMenuItem.html",[0,0.242,264,0.869]],["body/components/SidebarMenuItem.html",[0,0.481,1,0.742,2,0.082,3,0.082,4,0.922,5,0.922,6,0.922,7,0.066,12,1.005,13,1.458,14,2.033,16,2.164,20,0.161,29,0.922,30,2.149,31,1.524,33,1.524,35,0.097,36,0.232,37,0.922,39,1.315,41,1.693,45,1.523,50,0.809,54,0.883,55,1.601,58,1.05,62,1.05,64,0.883,65,0.017,66,0.257,67,0.147,68,0.883,73,2.726,76,1.788,77,0.883,82,1.379,83,2.624,91,1.592,93,1.005,94,0.481,95,1.199,96,1.146,97,2.282,108,1.412,109,0.742,116,1.097,123,1.05,124,0.176,129,2.394,133,2.033,145,0.116,146,1.282,149,4.916,150,4.44,151,3.05,161,2.058,165,2.175,172,1.912,173,2.164,174,1.601,176,0.113,195,1.96,199,2.182,200,3.931,207,2.033,209,0.845,210,1.31,211,1.795,212,1.31,213,0.922,215,0.922,216,0.742,217,0.922,218,0.742,219,0.922,220,0.775,221,1.46,222,0.922,223,0.775,224,0.883,225,1.31,226,0.742,227,0.922,228,0.775,229,0.922,230,0.742,231,0.922,232,0.742,233,0.922,234,0.775,235,0.922,236,0.742,237,0.922,238,0.775,239,0.809,240,0.922,241,0.742,242,0.809,243,0.922,244,1.102,245,1.66,246,2.022,247,1.31,248,0.775,249,1.255,250,0.922,251,0.775,252,0.922,253,0.742,254,0.922,255,0.775,256,0.809,257,0.922,258,0.775,259,0.922,260,0.775,261,0.922,262,0.775,263,0.922,264,1.396,265,2.086,266,0.775,267,0.883,268,0.922,269,0.01,270,0.01,283,0.925,284,0.935,285,0.935,289,0.531,294,0.464,339,3.412,342,2.89,364,3.52,374,2.549,414,1.604,417,2.708,450,1.905,454,1.793,455,1.905,501,3.869,502,3.363,576,3.363,584,3.151,587,3.363,588,3.363,591,3.103,632,4.44,716,2.407,719,2.362,720,2.362,722,2.362,723,2.362,724,2.362,726,2.362,741,2.362,753,2.362,773,2.549,777,2.965,865,1.905,869,1.793,891,1.905,893,2.362,894,2.033,919,2.888,944,2.549,995,2.89,1017,4.02,1020,3.363,1024,2.182,1025,2.182,1035,3.358,1040,4.495,1052,2.801,1078,2.362,1093,2.182,1112,2.89,1153,4.805,1154,2.362,1155,2.587,1156,2.587,1157,4.279,1158,4.279,1159,2.587,1160,4.66,1161,2.587,1164,3.678,1166,2.587,1169,2.587,1172,2.587,1173,2.362,1174,3.678,1176,2.587,1177,3.907,1178,5.116,1179,2.587,1180,2.587,1182,4.66,1183,2.587,1184,2.587,1185,3.678,1186,2.587,1187,2.587,1188,2.587,1189,2.587,1190,3.678,1191,5.116,1192,2.587,1193,2.587,1194,4.279,1195,4.279,1196,3.358,1197,4.66,1198,2.587,1199,2.587,1200,2.587,1201,3.103,1202,4.279,1203,4.279,1204,2.587,1205,2.587,1206,2.587,1207,2.362,1208,2.587,1209,2.587,1210,2.587,1212,4.106,1584,4.756,1585,3.345,1586,3.345,1587,3.345,1588,3.345,1589,4.756]],["title/interfaces/SuccessResponseType.html",[124,0.197,315,0.548]],["body/interfaces/SuccessResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.121,36,0.269,65,0.017,66,0.266,67,0.151,94,0.596,101,0.726,104,0.733,106,0.765,124,0.419,132,0.636,145,0.195,176,0.233,269,0.012,270,0.012,271,0.733,272,0.768,273,1.208,274,0.804,275,1.268,276,0.701,277,0.667,278,1.046,279,0.7,280,0.605,281,0.7,282,0.733,283,0.636,284,0.7,285,0.7,286,0.887,287,1.069,288,0.7,289,0.767,290,0.7,291,0.905,292,0.7,293,0.605,294,0.859,295,0.904,296,0.997,297,1.046,298,0.7,299,1.022,300,0.975,301,1.054,302,0.804,303,0.804,304,0.804,305,0.768,306,0.768,307,0.804,308,0.7,309,0.733,310,1.216,311,0.7,312,0.804,313,0.7,314,0.7,315,0.804,316,0.667,317,0.7,318,0.931,319,0.733,320,0.7,321,0.7,322,0.768,323,0.931,324,0.7,325,0.7,326,0.667,327,0.7,328,0.975,329,0.887,330,0.845,331,0.733,332,0.804,333,0.667,334,0.733]],["title/interfaces/SupervisionType.html",[124,0.197,323,0.634]],["body/interfaces/SupervisionType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.121,36,0.269,65,0.017,66,0.266,67,0.151,94,0.593,101,0.726,104,0.738,106,0.765,124,0.419,132,0.636,145,0.195,176,0.233,269,0.012,270,0.012,271,0.733,272,0.768,273,1.2,274,0.804,275,1.259,276,0.7,277,0.667,278,1.046,279,0.7,280,0.605,281,0.7,282,0.733,283,0.636,284,0.7,285,0.7,286,0.887,287,1.069,288,0.7,289,0.767,290,0.7,291,0.905,292,0.7,293,0.605,294,0.859,295,0.904,296,0.997,297,1.046,298,0.7,299,1.022,300,0.975,301,1.054,302,0.804,303,0.804,304,0.804,305,0.768,306,0.768,307,0.804,308,0.7,309,0.733,310,1.296,311,0.7,312,0.804,313,0.7,314,0.7,315,0.605,316,0.667,317,0.7,318,0.931,319,0.733,320,0.7,321,0.7,322,0.768,323,1.046,324,1.115,325,0.7,326,0.667,327,0.7,328,0.975,329,0.887,330,0.845,331,0.733,332,0.804,333,0.667,334,0.733]],["title/interfaces/SupervisionsResponseType.html",[124,0.197,321,0.634]],["body/interfaces/SupervisionsResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.927,322,1.22,323,1.112,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/interfaces/SurveyAdminResponseType.html",[124,0.197,317,0.634]],["body/interfaces/SurveyAdminResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.817,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.927,318,1.112,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/interfaces/SurveyAdminType.html",[124,0.197,318,0.634]],["body/interfaces/SurveyAdminType.html",[2,0.098,3,0.098,7,0.08,20,0.136,35,0.117,36,0.263,65,0.017,66,0.282,67,0.178,94,0.592,101,0.711,104,0.74,106,0.749,124,0.419,132,0.616,145,0.194,176,0.247,269,0.012,270,0.012,271,0.711,272,0.745,273,1.196,274,0.779,275,1.256,276,0.7,277,0.647,278,1.03,279,0.679,280,0.586,281,0.679,282,0.711,283,0.616,284,0.679,285,0.679,286,0.869,287,1.047,288,0.679,289,0.759,290,0.679,291,0.942,292,0.679,293,0.586,294,0.972,295,0.993,296,0.982,297,1.183,298,0.679,299,1.001,300,0.956,301,1.116,302,0.779,303,0.779,304,0.779,305,0.745,306,0.745,307,0.779,308,0.679,309,0.711,310,1.288,311,0.679,312,0.779,313,0.679,314,0.679,315,0.586,316,0.647,317,0.679,318,1.03,319,1.154,320,0.679,321,0.679,322,0.745,323,0.912,324,0.679,325,0.679,326,0.647,327,0.679,328,0.956,329,0.869,330,0.828,331,0.711,332,0.779,333,0.647,334,0.711]],["title/interfaces/SurveyCreationResponseType.html",[124,0.197,316,0.604]],["body/interfaces/SurveyCreationResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.735,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.817,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.884,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/interfaces/SurveyType.html",[124,0.197,296,0.604]],["body/interfaces/SurveyType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.283,67,0.161,94,0.593,101,0.723,104,0.738,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.199,274,0.799,275,1.259,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,1.06,297,1.043,298,0.695,299,1.017,300,0.971,301,1.122,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.295,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/interfaces/SurveysResponseType.html",[124,0.197,320,0.634]],["body/interfaces/SurveysResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.817,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,1.104,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.927,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/interfaces/TableUserType.html",[124,0.197,331,0.664]],["body/interfaces/TableUserType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.119,36,0.266,65,0.017,66,0.283,67,0.167,94,0.593,101,0.72,104,0.735,106,0.758,124,0.419,132,0.628,145,0.194,176,0.232,269,0.012,270,0.012,271,0.724,272,0.758,273,1.198,274,0.794,275,1.258,276,0.701,277,0.659,278,1.039,279,0.691,280,0.597,281,0.691,282,0.724,283,0.628,284,0.691,285,0.691,286,0.88,287,1.06,288,0.691,289,0.764,290,0.691,291,0.901,292,0.691,293,0.597,294,0.854,295,0.898,296,0.991,297,1.039,298,0.691,299,1.013,300,0.967,301,1.05,302,0.794,303,0.794,304,0.794,305,0.758,306,0.758,307,0.794,308,0.691,309,0.724,310,1.211,311,0.691,312,0.794,313,0.691,314,0.691,315,0.597,316,0.659,317,0.691,318,0.923,319,0.724,320,0.691,321,0.691,322,0.758,323,0.923,324,0.691,325,0.691,326,0.659,327,0.691,328,0.967,329,1.102,330,1.05,331,0.967,332,1.274,333,0.659,334,0.724]],["title/interfaces/UserResponseType.html",[124,0.197,325,0.634]],["body/interfaces/UserResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.248,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.948,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.927,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/injectables/UserService.html",[54,0.989,93,1.126]],["body/injectables/UserService.html",[0,0.291,2,0.149,3,0.058,7,0.047,12,0.712,20,0.206,21,1.35,22,1.517,23,3.134,27,1.026,35,0.069,36,0.18,37,2.027,39,2.775,45,1.472,48,1.441,50,1.23,54,0.971,55,1.817,57,2.401,58,2.215,59,1.859,61,3.149,62,2.215,64,1.537,65,0.017,66,0.264,67,0.167,68,1.537,73,1.517,76,1.876,77,1.604,79,2.401,80,1.441,82,2.401,86,1.908,91,1.749,92,1.079,93,1.355,94,0.384,95,1.973,96,2.396,97,1.973,108,1.463,109,0.526,116,0.777,121,0.977,124,0.125,125,3.145,126,1.079,129,2.382,145,0.058,146,0.549,151,1.863,152,1.079,160,2.095,162,2.095,163,2.095,164,2.095,165,1.998,171,0.812,172,1.654,173,1.079,174,0.891,176,0.266,178,1.764,179,1.136,180,2.741,189,2.401,195,2.269,196,3.578,224,0.625,239,1.737,242,1.23,269,0.008,270,0.008,273,0.845,275,0.593,276,0.609,279,0.401,280,0.743,290,0.401,291,0.801,292,1.062,301,0.565,308,0.401,310,0.799,315,0.346,321,0.401,322,1.357,323,0.859,324,0.93,325,0.401,326,0.382,329,0.727,330,0.364,333,0.727,334,0.975,337,1.859,348,2.639,349,5.248,363,3.258,366,5.03,374,1.972,378,2.236,380,2.401,394,2.095,410,5.248,412,1.441,413,1.2,415,2.574,416,1.2,419,1.2,420,1.441,421,1.547,422,1.547,425,3.258,426,2.943,432,2.598,433,2.401,441,2.401,459,2.401,468,2.943,475,2.047,478,3.09,483,1.674,484,5.03,485,5.03,486,5.03,488,3.368,537,3.317,562,3.894,565,3.122,569,2.417,570,2.236,581,1.547,582,1.674,597,2.846,664,5.248,665,2.047,666,5.03,698,2.786,734,1.833,746,1.833,747,2.047,758,2.598,780,2.598,782,3.488,785,2.846,787,4.292,788,3.801,804,2.598,805,2.725,806,3.59,809,2.846,815,2.598,816,2.895,823,1.833,829,3.177,865,1.35,866,3.887,867,3.185,868,1.674,869,1.27,889,2.598,891,2.095,903,3.177,991,2.047,1007,1.833,1016,4.257,1081,2.846,1085,3.177,1086,2.095,1087,2.047,1097,3.177,1113,3.177,1131,2.047,1149,4.752,1177,2.598,1201,2.401,1397,1.833,1511,3.177,1539,2.047,1541,5.03,1543,3.177,1544,4.39,1546,3.177,1547,3.177,1549,3.177,1590,2.047,1591,5.085,1592,5.085,1593,5.085,1594,3.68,1595,4.511,1596,4.511,1597,5.826,1598,3.68,1599,4.511,1600,5.085,1601,5.085,1602,3.68,1603,3.68,1604,2.371,1605,3.68,1606,2.371,1607,3.68,1608,2.371,1609,2.371,1610,2.371,1611,2.371,1612,2.371,1613,2.371,1614,2.371,1615,2.371,1616,2.371,1617,2.371,1618,2.371,1619,2.371,1620,2.371,1621,2.371,1622,2.371,1623,3.68,1624,3.68,1625,4.511,1626,3.68,1627,2.371,1628,3.68,1629,2.371,1630,2.371,1631,2.371,1632,2.371,1633,2.371,1634,2.371,1635,2.371,1636,2.371,1637,2.371,1638,2.371,1639,2.371,1640,2.371,1641,5.085,1642,3.68,1643,4.511,1644,2.371,1645,4.511,1646,3.68,1647,3.68,1648,3.68,1649,2.371,1650,3.68,1651,2.371,1652,2.371,1653,2.371,1654,2.371,1655,4.511,1656,3.68,1657,4.511,1658,6.079,1659,2.371,1660,5.085,1661,2.371,1662,5.085,1663,3.68,1664,5.085,1665,2.371,1666,4.511,1667,3.68,1668,2.371,1669,2.371,1670,2.371,1671,2.371,1672,2.371,1673,2.371,1674,2.371,1675,2.371,1676,2.371,1677,2.371,1678,2.371,1679,2.371,1680,3.68,1681,2.371,1682,2.371,1683,2.371,1684,2.371,1685,3.68,1686,2.371,1687,2.371,1688,2.371,1689,2.371,1690,2.371,1691,2.371,1692,2.371]],["title/components/UserTableComponent.html",[0,0.242,266,0.869]],["body/components/UserTableComponent.html",[0,0.476,1,0.77,2,0.085,3,0.119,4,0.957,5,0.957,6,0.957,7,0.069,12,1.043,13,1.182,16,1.58,20,0.166,21,2.781,22,2.013,23,2.781,27,2.113,28,3.027,29,0.957,30,2.152,31,1.345,33,1.345,35,0.101,36,0.238,37,1.993,41,2.472,45,1.234,48,3.724,50,0.84,54,1.883,55,1.727,58,1.772,59,2.76,61,2.794,62,2.203,64,1.49,65,0.017,66,0.267,67,0.164,68,1.49,73,2.013,76,1.427,77,1.49,83,1.431,85,3.448,86,1.303,91,1.763,92,1.58,93,1.043,95,1.751,96,1.936,108,1.485,109,0.77,116,1.139,121,1.431,123,1.09,124,0.183,128,4.368,145,0.085,146,0.805,152,2.222,161,2.652,165,1.919,171,1.19,174,1.483,176,0.263,180,2.968,209,0.878,210,1.345,211,1.288,212,1.345,213,0.957,215,0.957,216,0.77,217,0.957,218,0.77,219,0.957,220,0.805,221,1.49,222,0.957,223,0.805,224,0.916,225,1.345,226,0.77,227,0.957,228,0.805,229,0.957,230,0.77,231,0.957,232,0.77,233,0.957,234,0.805,235,0.957,236,0.77,237,0.957,238,0.805,239,0.84,240,0.957,241,0.77,242,0.84,243,0.957,244,0.805,245,0.957,246,1.49,247,1.345,248,0.805,249,1.288,250,0.957,251,0.805,252,0.957,253,0.77,254,0.957,255,0.805,256,0.84,257,0.957,258,0.805,259,0.957,260,0.805,261,0.957,262,0.805,263,0.957,264,0.805,265,0.957,266,1.42,267,1.883,268,0.957,269,0.01,270,0.012,276,0.492,280,1.005,291,0.458,329,0.787,330,1.028,337,2.328,341,2.328,363,3.284,413,1.758,478,2.968,483,2.452,538,1.978,564,4.216,567,2.999,584,1.978,587,2.968,588,3.724,591,2.266,661,5.594,662,5.594,760,2.999,771,5.107,773,3.284,777,3.46,778,3.777,780,3.988,823,3.777,972,4.216,1017,4.267,1020,3.924,1196,3.448,1378,3.988,1434,4.216,1439,2.999,1693,2.999,1694,4.884,1695,4.884,1696,4.884,1697,4.884,1698,6.128,1699,6.128,1700,6.128,1701,4.884,1702,4.884,1703,6.457,1704,4.884,1705,4.884,1706,4.884,1707,4.884,1708,4.884,1709,4.884,1710,3.473,1711,3.473,1712,4.884,1713,3.473,1714,5.648,1715,6.128,1716,4.884,1717,3.473,1718,4.884,1719,4.884,1720,3.473,1721,4.884,1722,3.473,1723,3.473,1724,4.884,1725,3.473,1726,3.473,1727,3.473,1728,3.473,1729,3.473,1730,3.473,1731,3.473,1732,3.473,1733,3.473,1734,3.473,1735,3.473,1736,3.473,1737,3.473,1738,3.473,1739,3.473,1740,4.884,1741,4.884,1742,4.884,1743,4.884,1744,4.884,1745,6.128,1746,4.884]],["title/interfaces/UserType.html",[124,0.197,291,0.494]],["body/interfaces/UserType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.119,36,0.266,65,0.017,66,0.283,67,0.167,94,0.593,101,0.72,104,0.735,106,0.758,124,0.419,132,0.628,145,0.194,176,0.232,269,0.012,270,0.012,271,0.724,272,0.758,273,1.198,274,0.794,275,1.258,276,0.701,277,0.659,278,1.039,279,0.691,280,0.597,281,0.691,282,0.724,283,0.628,284,0.691,285,0.691,286,0.88,287,1.06,288,0.691,289,0.764,290,0.691,291,0.927,292,0.691,293,0.597,294,0.854,295,0.898,296,0.991,297,1.039,298,0.691,299,1.013,300,0.967,301,1.12,302,0.794,303,0.794,304,0.794,305,0.758,306,0.758,307,0.794,308,0.691,309,0.724,310,1.211,311,0.691,312,0.794,313,0.691,314,0.691,315,0.597,316,0.659,317,0.691,318,0.923,319,0.724,320,0.691,321,0.691,322,0.758,323,0.923,324,0.691,325,0.691,326,0.659,327,0.691,328,0.967,329,1.102,330,1.05,331,0.724,332,0.794,333,0.659,334,0.724]],["title/interfaces/UsersResponseType.html",[124,0.197,326,0.604]],["body/interfaces/UsersResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.248,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.948,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.884,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/interfaces/UsersSubmittedResponseType.html",[124,0.197,327,0.634]],["body/interfaces/UsersSubmittedResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.248,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.7,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.927,328,1.165,329,0.884,330,0.842,331,0.729,332,0.799,333,0.663,334,0.729]],["title/interfaces/UsersSubmittedType.html",[124,0.197,328,0.664]],["body/interfaces/UsersSubmittedType.html",[2,0.102,3,0.102,7,0.083,20,0.141,35,0.121,36,0.27,65,0.017,66,0.267,67,0.135,94,0.594,101,0.729,104,0.736,106,0.768,124,0.42,132,0.64,145,0.195,176,0.233,269,0.012,270,0.012,271,0.738,272,0.773,273,1.2,274,0.809,275,1.26,276,0.7,277,0.671,278,1.049,279,0.704,280,0.609,281,0.704,282,0.738,283,0.64,284,0.704,285,0.704,286,0.891,287,1.074,288,0.704,289,0.769,290,0.704,291,0.907,292,0.704,293,0.609,294,0.862,295,0.907,296,1,297,1.049,298,0.704,299,1.026,300,0.98,301,1.056,302,0.809,303,0.809,304,0.809,305,0.773,306,0.773,307,0.809,308,0.704,309,0.738,310,1.298,311,0.704,312,0.809,313,0.704,314,0.704,315,0.609,316,0.671,317,0.704,318,0.935,319,0.738,320,0.704,321,0.704,322,0.773,323,0.935,324,0.704,325,0.704,326,0.671,327,0.704,328,1.099,329,0.891,330,0.849,331,0.738,332,0.809,333,0.671,334,0.738]],["title/interfaces/VersionResponseType.html",[124,0.197,333,0.604]],["body/interfaces/VersionResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.161,94,0.595,101,0.723,104,0.733,106,0.761,124,0.419,132,0.632,145,0.194,176,0.232,269,0.012,270,0.012,271,0.729,272,0.763,273,1.207,274,0.799,275,1.267,276,0.701,277,0.663,278,1.043,279,0.695,280,0.601,281,0.695,282,0.729,283,0.632,284,0.695,285,0.695,286,0.884,287,1.065,288,0.695,289,0.766,290,0.695,291,0.903,292,0.695,293,0.601,294,0.856,295,0.901,296,0.994,297,1.043,298,0.695,299,1.017,300,0.971,301,1.052,302,0.799,303,0.799,304,0.799,305,0.763,306,0.763,307,0.799,308,0.695,309,0.729,310,1.214,311,0.695,312,0.799,313,0.695,314,0.695,315,0.601,316,0.663,317,0.695,318,0.927,319,0.729,320,0.695,321,0.695,322,0.763,323,0.927,324,0.695,325,0.695,326,0.663,327,0.695,328,0.971,329,0.884,330,0.842,331,0.729,332,0.799,333,0.884,334,1.165]],["title/coverage.html",[1747,4.447]],["body/coverage.html",[0,0.507,1,0.872,7,0.078,8,3.753,9,3.665,10,3.665,11,4.258,13,1.564,53,1.886,54,1.038,58,1.234,65,0.017,67,0.096,93,1.941,101,0.518,124,0.418,127,2.777,171,2.737,216,0.872,218,0.872,220,0.911,223,0.911,226,0.872,228,0.911,230,0.872,232,0.872,234,0.911,236,0.872,238,0.911,241,0.872,244,0.911,248,0.911,251,0.911,253,0.872,255,0.911,256,0.952,258,0.911,260,0.911,262,0.911,264,0.911,266,0.911,267,1.038,269,0.011,270,0.011,271,0.697,272,1.471,277,0.634,279,0.665,281,0.665,283,0.604,286,0.634,288,0.665,290,0.665,291,0.518,293,0.574,295,0.574,296,0.634,298,0.665,300,0.697,308,0.665,309,0.697,315,0.574,316,0.634,317,0.665,318,0.665,320,0.665,321,0.665,323,0.665,325,0.665,326,0.634,327,0.665,328,0.697,331,0.697,333,0.634,335,4.228,336,3.396,365,1.991,510,3.396,557,3.396,565,2.108,632,3.934,659,3.472,661,3.042,662,3.042,667,3.042,676,3.665,677,3.665,679,3.757,682,3.396,683,3.396,732,3.396,733,3.396,771,4.258,772,4.115,828,3.396,871,4.404,909,3.396,970,3.396,1011,3.396,1030,3.396,1079,3.396,1080,3.396,1153,4.258,1154,4.258,1213,4.594,1354,4.115,1422,3.396,1456,3.042,1510,4.594,1576,3.396,1590,3.396,1693,3.396,1747,3.396,1748,3.934,1749,3.934,1750,3.934,1751,3.934,1752,3.934,1753,6.031,1754,3.934,1755,6.751,1756,7.237,1757,5.322,1758,3.934,1759,3.934,1760,5.322,1761,3.934,1762,5.322,1763,3.934,1764,3.934,1765,3.934,1766,3.934,1767,5.322,1768,3.934,1769,3.934,1770,3.934,1771,5.322,1772,3.934,1773,7.727,1774,6.031,1775,5.322,1776,6.461,1777,3.934,1778,5.322,1779,3.934,1780,3.934,1781,3.934,1782,3.934,1783,3.934,1784,3.934,1785,5.322,1786,3.934,1787,3.934,1788,3.934,1789,3.934,1790,5.322,1791,3.934,1792,3.934,1793,3.934,1794,3.934,1795,3.934,1796,3.934,1797,3.934,1798,3.396,1799,4.594,1800,3.396,1801,4.594,1802,3.396,1803,3.934]],["title/index.html",[35,0.109,910,2.9]],["body/index.html",[0,0.315,1,1.486,53,3.212,54,1.768,65,0.017,93,1.469,124,0.257,145,0.119,189,3.19,209,1.235,216,1.486,218,1.486,220,1.736,223,1.552,226,1.486,228,1.552,230,1.486,232,1.486,234,1.552,236,1.486,238,1.552,241,1.486,244,1.552,248,1.552,251,1.552,253,1.486,255,1.552,256,1.621,258,1.552,260,1.552,262,1.552,264,1.552,266,1.552,269,0.013,270,0.013,365,3.391,565,3.591,592,3.286,593,5.742,594,4.221,595,4.221,596,4.221,597,3.781,598,4.221,599,4.221,600,4.221,601,4.221,602,4.221,603,4.371,604,5.294,605,4.221,606,3.781,716,2.475,910,3.781,1466,4.221,1804,4.889,1805,4.889,1806,4.889]],["title/modules.html",[592,2.76]],["body/modules.html",[65,0.015,269,0.015,270,0.015,592,3.317,593,4.371,603,4.038,616,5.344,1807,6.19,1808,6.19,1809,7.063,1810,6.19,1811,6.19]],["title/routes.html",[716,2.607]],["body/routes.html",[65,0.015,269,0.015,270,0.015,716,3.171]],["title/miscellaneous/variables.html",[871,2.948,1812,2.69]],["body/miscellaneous/variables.html",[8,2.813,9,3.378,10,3.378,11,4.683,17,3.165,18,3.925,19,3.925,20,0.24,35,0.162,65,0.017,67,0.179,95,2.632,96,2.516,97,2.378,127,5.006,134,4.298,135,5.483,136,4.298,137,5.483,138,4.298,139,4.298,140,4.298,141,4.298,142,4.298,143,4.298,144,4.298,172,1.67,269,0.014,270,0.014,869,3.935,871,3.626,1456,5.483,1798,4.799,1799,6.574,1800,4.799,1801,6.121,1802,6.121,1812,4.799,1813,5.558,1814,5.558,1815,5.558,1816,5.558,1817,5.558,1818,6.633]]],"invertedIndex":[["",{"_index":65,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":171,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["0/1",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":105,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["1/2",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["10/18",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["10/25",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":547,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["1000",{"_index":1464,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["11",{"_index":1806,"title":{},"body":{"index.html":{}}}],["12/21",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["15/27",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["16/38",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":1437,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["2",{"_index":189,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["2.htm",{"_index":743,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["2/4",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":701,"title":{},"body":{"modules/AppModule.html":{}}}],["2000",{"_index":485,"title":{},"body":{"components/AdminComponent.html":{},"injectables/UserService.html":{}}}],["21ad21",{"_index":143,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["24",{"_index":1466,"title":{},"body":{"components/MyAbsencesComponent.html":{},"index.html":{}}}],["24/36",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":705,"title":{},"body":{"modules/AppModule.html":{}}}],["3",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["3/6",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1805,"title":{},"body":{"index.html":{}}}],["300",{"_index":711,"title":{},"body":{"modules/AppModule.html":{}}}],["33",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":703,"title":{},"body":{"modules/AppModule.html":{}}}],["3600",{"_index":1465,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["4",{"_index":1804,"title":{},"body":{"index.html":{}}}],["4/10",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["41",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":742,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["5/10",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["5/12",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1453,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["6/10",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["6/13",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1687,"title":{},"body":{"injectables/UserService.html":{}}}],["66",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["7/17",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["78c000",{"_index":707,"title":{},"body":{"modules/AppModule.html":{}}}],["8/13",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["888888",{"_index":140,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["9/18",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["_elementref",{"_index":1166,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["_formbuild",{"_index":1280,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["aaaaaa",{"_index":141,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["absenc",{"_index":13,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["absences'},{'nam",{"_index":254,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["absences.compon",{"_index":678,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["absences.component.css",{"_index":1423,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.html",{"_index":1424,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.t",{"_index":1422,"title":{},"body":{"components/MyAbsencesComponent.html":{},"coverage.html":{}}}],["absences.component.ts:18",{"_index":1442,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:19",{"_index":1446,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:20",{"_index":1444,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:21",{"_index":1445,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:22",{"_index":1443,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:23",{"_index":1428,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:37",{"_index":1429,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:44",{"_index":1431,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:70",{"_index":1433,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:92",{"_index":1438,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences/calendar",{"_index":719,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["absences/employe",{"_index":720,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["absences/mi",{"_index":677,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"coverage.html":{}}}],["absences/myabs",{"_index":722,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["absencescalendarcompon",{"_index":1,"title":{"components/AbsencesCalendarComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["acceder",{"_index":1114,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["accedi",{"_index":1116,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["accord",{"_index":130,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["activ",{"_index":150,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["activatedrout",{"_index":838,"title":{},"body":{"components/CompileComponent.html":{},"components/EmployeeComponent.html":{}}}],["activedayisopen",{"_index":38,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["actual_compon",{"_index":268,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["ad",{"_index":755,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["ad2121",{"_index":136,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":758,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["add/upd",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["add_us",{"_index":809,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["add_user(us",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["addrequestresponsetyp",{"_index":271,"title":{"interfaces/AddRequestResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["admin",{"_index":345,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin'},{'nam",{"_index":217,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["admin.component.css",{"_index":346,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":347,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin@wonderfulcompany.it",{"_index":1119,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["admincompon",{"_index":216,"title":{"components/AdminComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["administr",{"_index":340,"title":{},"body":{"components/AdminComponent.html":{}}}],["again",{"_index":1094,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["aggiunger",{"_index":1118,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["aggiungi",{"_index":1352,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["ai",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["al",{"_index":453,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["all'interno",{"_index":1106,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["all'utent",{"_index":496,"title":{},"body":{"components/AdminComponent.html":{}}}],["all\\'interno",{"_index":1120,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["all_survey",{"_index":1515,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["all_surveys_vers",{"_index":1514,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["alla",{"_index":1404,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["allow",{"_index":574,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["allsurvey",{"_index":511,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["allsurveys'},{'nam",{"_index":219,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["allsurveys.component.css",{"_index":512,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["allsurveys.component.html",{"_index":513,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["allsurveyscompon",{"_index":218,"title":{"components/AllsurveysComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["allsurveyssubscript",{"_index":514,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["alreadi",{"_index":385,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["altr",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["altri",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{}}}],["altro",{"_index":1417,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["amministrator",{"_index":502,"title":{},"body":{"components/AdminComponent.html":{},"components/EmployeesComponent.html":{},"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["angula",{"_index":1695,"title":{},"body":{"components/UserTableComponent.html":{}}}],["angular",{"_index":24,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["angular/common",{"_index":673,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common/http",{"_index":413,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["angular/common/locales/it",{"_index":675,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cor",{"_index":109,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["angular/flex",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/form",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["angular/materi",{"_index":121,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["angular/platform",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/rout",{"_index":414,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["animationdur",{"_index":710,"title":{},"body":{"modules/AppModule.html":{}}}],["annulla",{"_index":1421,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["ano",{"_index":1564,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["anonima",{"_index":1110,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["answer",{"_index":278,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["answer_compil",{"_index":303,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["answer_of_us",{"_index":307,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["answerresponsetyp",{"_index":277,"title":{"interfaces/AnswerResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["answerslist",{"_index":833,"title":{},"body":{"components/CompileComponent.html":{}}}],["answerslist(quest",{"_index":840,"title":{},"body":{"components/CompileComponent.html":{}}}],["api",{"_index":348,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["app",{"_index":221,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["app.compon",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["app/.../abs",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app/abs",{"_index":8,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app/app",{"_index":713,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/app.component.t",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["app/app.component.ts:13",{"_index":580,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.component.ts:14",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.component.ts:25",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.component.ts:32",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.module.t",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["app/block",{"_index":732,"title":{},"body":{"injectables/BlockScrollService.html":{},"coverage.html":{}}}],["app/header/header.component.t",{"_index":1011,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["app/header/header.component.ts:13",{"_index":1019,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app/header/header.component.ts:14",{"_index":1018,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app/header/header.component.ts:20",{"_index":1022,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app/header/header.component.ts:27",{"_index":1021,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app/home/home.component.t",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["app/home/home.component.ts:12",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["app/interfaces.t",{"_index":272,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["app/login",{"_index":1079,"title":{},"body":{"components/LoginDialogComponent.html":{},"coverage.html":{}}}],["app/manag",{"_index":771,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["app/sidebar/sidebar",{"_index":1153,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"coverage.html":{}}}],["app/sidebar/sidebar.component.t",{"_index":1576,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["app/sidebar/sidebar.component.ts:10",{"_index":1579,"title":{},"body":{"components/SidebarComponent.html":{}}}],["app/sidebar/sidebar.component.ts:16",{"_index":1581,"title":{},"body":{"components/SidebarComponent.html":{}}}],["app/sidebar/sidebar.component.ts:9",{"_index":1580,"title":{},"body":{"components/SidebarComponent.html":{}}}],["app/survey",{"_index":335,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"coverage.html":{}}}],["app/user.service.t",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["app/user.service.ts:106",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:148",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:164",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:173",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:184",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:191",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:203",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:210",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:220",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:237",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:258",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:265",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:274",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:28",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:29",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:30",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:31",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:318",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:32",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:33",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:34",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:35",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:36",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:37",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:46",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["appcompon",{"_index":220,"title":{"components/AppComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":762,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["appli",{"_index":990,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["applicazion",{"_index":1107,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["applyfilt",{"_index":1701,"title":{},"body":{"components/UserTableComponent.html":{}}}],["applyfilter(filtervalu",{"_index":1712,"title":{},"body":{"components/UserTableComponent.html":{}}}],["appmodul",{"_index":593,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apport",{"_index":1403,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["approut",{"_index":717,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":603,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["approv",{"_index":17,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["approva",{"_index":961,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["approvar",{"_index":1005,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["approvata",{"_index":188,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["approvazion",{"_index":926,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["argument",{"_index":1168,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["array",{"_index":379,"title":{},"body":{"components/AdminComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["arraystep",{"_index":319,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["assenz",{"_index":200,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["assicurati",{"_index":1331,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["assig",{"_index":1718,"title":{},"body":{"components/UserTableComponent.html":{}}}],["attesa",{"_index":191,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["attribut",{"_index":1298,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["aul",{"_index":1191,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["aula",{"_index":1206,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["authent",{"_index":1541,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["author",{"_index":422,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["avail",{"_index":1811,"title":{},"body":{"modules.html":{}}}],["avanti",{"_index":203,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["aver",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["backend",{"_index":788,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["base",{"_index":22,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["basic",{"_index":1685,"title":{},"body":{"injectables/UserService.html":{}}}],["bearer",{"_index":423,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["befor",{"_index":1321,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["benvenuto",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["block",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["blockscrollservic",{"_index":565,"title":{"injectables/BlockScrollService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["bodi",{"_index":739,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/SidebarBodyComponent.html":{}}}],["body'},{'nam",{"_index":261,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["body.compon",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["body.component.css",{"_index":1559,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.html",{"_index":1560,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.t",{"_index":1154,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"coverage.html":{}}}],["body.component.ts:110",{"_index":1569,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:111",{"_index":1565,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:112",{"_index":1568,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:113",{"_index":1563,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:165",{"_index":1566,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:172",{"_index":1567,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:23",{"_index":1167,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:24",{"_index":1165,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:32",{"_index":1171,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:44",{"_index":1175,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:53",{"_index":1181,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:73",{"_index":1585,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body.component.ts:74",{"_index":1588,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body.component.ts:75",{"_index":1584,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body.component.ts:81",{"_index":1586,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body.component.ts:90",{"_index":1587,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body/sidebar",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"coverage.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/HeaderComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["bootstrap",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["boss",{"_index":280,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["bossresponsetyp",{"_index":279,"title":{"interfaces/BossResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["both",{"_index":1218,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["bottom",{"_index":224,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["bottomlistcompon",{"_index":223,"title":{"components/BottomListComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["bottomsheet",{"_index":808,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["bottomsheetref",{"_index":782,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["bottomsheetref.dismiss",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["box",{"_index":1400,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["brows",{"_index":1809,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["browser/anim",{"_index":614,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":612,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa(email",{"_index":1686,"title":{},"body":{"injectables/UserService.html":{}}}],["build",{"_index":753,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["buildstyleel",{"_index":745,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["button",{"_index":197,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["c7e596",{"_index":709,"title":{},"body":{"modules/AppModule.html":{}}}],["calendar",{"_index":14,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["calendar'},{'nam",{"_index":215,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["calendar.compon",{"_index":686,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["calendar.component.css",{"_index":32,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendar.component.html",{"_index":34,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendar.component.t",{"_index":11,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calendar.component.ts:136",{"_index":84,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:143",{"_index":88,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:159",{"_index":1497,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:161",{"_index":1503,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:162",{"_index":1502,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:171",{"_index":1501,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:179",{"_index":1499,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:188",{"_index":1500,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:197",{"_index":1498,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:52",{"_index":102,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:53",{"_index":103,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:54",{"_index":100,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:55",{"_index":107,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:56",{"_index":98,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:57",{"_index":56,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:63",{"_index":99,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:80",{"_index":71,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:97",{"_index":78,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar/abs",{"_index":10,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calendar/doc",{"_index":26,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendarev",{"_index":81,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendareventact",{"_index":117,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendario",{"_index":199,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["calendarmodul",{"_index":617,"title":{},"body":{"modules/AppModule.html":{}}}],["calendarmodule.forroot",{"_index":696,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":195,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["can't",{"_index":1440,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["cancelclick",{"_index":1360,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["capo",{"_index":1745,"title":{},"body":{"components/UserTableComponent.html":{}}}],["card",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["carica",{"_index":1419,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["case",{"_index":888,"title":{},"body":{"components/CompileComponent.html":{}}}],["chalkboard",{"_index":1179,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["chang",{"_index":129,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["chart",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["charts'},{'nam",{"_index":257,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["charts.compon",{"_index":684,"title":{},"body":{"modules/AppModule.html":{}}}],["charts.component.t",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["charts/request",{"_index":683,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["check",{"_index":165,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AppComponent.html":{},"components/EmployeesComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["checkbox",{"_index":1274,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["chiudi",{"_index":1353,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["choos",{"_index":1683,"title":{},"body":{"injectables/UserService.html":{}}}],["choosen",{"_index":1275,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["chose",{"_index":775,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["circl",{"_index":691,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":146,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["clear",{"_index":815,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/UserService.html":{}}}],["click",{"_index":73,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["clickedinsid",{"_index":1185,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["client",{"_index":567,"title":{},"body":{"components/AppComponent.html":{},"components/UserTableComponent.html":{}}}],["close",{"_index":173,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["cluster_appmodul",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declar",{"_index":599,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_import",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_provid",{"_index":602,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["code",{"_index":23,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["cognom",{"_index":1742,"title":{},"body":{"components/UserTableComponent.html":{}}}],["coincidono",{"_index":1151,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["collaps",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["collapse_if_mobil",{"_index":1197,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["collapsed/expand",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["collect",{"_index":1432,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["color",{"_index":127,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":1709,"title":{},"body":{"components/UserTableComponent.html":{}}}],["come",{"_index":1117,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["compani",{"_index":63,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["compil",{"_index":829,"title":{},"body":{"components/CompileComponent.html":{},"injectables/UserService.html":{}}}],["compilato",{"_index":902,"title":{},"body":{"components/CompileComponent.html":{}}}],["compilazion",{"_index":907,"title":{},"body":{"components/CompileComponent.html":{}}}],["compile'},{'nam",{"_index":227,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["compile.component.css",{"_index":830,"title":{},"body":{"components/CompileComponent.html":{}}}],["compile.component.html",{"_index":831,"title":{},"body":{"components/CompileComponent.html":{}}}],["compilecompon",{"_index":226,"title":{"components/CompileComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["complet",{"_index":180,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["completata",{"_index":556,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["completato",{"_index":553,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":213,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["compresa",{"_index":957,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["con",{"_index":1335,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["condit",{"_index":282,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["condition_answ",{"_index":302,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["condition_confirm",{"_index":304,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["conditionresponsetyp",{"_index":281,"title":{"interfaces/ConditionResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["condizional",{"_index":493,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["conferm",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["conferma",{"_index":193,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["config",{"_index":125,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["config).api",{"_index":179,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["config.dur",{"_index":484,"title":{},"body":{"components/AdminComponent.html":{},"injectables/UserService.html":{}}}],["config.json",{"_index":126,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["confirm",{"_index":1397,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["consid",{"_index":923,"title":{},"body":{"components/EmployeeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["console.log(data.error",{"_index":433,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["console.log(err",{"_index":441,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["console.log(json.stringify(err",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":133,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["constructor(_elementref",{"_index":1163,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["constructor(blockscrollservic",{"_index":1087,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["constructor(bottomsheet",{"_index":1125,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["constructor(cli",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"components/UserTableComponent.html":{}}}],["constructor(data",{"_index":781,"title":{},"body":{"components/BottomListComponent.html":{}}}],["constructor(dialog",{"_index":51,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["constructor(dialogref",{"_index":1232,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["constructor(httpcli",{"_index":1427,"title":{},"body":{"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["constructor(priv",{"_index":995,"title":{},"body":{"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["constructor(requestsservic",{"_index":979,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["constructor(requestssurveysservic",{"_index":520,"title":{},"body":{"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{}}}],["constructor(rout",{"_index":919,"title":{},"body":{"components/EmployeeComponent.html":{},"components/SidebarMenuItem.html":{}}}],["constructor(userservic",{"_index":362,"title":{},"body":{"components/AdminComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["constructro",{"_index":1705,"title":{},"body":{"components/UserTableComponent.html":{}}}],["contain",{"_index":341,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/UserTableComponent.html":{}}}],["content",{"_index":1092,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["context",{"_index":1802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":1100,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["controllato",{"_index":1332,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["cooki",{"_index":666,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["cookieservic",{"_index":664,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["correttament",{"_index":903,"title":{},"body":{"components/CompileComponent.html":{},"injectables/UserService.html":{}}}],["count",{"_index":1001,"title":{},"body":{"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["coupl",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["coverag",{"_index":1747,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["crear",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["creat",{"_index":378,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["createarraystep",{"_index":350,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["createarraystep(survey",{"_index":368,"title":{},"body":{"components/AdminComponent.html":{}}}],["createsurvey",{"_index":1265,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["createsurvey'},{'nam",{"_index":229,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["createsurvey.component.css",{"_index":1267,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["createsurvey.component.html",{"_index":1266,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["createsurveycompon",{"_index":228,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["creati",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["creation",{"_index":1217,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["creato",{"_index":1334,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["credenti",{"_index":1097,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["credenziali",{"_index":1113,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["current",{"_index":417,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["current_us",{"_index":306,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["custom",{"_index":1399,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["custom_reason",{"_index":1358,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["d",{"_index":954,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["da",{"_index":946,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["dai",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["dal",{"_index":1478,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["dangermod",{"_index":457,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["dashboard",{"_index":971,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["data",{"_index":91,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["data.answ",{"_index":497,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["data.condit",{"_index":884,"title":{},"body":{"components/CompileComponent.html":{}}}],["data.employee.nam",{"_index":826,"title":{},"body":{"components/BottomListComponent.html":{}}}],["data.employee.surnam",{"_index":827,"title":{},"body":{"components/BottomListComponent.html":{}}}],["data.error",{"_index":432,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/UserService.html":{}}}],["data.percentu",{"_index":466,"title":{},"body":{"components/AdminComponent.html":{}}}],["data.quest",{"_index":435,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["data.request.end_d",{"_index":1505,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["data.request.id",{"_index":1416,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["data.request.reason",{"_index":1506,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["data.request.start_d",{"_index":1504,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["data.step[0].step",{"_index":437,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["data.success",{"_index":426,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["data.supervis",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["data.survey",{"_index":500,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["data.token",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{}}}],["data.us",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["data.users.filter(us",{"_index":476,"title":{},"body":{"components/AdminComponent.html":{}}}],["data.vers",{"_index":1544,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["databas",{"_index":387,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["database(with",{"_index":373,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["datasourc",{"_index":1698,"title":{},"body":{"components/UserTableComponent.html":{}}}],["datat",{"_index":1714,"title":{},"body":{"components/UserTableComponent.html":{}}}],["date",{"_index":106,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"modules/AppModule.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["date(this.data.request.end_d",{"_index":1388,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["date(this.data.request.start_d",{"_index":1386,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["date(this.end_d",{"_index":1458,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["date(this.start_d",{"_index":1457,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["date.now",{"_index":1199,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["date:'d",{"_index":1571,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:'eee",{"_index":1570,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:'h:mm:ss",{"_index":1572,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:'mmmm",{"_index":204,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["date:\\'d",{"_index":1574,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:\\'eee",{"_index":1573,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:\\'h:mm:ss",{"_index":1575,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:\\'mmmm",{"_index":214,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["datetim",{"_index":1200,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["day",{"_index":15,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["dayclick",{"_index":46,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["dayclicked(undefin",{"_index":69,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["dayli",{"_index":75,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["debug",{"_index":768,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["declar",{"_index":595,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["decor",{"_index":789,"title":{},"body":{"components/BottomListComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["default",{"_index":95,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmployeeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":55,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["dei",{"_index":968,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["del",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["delet",{"_index":372,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["deleteansw",{"_index":1227,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["deleteanswer(answ",{"_index":1236,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["deletebeforeinsert(quest",{"_index":1322,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["deletequest",{"_index":1518,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["deletequestion(quest",{"_index":1524,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["deletesurvey",{"_index":351,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["deletesurvey(survey",{"_index":370,"title":{},"body":{"components/AdminComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["dell",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["della",{"_index":430,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["depend",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["descript",{"_index":12,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["desktop",{"_index":1156,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["detail",{"_index":90,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["details'},{'nam",{"_index":259,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["details.component.css",{"_index":1494,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["details.component.html",{"_index":1495,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["details/request",{"_index":1493,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["devic",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["di",{"_index":192,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/EmployeeComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["dialog",{"_index":40,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["dialog'},{'nam",{"_index":240,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["dialog.compon",{"_index":668,"title":{},"body":{"modules/AppModule.html":{}}}],["dialog.component.css",{"_index":1082,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.html",{"_index":1083,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.t",{"_index":1080,"title":{},"body":{"components/LoginDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:14",{"_index":1102,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":1101,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1088,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":1090,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1095,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":1098,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog/login",{"_index":667,"title":{},"body":{"modules/AppModule.html":{},"components/LoginDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":1224,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["diffday",{"_index":1462,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["dimens",{"_index":1708,"title":{},"body":{"components/UserTableComponent.html":{}}}],["dipendenti",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["diplay",{"_index":922,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["direct",{"_index":212,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["disabl",{"_index":746,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["discard",{"_index":1394,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["display",{"_index":16,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["displayed_request",{"_index":917,"title":{},"body":{"components/EmployeeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["displayedcolumn",{"_index":1699,"title":{},"body":{"components/UserTableComponent.html":{}}}],["disponibil",{"_index":1509,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["document",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["document.body.appendchild",{"_index":759,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["document.body.removechild",{"_index":761,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["document.createel",{"_index":764,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["document:click",{"_index":1162,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["document:click(targetel",{"_index":1170,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["domanda",{"_index":491,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["done",{"_index":552,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["dovranno",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["drive",{"_index":1264,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["due",{"_index":1150,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["durant",{"_index":428,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["e",{"_index":492,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{}}}],["e3fae3",{"_index":144,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["ecc",{"_index":375,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["eeee",{"_index":953,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["effect",{"_index":924,"title":{},"body":{"components/EmployeeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["element",{"_index":211,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["element.email",{"_index":1744,"title":{},"body":{"components/UserTableComponent.html":{}}}],["element.nam",{"_index":1741,"title":{},"body":{"components/UserTableComponent.html":{}}}],["element.surnam",{"_index":1743,"title":{},"body":{"components/UserTableComponent.html":{}}}],["elementref",{"_index":1164,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["elimina",{"_index":504,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["eliminato",{"_index":448,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["email",{"_index":330,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["emiss",{"_index":1136,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["emit",{"_index":161,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["emit_employe",{"_index":1702,"title":{},"body":{"components/UserTableComponent.html":{}}}],["emit_employee(us",{"_index":1716,"title":{},"body":{"components/UserTableComponent.html":{}}}],["emit_toggl",{"_index":1209,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["emit_toggle_if_mobil",{"_index":1210,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["emitt",{"_index":1024,"title":{},"body":{"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{}}}],["employe",{"_index":148,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["employee'},{'nam",{"_index":231,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["employee.component.css",{"_index":913,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employee.component.html",{"_index":914,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employee.email",{"_index":943,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employee.nam",{"_index":942,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["employee.surnam",{"_index":941,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["employee/boss",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["employee_request",{"_index":915,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employee_requestssubscript",{"_index":916,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employeecompon",{"_index":230,"title":{"components/EmployeeComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["employees'},{'nam",{"_index":233,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["employees.component.css",{"_index":973,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["employees.component.html",{"_index":974,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["employeescompon",{"_index":232,"title":{"components/EmployeesComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["employeessubscript",{"_index":975,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["empti",{"_index":1099,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["enabl",{"_index":747,"title":{},"body":{"injectables/BlockScrollService.html":{},"injectables/UserService.html":{}}}],["enabletrac",{"_index":731,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["encod",{"_index":1688,"title":{},"body":{"injectables/UserService.html":{}}}],["end",{"_index":1295,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["end_dat",{"_index":314,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["endofday",{"_index":111,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["endofmonth",{"_index":112,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["enter",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["entri",{"_index":1177,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["entrycompon",{"_index":608,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/.../environment.prod.t",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/.../environment.t",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environment.prod.t",{"_index":1798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment.t",{"_index":1800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":1141,"title":{},"body":{"components/ManageUsersComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["err",{"_index":468,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["error",{"_index":273,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["esser",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["esso",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{}}}],["even",{"_index":163,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["event",{"_index":41,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/HeaderComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["event.target",{"_index":1169,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["event.target.fil",{"_index":1396,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["eventemitt",{"_index":1020,"title":{},"body":{"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["events.length",{"_index":170,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["execut",{"_index":1721,"title":{},"body":{"components/UserTableComponent.html":{}}}],["expand",{"_index":342,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["export",{"_index":145,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"index.html":{}}}],["extern",{"_index":1189,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["fa",{"_index":1178,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["fae3e3",{"_index":138,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["fail",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["fals",{"_index":172,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["federico",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["feri",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["field",{"_index":804,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/UserService.html":{}}}],["field'",{"_index":1091,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["filechang",{"_index":1361,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["filechange(ev",{"_index":1365,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["filelist",{"_index":1359,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["fill",{"_index":845,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["fillansw",{"_index":834,"title":{},"body":{"components/CompileComponent.html":{}}}],["fillanswer(quest",{"_index":843,"title":{},"body":{"components/CompileComponent.html":{}}}],["fillanswerpercentu",{"_index":352,"title":{},"body":{"components/AdminComponent.html":{}}}],["fillanswerpercentual(quest",{"_index":376,"title":{},"body":{"components/AdminComponent.html":{}}}],["fillanswerslist",{"_index":1228,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["fillanswerslist(quest",{"_index":1238,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["fillquest",{"_index":353,"title":{},"body":{"components/AdminComponent.html":{}}}],["fillquestions(survey",{"_index":382,"title":{},"body":{"components/AdminComponent.html":{}}}],["filluserlist",{"_index":354,"title":{},"body":{"components/AdminComponent.html":{}}}],["filluserlist(survey",{"_index":388,"title":{},"body":{"components/AdminComponent.html":{}}}],["filter",{"_index":152,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["filter((data",{"_index":1543,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["filtervalu",{"_index":1715,"title":{},"body":{"components/UserTableComponent.html":{}}}],["filtervalue.tolowercas",{"_index":1735,"title":{},"body":{"components/UserTableComponent.html":{}}}],["filtervalue.trim",{"_index":1733,"title":{},"body":{"components/UserTableComponent.html":{}}}],["final",{"_index":895,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["fine",{"_index":956,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["finish",{"_index":850,"title":{},"body":{"components/CompileComponent.html":{}}}],["finishcr",{"_index":1330,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["first",{"_index":893,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["firstctrl",{"_index":1286,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["firstformgroup",{"_index":1268,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["flag",{"_index":854,"title":{},"body":{"components/CompileComponent.html":{}}}],["flexlayoutmodul",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["flow",{"_index":991,"title":{},"body":{"components/EmployeesComponent.html":{},"injectables/UserService.html":{}}}],["fn",{"_index":115,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["forc",{"_index":160,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["form",{"_index":805,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["format",{"_index":671,"title":{},"body":{"modules/AppModule.html":{}}}],["formbuild",{"_index":1260,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["formcontrol",{"_index":1447,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["formgroup",{"_index":1261,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["formsmodul",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":1292,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["forwardstep",{"_index":835,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["forwardstep(stepp",{"_index":847,"title":{},"body":{"components/CompileComponent.html":{}}}],["found",{"_index":483,"title":{},"body":{"components/AdminComponent.html":{},"injectables/BlockScrollService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["frontend",{"_index":338,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["full",{"_index":729,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["function",{"_index":478,"title":{},"body":{"components/AdminComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["funtion",{"_index":1511,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["gener",{"_index":158,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["generali",{"_index":1008,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["gestion",{"_index":1028,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["gestir",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["gestor",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{}}}],["get",{"_index":79,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["get(this.api",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{}}}],["get_boss_nam",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["get_boss_name(id_employe",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["get_icon",{"_index":1159,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["get_login_statu",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["get_nam",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["get_numb",{"_index":819,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["get_pending_requests_numb",{"_index":976,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_pending_requests_number(employee.id",{"_index":1004,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_pending_requests_number(id",{"_index":981,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_requests_numb",{"_index":977,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_requests_number(employee.id",{"_index":1003,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_requests_number(id",{"_index":983,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_section_act",{"_index":1160,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["get_state_label",{"_index":918,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["get_state_label(data.request.st",{"_index":1508,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["get_state_label(request.st",{"_index":950,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["get_state_label(st",{"_index":187,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["get_state_label_class",{"_index":1496,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["get_state_label_class(st",{"_index":194,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["get_token",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["get_us",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["get_user_by_id",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["get_user_by_id(id",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["get_user_nam",{"_index":182,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["giorni",{"_index":1476,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["giustificativo",{"_index":960,"title":{},"body":{"components/EmployeeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["go",{"_index":554,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["goforward(stepp",{"_index":1293,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["goforwardend(stepp",{"_index":1314,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["graph",{"_index":1810,"title":{},"body":{"modules.html":{}}}],["grasso",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":395,"title":{},"body":{"components/AdminComponent.html":{}}}],["green",{"_index":142,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["grey",{"_index":139,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["ha",{"_index":966,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["handl",{"_index":1173,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/MyAbsencesComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["handler",{"_index":72,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["header",{"_index":420,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/HeaderComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["header'},{'nam",{"_index":235,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["header.component.css",{"_index":1014,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1015,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.compon",{"_index":656,"title":{},"body":{"modules/AppModule.html":{}}}],["headercompon",{"_index":234,"title":{"components/HeaderComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["here",{"_index":699,"title":{},"body":{"modules/AppModule.html":{}}}],["hidden",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["hide",{"_index":1196,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["hold",{"_index":1131,"title":{},"body":{"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["home",{"_index":721,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EmployeeComponent.html":{},"components/HomeComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["home'},{'nam",{"_index":237,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["home.component.css",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecompon",{"_index":236,"title":{"components/HomeComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["hostlisten",{"_index":1161,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["hostlistener(\"document:click",{"_index":1183,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["html",{"_index":210,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["htmlstyleel",{"_index":750,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["http",{"_index":1294,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["httpclient",{"_index":363,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["httpclientmodul",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":412,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["httpheaders().set",{"_index":421,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["https://mattlewis92.github.io/angular",{"_index":25,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["https://www.bennadel.com/blog/3374",{"_index":737,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["icon",{"_index":455,"title":{},"body":{"components/AdminComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["id",{"_index":301,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["id_boss",{"_index":324,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["id_employe",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["id_survey",{"_index":287,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["id_us",{"_index":310,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["identifi",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["impiegati",{"_index":1002,"title":{},"body":{"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/ManageUsersComponent.html":{}}}],["impiegato",{"_index":940,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["implement",{"_index":27,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["import",{"_index":108,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["inaspettato",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["includ",{"_index":1278,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["increas",{"_index":1311,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":128,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"components/UserTableComponent.html":{}}}],["indietro",{"_index":201,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["inform",{"_index":1263,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["inizio",{"_index":951,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["inject",{"_index":93,"title":{"injectables/BlockScrollService.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["inject(mat_bottom_sheet_data",{"_index":793,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["inject(mat_dialog_data",{"_index":177,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["injectpercentu",{"_index":355,"title":{},"body":{"components/AdminComponent.html":{}}}],["injectpercentual(id",{"_index":390,"title":{},"body":{"components/AdminComponent.html":{}}}],["inner",{"_index":1135,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["innerstrokecolor",{"_index":708,"title":{},"body":{"modules/AppModule.html":{}}}],["innerstrokewidth",{"_index":704,"title":{},"body":{"modules/AppModule.html":{}}}],["input",{"_index":83,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["inserimento",{"_index":1149,"title":{},"body":{"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["inserisci",{"_index":1111,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["insert",{"_index":380,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["insertansw",{"_index":1229,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["insertquest",{"_index":1296,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["instanc",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["interfac",{"_index":124,"title":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"index.html":{}}}],["interv",{"_index":865,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["interval(1000",{"_index":1283,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["interval(1000).pip",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["interval(2000).pip",{"_index":1538,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["invia",{"_index":1115,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["iscondit",{"_index":836,"title":{},"body":{"components/CompileComponent.html":{}}}],["isconditioned(quest",{"_index":852,"title":{},"body":{"components/CompileComponent.html":{}}}],["ismax",{"_index":356,"title":{},"body":{"components/AdminComponent.html":{}}}],["ismax(percentu",{"_index":392,"title":{},"body":{"components/AdminComponent.html":{}}}],["issameday",{"_index":113,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["issameday(this.viewd",{"_index":168,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["issamemonth",{"_index":114,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["issamemonth(d",{"_index":166,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["issubmit",{"_index":517,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["issubmitted(survey_id",{"_index":523,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["it'",{"_index":1081,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["item",{"_index":149,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["item'},{'nam",{"_index":247,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["item.component.css",{"_index":1157,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["item.component.html",{"_index":1158,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["item.nam",{"_index":1589,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["item.short_nam",{"_index":1211,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["item[0",{"_index":1212,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarMenuItem.html":{}}}],["iter",{"_index":1547,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["json.stringify(quest",{"_index":1555,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["json.stringify(this.quest",{"_index":1309,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["json.stringify(this.us",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["justif",{"_index":1448,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["justification_fil",{"_index":312,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["l'invio",{"_index":429,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["l'operazion",{"_index":440,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["la",{"_index":490,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginDialogComponent.html":{}}}],["label",{"_index":186,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["last",{"_index":164,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["layout",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["le",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["legend",{"_index":209,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"index.html":{}}}],["length",{"_index":1439,"title":{},"body":{"components/MyAbsencesComponent.html":{},"components/UserTableComponent.html":{}}}],["less",{"_index":1436,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["list",{"_index":62,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["list'},{'nam",{"_index":225,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["list.compon",{"_index":680,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":1375,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["list.component.html",{"_index":779,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["list.component.t",{"_index":1354,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"coverage.html":{}}}],["list.component.ts:101",{"_index":1374,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:102",{"_index":1372,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:103",{"_index":1373,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:104",{"_index":1369,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:105",{"_index":1363,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:108",{"_index":1371,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:109",{"_index":1370,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:130",{"_index":1364,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:135",{"_index":1366,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:140",{"_index":1367,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:167",{"_index":1368,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:23",{"_index":1489,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:24",{"_index":1492,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:25",{"_index":1491,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:26",{"_index":1482,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:29",{"_index":1490,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:46",{"_index":1483,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:59",{"_index":1484,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:66",{"_index":1485,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:78",{"_index":1486,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:84",{"_index":1488,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list/mi",{"_index":679,"title":{},"body":{"modules/AppModule.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"coverage.html":{}}}],["lista",{"_index":1152,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["listen",{"_index":1172,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["liter",{"_index":70,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["load",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["load_cooki",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["local",{"_index":669,"title":{},"body":{"modules/AppModule.html":{}}}],["locale_id",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["localeit",{"_index":674,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["logged_in",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["logic",{"_index":1220,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["login",{"_index":239,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["logindialogcompon",{"_index":238,"title":{"components/LoginDialogComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["logo",{"_index":1023,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logout",{"_index":1016,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarBodyComponent.html":{},"injectables/UserService.html":{}}}],["logresponsetyp",{"_index":290,"title":{"interfaces/LogResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["lowercas",{"_index":1736,"title":{},"body":{"components/UserTableComponent.html":{}}}],["made",{"_index":147,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["maggiori",{"_index":1474,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["make",{"_index":774,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["make_event_list",{"_index":47,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["malattia",{"_index":1390,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["manag",{"_index":242,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["manageuserscompon",{"_index":241,"title":{"components/ManageUsersComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["map",{"_index":80,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["map(data",{"_index":1549,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["mat_bottom_sheet_data",{"_index":791,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["mat_dialog_data",{"_index":120,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["matbadgemodul",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheet",{"_index":792,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["matbottomsheetmodul",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheetref",{"_index":783,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["matbuttonmodul",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodul",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":270,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":639,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodul",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":52,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["matdialogconfig",{"_index":119,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["matdialogmodul",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":118,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["matdividermodul",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["materi",{"_index":778,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/UserTableComponent.html":{}}}],["matexpansionmodul",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodul",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["math.abs(end.gettim",{"_index":1460,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["math.ceil(timediff",{"_index":1463,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["maticonmodul",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodul",{"_index":647,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodul",{"_index":648,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":649,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodul",{"_index":650,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodul",{"_index":651,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodul",{"_index":652,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":366,"title":{},"body":{"components/AdminComponent.html":{},"injectables/UserService.html":{}}}],["matsnackbarconfig",{"_index":410,"title":{},"body":{"components/AdminComponent.html":{},"injectables/UserService.html":{}}}],["matsnackbarmodul",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["matstepp",{"_index":411,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["matsteppermodul",{"_index":654,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasourc",{"_index":1724,"title":{},"body":{"components/UserTableComponent.html":{}}}],["mattabledatasource(us",{"_index":1727,"title":{},"body":{"components/UserTableComponent.html":{}}}],["mattablemodul",{"_index":655,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1452,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["mean",{"_index":153,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["menu",{"_index":265,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["menuitem",{"_index":283,"title":{"interfaces/MenuItem.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["mesi",{"_index":1475,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["messag",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["metadata",{"_index":29,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["method",{"_index":45,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["mini",{"_index":245,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["minisidebaritem",{"_index":244,"title":{"components/MiniSidebarItem.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["miscellan",{"_index":1812,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmmm",{"_index":955,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["mobil",{"_index":587,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["modal",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/UserService.html":{}}}],["mode",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["modif",{"_index":1214,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["modifi",{"_index":249,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["modifica",{"_index":1351,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["modifich",{"_index":1402,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["modifyquest",{"_index":1519,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["modifyquestion(quest",{"_index":1527,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["modifyquestioncompon",{"_index":248,"title":{"components/ModifyQuestionComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["modifyrequestcompon",{"_index":251,"title":{"components/ModifyRequestComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["modul",{"_index":592,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModifyQuestionComponent.html":{},"index.html":{},"modules.html":{}}}],["month",{"_index":1454,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["more",{"_index":1441,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["mostrar",{"_index":947,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["motivazion",{"_index":959,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["move",{"_index":1312,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["multipl",{"_index":1242,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["multiplequest",{"_index":1230,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["my_survey",{"_index":1517,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["my_surveys_vers",{"_index":1516,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["myabsencescompon",{"_index":253,"title":{"components/MyAbsencesComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["myabsenceslistcompon",{"_index":255,"title":{"components/MyAbsencesListComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["myrequest",{"_index":1376,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["myrequestssubscript",{"_index":1377,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["mysurvey",{"_index":515,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["mysurveysresponsetyp",{"_index":288,"title":{"interfaces/MySurveysResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["mysurveyssubscript",{"_index":516,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["mysurveytyp",{"_index":286,"title":{"interfaces/MySurveyType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["name",{"_index":66,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["name,surname,email",{"_index":1694,"title":{},"body":{"components/UserTableComponent.html":{}}}],["navbar",{"_index":1013,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigazion",{"_index":1109,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["nb",{"_index":1477,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["need",{"_index":735,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/MyAbsencesComponent.html":{}}}],["nel",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["nessun",{"_index":1006,"title":{},"body":{"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{}}}],["nessuna",{"_index":945,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["nessuno",{"_index":1009,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["new",{"_index":58,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/HeaderComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["next",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":690,"title":{},"body":{"modules/AppModule.html":{}}}],["ngcircleprogressmodul",{"_index":689,"title":{},"body":{"modules/AppModule.html":{}}}],["ngcircleprogressmodule.forroot",{"_index":697,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodel",{"_index":1272,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["ngmodul",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":48,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["ngoninit",{"_index":357,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["ngx",{"_index":665,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["ngxchartsmodul",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["nome",{"_index":1740,"title":{},"body":{"components/UserTableComponent.html":{}}}],["nomina",{"_index":823,"title":{},"body":{"components/BottomListComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["non",{"_index":488,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/EmployeeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{}}}],["none",{"_index":508,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["nota",{"_index":1471,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["note",{"_index":21,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["now",{"_index":1277,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["null",{"_index":816,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":104,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["nuovi",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{}}}],["nuovo",{"_index":1469,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["o",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["obj",{"_index":1202,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["object",{"_index":869,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":61,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["observa",{"_index":1725,"title":{},"body":{"components/UserTableComponent.html":{}}}],["oggi",{"_index":202,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["ogni",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{}}}],["ok",{"_index":196,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{}}}],["old_end_d",{"_index":1409,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["old_end_date.gettim",{"_index":1411,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["old_start_d",{"_index":1408,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["old_start_date.gettim",{"_index":1413,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["on",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["onclick(targetel",{"_index":1184,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["ondestroy",{"_index":28,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/UserTableComponent.html":{}}}],["oninit",{"_index":344,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["oop",{"_index":890,"title":{},"body":{"components/CompileComponent.html":{}}}],["oorder",{"_index":1208,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["open",{"_index":89,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["openbottomsheet",{"_index":1121,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["openbottomsheet(employe",{"_index":821,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["opendialog",{"_index":49,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["opendialog(ev",{"_index":87,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["opendialog(quest",{"_index":1327,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["opendialog(request",{"_index":1487,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["opens/clos",{"_index":74,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["opensurvey",{"_index":518,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["opensurvey(survey",{"_index":528,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["oper",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/LoginDialogComponent.html":{}}}],["option",{"_index":68,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["orazio",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["order",{"_index":773,"title":{},"body":{"components/BottomListComponent.html":{},"components/HeaderComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["ordrd",{"_index":1582,"title":{},"body":{"components/SidebarComponent.html":{}}}],["other",{"_index":396,"title":{},"body":{"components/AdminComponent.html":{}}}],["otherwis",{"_index":1450,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["out",{"_index":606,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["outer",{"_index":777,"title":{},"body":{"components/BottomListComponent.html":{},"components/HeaderComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["outerstrokecolor",{"_index":706,"title":{},"body":{"modules/AppModule.html":{}}}],["outerstrokewidth",{"_index":702,"title":{},"body":{"modules/AppModule.html":{}}}],["output",{"_index":1017,"title":{},"body":{"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["over",{"_index":571,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{}}}],["overflow",{"_index":770,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["overflow:hidden",{"_index":754,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["overview",{"_index":910,"title":{"index.html":{}},"body":{"components/EmployeeComponent.html":{},"index.html":{}}}],["pa",{"_index":1290,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["page",{"_index":572,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["param",{"_index":932,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["paramet",{"_index":64,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["params[\"employe",{"_index":934,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["part",{"_index":1192,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["parts[1",{"_index":1194,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["pass",{"_index":406,"title":{},"body":{"components/AdminComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["password",{"_index":806,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["password2",{"_index":807,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["password_confirm",{"_index":1122,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["path",{"_index":718,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":728,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pend",{"_index":19,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":825,"title":{},"body":{"components/BottomListComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["percentag",{"_index":381,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{}}}],["percentagesurveyssubmit",{"_index":519,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["percentu",{"_index":299,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["percentual",{"_index":555,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["percentual.answ",{"_index":506,"title":{},"body":{"components/AdminComponent.html":{}}}],["percentual.percentu",{"_index":465,"title":{},"body":{"components/AdminComponent.html":{}}}],["percentual.percentual}}%{{percentual.percentu",{"_index":507,"title":{},"body":{"components/AdminComponent.html":{}}}],["percentual_answ",{"_index":305,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["percentual_answers.push(percentu",{"_index":467,"title":{},"body":{"components/AdminComponent.html":{}}}],["percentualanswerresponsetyp",{"_index":298,"title":{"interfaces/PercentualAnswerResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["percentualanswertyp",{"_index":300,"title":{"interfaces/PercentualAnswerType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["perderai",{"_index":449,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["period",{"_index":1435,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["periodi",{"_index":1473,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["permessi",{"_index":969,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["permesso",{"_index":1470,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["phase",{"_index":896,"title":{},"body":{"components/CompileComponent.html":{}}}],["pipe",{"_index":670,"title":{},"body":{"modules/AppModule.html":{}}}],["posit",{"_index":332,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["possibil",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["possibl",{"_index":1270,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["possono",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["post",{"_index":889,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["post(this.api",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["post.answ",{"_index":1346,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["post.condit",{"_index":1347,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["post.previous_answ",{"_index":1349,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["post.previous_quest",{"_index":1348,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["potr",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["pq",{"_index":1289,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["prenota",{"_index":1205,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["prenotazioni",{"_index":1204,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["prevent",{"_index":738,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["previou",{"_index":846,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["previous",{"_index":776,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["previous_answ",{"_index":1225,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["previous_quest",{"_index":1226,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["prevista",{"_index":1108,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["prima",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["primari",{"_index":135,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["privat",{"_index":37,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["procedur",{"_index":1719,"title":{},"body":{"components/UserTableComponent.html":{}}}],["product",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":692,"title":{},"body":{"modules/AppModule.html":{}}}],["progressi",{"_index":451,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["properti",{"_index":36,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["propr",{"_index":1512,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["propri",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["prosegui",{"_index":908,"title":{},"body":{"components/CompileComponent.html":{}}}],["provid",{"_index":597,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["pull",{"_index":384,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["push",{"_index":400,"title":{},"body":{"components/AdminComponent.html":{}}}],["put",{"_index":1430,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["queri",{"_index":1729,"title":{},"body":{"components/UserTableComponent.html":{}}}],["queryparam",{"_index":911,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["questa",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{}}}],["questin",{"_index":892,"title":{},"body":{"components/CompileComponent.html":{}}}],["question",{"_index":294,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["question'},{'nam",{"_index":250,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["question.answ",{"_index":1305,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.answer.split",{"_index":1318,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.answer_compil",{"_index":887,"title":{},"body":{"components/CompileComponent.html":{}}}],["question.answer_of_us",{"_index":479,"title":{},"body":{"components/AdminComponent.html":{}}}],["question.component.css",{"_index":1222,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.component.html",{"_index":1223,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.condit",{"_index":1300,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.condition_confirm",{"_index":885,"title":{},"body":{"components/CompileComponent.html":{}}}],["question.current_us",{"_index":480,"title":{},"body":{"components/AdminComponent.html":{}}}],["question.id",{"_index":482,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["question.percentual_answ",{"_index":464,"title":{},"body":{"components/AdminComponent.html":{}}}],["question.previous_answ",{"_index":1303,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.previous_quest",{"_index":1301,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.quest",{"_index":505,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["question.step",{"_index":470,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["question.typ",{"_index":463,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["question/modifi",{"_index":1221,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["questionansw",{"_index":1231,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["questionanswers(quest",{"_index":1243,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["questionsresponsetyp",{"_index":293,"title":{"interfaces/QuestionsResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["questionstyp",{"_index":295,"title":{"interfaces/QuestionsType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["questo",{"_index":965,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["radio",{"_index":1273,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["radiu",{"_index":700,"title":{},"body":{"modules/AppModule.html":{}}}],["re",{"_index":175,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["reactiveformsmodul",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["readi",{"_index":1703,"title":{},"body":{"components/UserTableComponent.html":{}}}],["reason",{"_index":311,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["receiv",{"_index":538,"title":{},"body":{"components/AllsurveysComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/UserTableComponent.html":{}}}],["recompil",{"_index":832,"title":{},"body":{"components/CompileComponent.html":{}}}],["record",{"_index":898,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["red",{"_index":134,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["redirect",{"_index":935,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["redirectto",{"_index":727,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":795,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["refresh",{"_index":891,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["refus",{"_index":18,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["regist",{"_index":57,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["registerlocaledata",{"_index":672,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localeit",{"_index":695,"title":{},"body":{"modules/AppModule.html":{}}}],["registerresponsetyp",{"_index":308,"title":{"interfaces/RegisterResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["rel",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{}}}],["relat",{"_index":374,"title":{},"body":{"components/AdminComponent.html":{},"components/EmployeeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["relativi",{"_index":452,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["remov",{"_index":760,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/UserTableComponent.html":{}}}],["request",{"_index":20,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"miscellaneous/variables.html":{}}}],["request'",{"_index":131,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["request'},{'nam",{"_index":252,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["request.component.css",{"_index":1356,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["request.component.html",{"_index":1357,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["request.end_d",{"_index":958,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["request.id",{"_index":948,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["request.reason",{"_index":949,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["request.start_d",{"_index":952,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["request/modifi",{"_index":1355,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["request_id",{"_index":274,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["requestallus",{"_index":358,"title":{},"body":{"components/AdminComponent.html":{}}}],["requestallusers(us",{"_index":398,"title":{},"body":{"components/AdminComponent.html":{}}}],["requestchartscompon",{"_index":256,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["requestdetailscompon",{"_index":258,"title":{"components/RequestDetailsComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["requests.servic",{"_index":122,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["requestsresponsetyp",{"_index":309,"title":{"interfaces/RequestsResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["requestsservic",{"_index":53,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"index.html":{}}}],["requestsservice'",{"_index":60,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["requestssubscript",{"_index":42,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["requestssurveysservic",{"_index":365,"title":{"injectables/RequestsSurveysService.html":{}},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"modules/AppModule.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"coverage.html":{},"index.html":{}}}],["requesttyp",{"_index":101,"title":{"interfaces/RequestType.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["requir",{"_index":1456,"title":{},"body":{"components/MyAbsencesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.id",{"_index":874,"title":{},"body":{"components/CompileComponent.html":{}}}],["res.recompil",{"_index":876,"title":{},"body":{"components/CompileComponent.html":{}}}],["reset",{"_index":605,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["reset_all_surveys_vers",{"_index":1520,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["reset_my_surveys_vers",{"_index":1521,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["reset_vers",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["respons",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["responsabili",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["restrict",{"_index":1155,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["result",{"_index":269,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":76,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["richieder",{"_index":1472,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["richiedi",{"_index":1467,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["richiest",{"_index":944,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["richiesta",{"_index":431,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["richiesto",{"_index":967,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["ricompilato",{"_index":905,"title":{},"body":{"components/CompileComponent.html":{}}}],["riepilogo",{"_index":1333,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["rifiut",{"_index":208,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["rifiuta",{"_index":962,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["rifiutata",{"_index":190,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["risponder",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["risposta",{"_index":487,"title":{},"body":{"components/AdminComponent.html":{}}}],["riuscita",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["riuscito",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["room",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["root",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":222,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["rout",{"_index":716,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"index.html":{},"routes.html":{}}}],["router",{"_index":364,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["routermodul",{"_index":715,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":730,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":714,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rxj",{"_index":116,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["rxjs/oper",{"_index":868,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["salva",{"_index":1420,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["salvar",{"_index":1401,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["salvata",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["salvato",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["same",{"_index":1132,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["save",{"_index":537,"title":{},"body":{"components/AllsurveysComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["save_chang",{"_index":1362,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["save_cooki",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["scavo",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["screen",{"_index":1707,"title":{},"body":{"components/UserTableComponent.html":{}}}],["scroll",{"_index":734,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["scroll.servic",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["scroll.service.t",{"_index":733,"title":{},"body":{"injectables/BlockScrollService.html":{},"coverage.html":{}}}],["scroll.service.ts:11",{"_index":748,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["scroll.service.ts:20",{"_index":751,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["scroll.service.ts:28",{"_index":752,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["scroll.service.ts:34",{"_index":749,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["search",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["second",{"_index":1201,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["secondari",{"_index":137,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["secondformgroup",{"_index":1269,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section",{"_index":339,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["section/abs",{"_index":9,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["section/admin/admin.compon",{"_index":694,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/admin/admin.component.t",{"_index":336,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["section/admin/admin.component.ts:114",{"_index":377,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:134",{"_index":391,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:167",{"_index":393,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:179",{"_index":405,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:187",{"_index":389,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:222",{"_index":399,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:255",{"_index":403,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:30",{"_index":409,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:303",{"_index":401,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:31",{"_index":407,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:32",{"_index":367,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:333",{"_index":397,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:39",{"_index":408,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:45",{"_index":369,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:55",{"_index":383,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:92",{"_index":371,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/allsurveys/allsurveys.compon",{"_index":688,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/allsurveys/allsurveys.component.t",{"_index":510,"title":{},"body":{"components/AllsurveysComponent.html":{},"coverage.html":{}}}],["section/allsurveys/allsurveys.component.ts:16",{"_index":531,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:17",{"_index":532,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:18",{"_index":533,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:19",{"_index":521,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:49",{"_index":524,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:61",{"_index":530,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:70",{"_index":529,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:77",{"_index":527,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/compile/compile.compon",{"_index":693,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/compile/compile.component.t",{"_index":828,"title":{},"body":{"components/CompileComponent.html":{},"coverage.html":{}}}],["section/compile/compile.component.ts:103",{"_index":857,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:107",{"_index":842,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:118",{"_index":841,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:126",{"_index":853,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:165",{"_index":844,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:195",{"_index":848,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:29",{"_index":864,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:30",{"_index":860,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:31",{"_index":862,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:321",{"_index":855,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:33",{"_index":863,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:35",{"_index":861,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:37",{"_index":859,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:39",{"_index":839,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:63",{"_index":858,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/createsurvey/createsurvey.compon",{"_index":687,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/createsurvey/createsurvey.component.t",{"_index":1213,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"coverage.html":{}}}],["section/createsurvey/createsurvey.component.ts:358",{"_index":1259,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:360",{"_index":1256,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:361",{"_index":1247,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:362",{"_index":1258,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:363",{"_index":1257,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:364",{"_index":1249,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:366",{"_index":1254,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:367",{"_index":1252,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:369",{"_index":1248,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:370",{"_index":1255,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:371",{"_index":1253,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:373",{"_index":1233,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:375",{"_index":1251,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:377",{"_index":1250,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:398",{"_index":1240,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:407",{"_index":1239,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:418",{"_index":1246,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:449",{"_index":1241,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:459",{"_index":1244,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:467",{"_index":1237,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:477",{"_index":1234,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:485",{"_index":1235,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:495",{"_index":1245,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/employee/employee.compon",{"_index":685,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/employee/employee.component.t",{"_index":909,"title":{},"body":{"components/EmployeeComponent.html":{},"coverage.html":{}}}],["section/employee/employee.component.ts:19",{"_index":931,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:20",{"_index":928,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:21",{"_index":929,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:22",{"_index":930,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:23",{"_index":920,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:62",{"_index":921,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:77",{"_index":925,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:92",{"_index":927,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employees/employees.compon",{"_index":681,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/employees/employees.component.t",{"_index":970,"title":{},"body":{"components/EmployeesComponent.html":{},"coverage.html":{}}}],["section/employees/employees.component.ts:16",{"_index":992,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:17",{"_index":994,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:18",{"_index":993,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:19",{"_index":980,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:45",{"_index":984,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:57",{"_index":982,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:70",{"_index":985,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:78",{"_index":987,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/mi",{"_index":676,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"coverage.html":{}}}],["section/request",{"_index":682,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["section/requests.servic",{"_index":657,"title":{},"body":{"modules/AppModule.html":{}}}],["section/requests.service.t",{"_index":1510,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"coverage.html":{}}}],["section/requests.service.ts:120",{"_index":1526,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:147",{"_index":1532,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:177",{"_index":1528,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:203",{"_index":1525,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:229",{"_index":1529,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:237",{"_index":1530,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:25",{"_index":1535,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:26",{"_index":1534,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:27",{"_index":1533,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:28",{"_index":1536,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:29",{"_index":1523,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["see",{"_index":799,"title":{},"body":{"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{}}}],["sei",{"_index":443,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["select",{"_index":92,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["selector",{"_index":30,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["send",{"_index":787,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["send_request",{"_index":1425,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["sendquest",{"_index":1522,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["sendquestions(survey",{"_index":1531,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["sent",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["server",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["servic",{"_index":86,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["service'",{"_index":1378,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/UserTableComponent.html":{}}}],["set",{"_index":698,"title":{},"body":{"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["set_boss",{"_index":780,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["set_boss(id_us",{"_index":785,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["set_numb",{"_index":1123,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["set_number(v",{"_index":1133,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["setup",{"_index":359,"title":{},"body":{"components/AdminComponent.html":{}}}],["sezion",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["share",{"_index":867,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["sheet",{"_index":1682,"title":{},"body":{"injectables/UserService.html":{}}}],["short_nam",{"_index":284,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["show",{"_index":337,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["showansw",{"_index":360,"title":{},"body":{"components/AdminComponent.html":{}}}],["showanswer(quest",{"_index":402,"title":{},"body":{"components/AdminComponent.html":{}}}],["shown",{"_index":151,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["showpassword",{"_index":802,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["showpassword2",{"_index":803,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["sicuro",{"_index":444,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["side_expand",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["side_expanded:boolean",{"_index":1583,"title":{},"body":{"components/SidebarComponent.html":{}}}],["side_extend",{"_index":1562,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["sidebar",{"_index":246,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["sidebar'},{'nam",{"_index":263,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["sidebar.component.css",{"_index":1577,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1578,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar/sidebar.compon",{"_index":658,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarbodycompon",{"_index":260,"title":{"components/SidebarBodyComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["sidebarcompon",{"_index":262,"title":{"components/SidebarComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["sidebarmenuitem",{"_index":264,"title":{"components/SidebarMenuItem.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["similar",{"_index":1216,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["simpl",{"_index":988,"title":{},"body":{"components/EmployeesComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["singl",{"_index":1271,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["snackbar",{"_index":349,"title":{},"body":{"components/AdminComponent.html":{},"injectables/UserService.html":{}}}],["solut",{"_index":736,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["sondaggi",{"_index":501,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["sondaggio",{"_index":454,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["sort",{"_index":989,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["sort_employe",{"_index":978,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["sort_employees(employe",{"_index":986,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["sottoposta",{"_index":495,"title":{},"body":{"components/AdminComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["spec\\.t",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":525,"title":{},"body":{"components/AllsurveysComponent.html":{},"components/EmployeeComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["specifi",{"_index":394,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/UserService.html":{}}}],["specifica",{"_index":1418,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["spinner",{"_index":522,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["standard",{"_index":1398,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["start",{"_index":1434,"title":{},"body":{"components/MyAbsencesComponent.html":{},"components/UserTableComponent.html":{}}}],["start.gettim",{"_index":1461,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["start_dat",{"_index":313,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["startofday",{"_index":110,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["stata",{"_index":494,"title":{},"body":{"components/AdminComponent.html":{}}}],["state",{"_index":132,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["state_filt",{"_index":43,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["statement",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["statist",{"_index":912,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["statistica",{"_index":964,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["statistich",{"_index":963,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{}}}],["stato",{"_index":1507,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["statu",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["step",{"_index":297,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["stepper",{"_index":851,"title":{},"body":{"components/CompileComponent.html":{}}}],["stepper(first",{"_index":1262,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["stepper.next",{"_index":906,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["stepquest",{"_index":361,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["stepquestions(step",{"_index":856,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["stepquestions(survey",{"_index":404,"title":{},"body":{"components/AdminComponent.html":{}}}],["stop",{"_index":1546,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["stream",{"_index":162,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["string",{"_index":276,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["structur",{"_index":1219,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["studio",{"_index":1391,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["style",{"_index":763,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["style.setattribut",{"_index":767,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["style.textcont",{"_index":769,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["style.typ",{"_index":765,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["styletag",{"_index":744,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["styleurl",{"_index":31,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["sub",{"_index":1174,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["sub_menu",{"_index":285,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["submenu",{"_index":1182,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["submiss",{"_index":796,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["submit",{"_index":386,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["submitted.length",{"_index":546,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["subscrib",{"_index":425,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"injectables/UserService.html":{}}}],["subscript",{"_index":59,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["subsrib",{"_index":1706,"title":{},"body":{"components/UserTableComponent.html":{}}}],["succesfulli",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["success",{"_index":275,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["successo",{"_index":1336,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["successresponsetyp",{"_index":315,"title":{"interfaces/SuccessResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["summari",{"_index":343,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["superior",{"_index":1480,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["supervis",{"_index":322,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["supervision",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["supervisions/fals",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["supervisions/tru",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["supervisions_vers",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["supervisionsresponsetyp",{"_index":321,"title":{"interfaces/SupervisionsResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["supervisiontyp",{"_index":323,"title":{"interfaces/SupervisionType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["supervisor",{"_index":824,"title":{},"body":{"components/BottomListComponent.html":{}}}],["support",{"_index":1807,"title":{},"body":{"modules.html":{}}}],["surnam",{"_index":329,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["survey",{"_index":289,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["survey(ultim",{"_index":1313,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["survey.arraystep",{"_index":438,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.id",{"_index":472,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.id_survey",{"_index":545,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["survey.nam",{"_index":503,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{}}}],["survey.quest",{"_index":434,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.questions.filter(quest",{"_index":469,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.step",{"_index":436,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.us",{"_index":474,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey_id",{"_index":526,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["surveyadminresponsetyp",{"_index":317,"title":{"interfaces/SurveyAdminResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["surveyadmintyp",{"_index":318,"title":{"interfaces/SurveyAdminType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["surveycreationresponsetyp",{"_index":316,"title":{"interfaces/SurveyCreationResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["surveys//quest",{"_index":1556,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/admin",{"_index":726,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["surveys/allsurvey",{"_index":724,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["surveys/allsurveys/fals",{"_index":1548,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/allsurveys/tru",{"_index":1540,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/allsurveyssubmitted/fals",{"_index":1553,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/allsurveyssubmitted/tru",{"_index":1551,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/answ",{"_index":886,"title":{},"body":{"components/CompileComponent.html":{}}}],["surveys/answersubmit",{"_index":481,"title":{},"body":{"components/AdminComponent.html":{}}}],["surveys/compile/:id/:recompil",{"_index":725,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["surveys/createsurvey",{"_index":723,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["surveys/mysurvey",{"_index":498,"title":{},"body":{"components/AdminComponent.html":{}}}],["surveys/submitsurvey",{"_index":899,"title":{},"body":{"components/CompileComponent.html":{}}}],["surveys/survey",{"_index":879,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["surveys/usersubmit",{"_index":471,"title":{},"body":{"components/AdminComponent.html":{}}}],["surveysresponsetyp",{"_index":320,"title":{"interfaces/SurveysResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["surveytyp",{"_index":296,"title":{"interfaces/SurveyType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["svg",{"_index":1808,"title":{},"body":{"modules.html":{}}}],["sviluppata",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["swal",{"_index":415,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["swal(\"fatto",{"_index":901,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["swal(\"oop",{"_index":427,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["sweetalert",{"_index":416,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["swimlane/ngx",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["switchmap",{"_index":866,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["tabl",{"_index":267,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["table.compon",{"_index":663,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.css",{"_index":1696,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.html",{"_index":1697,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.t",{"_index":1693,"title":{},"body":{"components/UserTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:25",{"_index":1710,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:26",{"_index":1711,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:27",{"_index":1723,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:28",{"_index":1722,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:29",{"_index":1704,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:54",{"_index":1713,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:63",{"_index":1717,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:70",{"_index":1720,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table/us",{"_index":662,"title":{},"body":{"modules/AppModule.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["tableusertyp",{"_index":331,"title":{"interfaces/TableUserType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["targetel",{"_index":1187,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["teacher",{"_index":1180,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["test",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["test.t",{"_index":1801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":445,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["text/css",{"_index":766,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["th",{"_index":870,"title":{},"body":{"components/CompileComponent.html":{}}}],["tha",{"_index":1176,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["then(willdelet",{"_index":458,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["thet",{"_index":181,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["third",{"_index":1207,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this._elementref.nativeelement.contain",{"_index":1186,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this._formbuilder.group",{"_index":1285,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.act",{"_index":1188,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.activedayisopen",{"_index":169,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.all_survey",{"_index":1537,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.all_surveys_vers",{"_index":1545,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.allsurvey",{"_index":536,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.allsurveys.length",{"_index":548,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.allsurveyssubscript",{"_index":534,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.answ",{"_index":1281,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.answers.indexof(answ",{"_index":1325,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.answers.push(this.answ",{"_index":1291,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.answers.splice(index",{"_index":1326,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.answers.tostr",{"_index":1306,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.api",{"_index":178,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["this.arraystep",{"_index":877,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.arraystep.push(this.step",{"_index":1310,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.arraystep[this.arraystep.length",{"_index":897,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.blockscrollservice.dis",{"_index":1103,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["this.blockscrollservice.en",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{}}}],["this.bottomsheetref",{"_index":798,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.buildstyleel",{"_index":757,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["this.condit",{"_index":1299,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.cookieservice.deleteal",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookieservice.set(\"logged_in",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookieservice.set(\"token",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookieservice.set(\"us",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createarraystep",{"_index":882,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.createarraystep(survey",{"_index":439,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.custom_reason",{"_index":1393,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.data.question.answer.length",{"_index":1338,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.question.condition_answ",{"_index":1343,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.question.quest",{"_index":1340,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.question.step",{"_index":1342,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.question.typ",{"_index":1341,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.request.id",{"_index":1406,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.data.request.reason",{"_index":1389,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.data.survey",{"_index":1344,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.datasourc",{"_index":1726,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.datasource.filt",{"_index":1737,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.dialog.open(modifyquestioncompon",{"_index":1328,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.dialogref",{"_index":1407,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.dialogref.clos",{"_index":198,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.email",{"_index":812,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.employe",{"_index":938,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["this.employee_requestssubscript",{"_index":936,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["this.employeessubscript",{"_index":996,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.end_d",{"_index":1387,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.end_date.gettim",{"_index":1410,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.filelist",{"_index":1395,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.filelist.length",{"_index":1414,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.filt",{"_index":1383,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.firstformgroup",{"_index":1284,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.forwardstep",{"_index":1316,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.httpclient",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.delete(url",{"_index":1554,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.httpclient.get",{"_index":1539,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.get(this.api",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(url",{"_index":473,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.httpclient.post(url",{"_index":900,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["this.httpclient.put(url",{"_index":1557,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.id",{"_index":873,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.issubmitted(survey",{"_index":550,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.item.nam",{"_index":1190,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.item.short_nam",{"_index":1195,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.items.push(obj",{"_index":1203,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.load_cooki",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logged_in",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["this.make_event_list",{"_index":157,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.my_survey",{"_index":1550,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.my_surveys_vers",{"_index":1552,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.myrequest",{"_index":1381,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.myrequests.length",{"_index":1384,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.myrequestssubscript",{"_index":1379,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.mysurvey",{"_index":541,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.mysurveys.filt",{"_index":544,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.mysurveys.length",{"_index":549,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.mysurveyssubscript",{"_index":539,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.nam",{"_index":810,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.numb",{"_index":820,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.password",{"_index":813,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.password2",{"_index":817,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.previous_answ",{"_index":1304,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.previous_quest",{"_index":1307,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.previous_question.id",{"_index":1302,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.previous_questions.filt",{"_index":1319,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.previous_questions.filter(quest",{"_index":1320,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.quest",{"_index":880,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.questionanswers(this.data.quest",{"_index":1339,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.questions.filter(quest",{"_index":883,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.questions.indexof(quest",{"_index":1323,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.questions.length",{"_index":1315,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.questions.push(quest",{"_index":1308,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.questions.splice(index",{"_index":1324,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.ready.emit(0",{"_index":1730,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.ready.emit(users.length",{"_index":1731,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.reason",{"_index":1392,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.recompil",{"_index":875,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.request",{"_index":156,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.requestsservice.all_requests$.subscrib",{"_index":155,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.requestsservice.employees$.subscrib",{"_index":997,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.requestsservice.employees_requests$.subscrib",{"_index":937,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["this.requestsservice.modify_request",{"_index":1405,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.requestsservice.myrequests$.subscrib",{"_index":1380,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.requestsservice.reset_all_requests_vers",{"_index":159,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.requestsservice.reset_employees_requests_vers",{"_index":1000,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.requestsservice.reset_employees_vers",{"_index":999,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.requestsservice.reset_myrequests_vers",{"_index":1382,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.requestsservice.send_request",{"_index":1451,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["this.requestssubscript",{"_index":154,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.requestssurveysservice.all_surveys$.subscrib",{"_index":535,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.requestssurveysservice.deletequestion(this.data.question.id",{"_index":1345,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.requestssurveysservice.deletesurvey(survey.id",{"_index":460,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.requestssurveysservice.deletesurvey(this.survey",{"_index":1329,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.requestssurveysservice.modifyquestion(this.data.question.id",{"_index":1350,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.requestssurveysservice.my_surveys$.subscrib",{"_index":540,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.requestssurveysservice.reset_all_surveys_vers",{"_index":542,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.requestssurveysservice.reset_my_surveys_vers",{"_index":543,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.route.params.subscribe(r",{"_index":872,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.route.queryparams.subscribe(param",{"_index":933,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["this.router.navigate([\"/hom",{"_index":904,"title":{},"body":{"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.router.navigate([\"/surveys/compil",{"_index":551,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.router.url.split",{"_index":1193,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.save_cooki",{"_index":1690,"title":{},"body":{"injectables/UserService.html":{}}}],["this.secondformgroup",{"_index":1288,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.set_boss.emit(us",{"_index":1738,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.setup",{"_index":418,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.showpassword",{"_index":1104,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["this.side_expand",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.open",{"_index":486,"title":{},"body":{"components/AdminComponent.html":{},"injectables/UserService.html":{}}}],["this.sort_employees(data",{"_index":998,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.start_d",{"_index":1385,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.start_date.gettim",{"_index":1412,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.start_date.sethours(0",{"_index":1449,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["this.step",{"_index":881,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.styletag",{"_index":756,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["this.supervis",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["this.supervisions$.subscribe(supervis",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["this.supervisions_vers",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["this.surnam",{"_index":811,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.survey",{"_index":499,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.surveys.indexof(survey",{"_index":461,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.surveys.splice(index",{"_index":462,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.tim",{"_index":1282,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.timer.subscribe(x",{"_index":1317,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.today",{"_index":1198,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.toggle.emit",{"_index":1025,"title":{},"body":{"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.token",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["this.typ",{"_index":1297,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.upgradequestionslist",{"_index":878,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.us",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users$.subscribe(us",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users_vers",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.add_user(us",{"_index":814,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.userservice.get_login_statu",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.get_token",{"_index":424,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["this.userservice.get_us",{"_index":822,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.userservice.get_user_by_id(params[\"employe",{"_index":939,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["this.userservice.get_user_by_id(this.data.request.id_us",{"_index":183,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.userservice.logout",{"_index":1026,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.userservice.reset_vers",{"_index":1732,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.userservice.set_boss(id_us",{"_index":797,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.userservice.try_login(this.email",{"_index":1105,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["this.userssubscription.unsubscrib",{"_index":1739,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.validate_period_len",{"_index":1455,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["this.viewd",{"_index":167,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["thoken",{"_index":1542,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["through",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":894,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["timediff",{"_index":1459,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["timer",{"_index":1279,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["titl",{"_index":442,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["titlecas",{"_index":206,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["today",{"_index":1561,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["toggl",{"_index":576,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{}}}],["toggle_show_password",{"_index":1084,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["toggle_show_password2",{"_index":1124,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["toggle_sidebar",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["token",{"_index":292,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["top",{"_index":1012,"title":{},"body":{"components/HeaderComponent.html":{}}}],["total",{"_index":818,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["track",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["tri",{"_index":1096,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["trovata",{"_index":489,"title":{},"body":{"components/AdminComponent.html":{}}}],["true",{"_index":97,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try_login",{"_index":1085,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["try_login(email",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["tue",{"_index":1112,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["tuo",{"_index":1479,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["tuoi",{"_index":1010,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["tutt",{"_index":207,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MiniSidebarItem.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["tutti",{"_index":450,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["type",{"_index":67,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ultim",{"_index":849,"title":{},"body":{"components/CompileComponent.html":{}}}],["un",{"_index":1468,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["una",{"_index":446,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["unsubscrib",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["unsubscript",{"_index":85,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/UserTableComponent.html":{}}}],["until",{"_index":1276,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["unvalid",{"_index":1415,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["updat",{"_index":1513,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["upgradequestionslist",{"_index":837,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["upload",{"_index":1337,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["url",{"_index":419,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["us",{"_index":82,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["user",{"_index":176,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["user.email",{"_index":509,"title":{},"body":{"components/AdminComponent.html":{},"components/BottomListComponent.html":{}}}],["user.nam",{"_index":185,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["user.servic",{"_index":123,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["user.surnam",{"_index":184,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["userresponsetyp",{"_index":325,"title":{"interfaces/UserResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["users'},{'nam",{"_index":243,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["users.compon",{"_index":660,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["users.component.css",{"_index":801,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["users.component.html",{"_index":800,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["users.component.t",{"_index":772,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:113",{"_index":1130,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:130",{"_index":1134,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:137",{"_index":1138,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:144",{"_index":1139,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:151",{"_index":1140,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:20",{"_index":784,"title":{},"body":{"components/BottomListComponent.html":{}}}],["users.component.ts:22",{"_index":790,"title":{},"body":{"components/BottomListComponent.html":{}}}],["users.component.ts:30",{"_index":786,"title":{},"body":{"components/BottomListComponent.html":{}}}],["users.component.ts:45",{"_index":1146,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:46",{"_index":1147,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:49",{"_index":1144,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:50",{"_index":1143,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:51",{"_index":1148,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:52",{"_index":1142,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:53",{"_index":1145,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:54",{"_index":1126,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:64",{"_index":1127,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:85",{"_index":1128,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:94",{"_index":1129,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.includes(user.id",{"_index":477,"title":{},"body":{"components/AdminComponent.html":{}}}],["users.length",{"_index":1728,"title":{},"body":{"components/UserTableComponent.html":{}}}],["users/fals",{"_index":475,"title":{},"body":{"components/AdminComponent.html":{},"injectables/UserService.html":{}}}],["users/manag",{"_index":659,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"coverage.html":{}}}],["users/set_boss",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["users/tru",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["users/us",{"_index":661,"title":{},"body":{"modules/AppModule.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["users_vers",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["userservic",{"_index":54,"title":{"injectables/UserService.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["userservice'",{"_index":794,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["userservice.get_boss_name(element.id",{"_index":1746,"title":{},"body":{"components/UserTableComponent.html":{}}}],["userservice.get_boss_name(userservice.get_user().id",{"_index":1481,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["userservice.get_nam",{"_index":1027,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["usersresponsetyp",{"_index":326,"title":{"interfaces/UsersResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["userssubmittedresponsetyp",{"_index":327,"title":{"interfaces/UsersSubmittedResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["userssubmittedtyp",{"_index":328,"title":{"interfaces/UsersSubmittedType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["userssubscript",{"_index":1700,"title":{},"body":{"components/UserTableComponent.html":{}}}],["usertablecompon",{"_index":266,"title":{"components/UserTableComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["usertyp",{"_index":291,"title":{"interfaces/UserType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["usevalu",{"_index":712,"title":{},"body":{"modules/AppModule.html":{}}}],["utent",{"_index":1007,"title":{},"body":{"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["utenti",{"_index":1029,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["val",{"_index":1137,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["valid",{"_index":1086,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["validate_period_len",{"_index":1426,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["validators.requir",{"_index":1287,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["valu",{"_index":96,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AppComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["variabl",{"_index":871,"title":{"miscellaneous/variables.html":{}},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":1215,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["version",{"_index":334,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["versionresponsetyp",{"_index":333,"title":{"interfaces/VersionResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["viewdat",{"_index":44,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["visibl",{"_index":1093,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["vision",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":77,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["volta",{"_index":447,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["warn",{"_index":456,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["way",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["whand",{"_index":1089,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["whitespac",{"_index":1734,"title":{},"body":{"components/UserTableComponent.html":{}}}],["whole",{"_index":1558,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["wich",{"_index":972,"title":{},"body":{"components/EmployeesComponent.html":{},"components/UserTableComponent.html":{}}}],["willdelet",{"_index":459,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["window",{"_index":741,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["window.screen.width",{"_index":591,"title":{},"body":{"components/AppComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["windowscrol",{"_index":740,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["wonderfulcompani",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":205,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["zoom",{"_index":604,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AbsencesCalendarComponent.html":{"url":"components/AbsencesCalendarComponent.html","title":"component - AbsencesCalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AbsencesCalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/absences-calendar/absences-calendar.component.ts\n\n\n    \n        Description\n    \n    \n        Absences calendar, for every day are displayed all the approved, refused and pending requests for absences\nNOTE: Component base code got from angular-calendar: https://mattlewis92.github.io/angular-calendar/docs/\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                absences-calendar\n            \n\n            \n                styleUrls\n                absences-calendar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./absences-calendar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeDayIsOpen\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                events\n                            \n                            \n                                    Private\n                                requests\n                            \n                            \n                                    Private\n                                requestsSubscription\n                            \n                            \n                                    Private\n                                state_filter\n                            \n                            \n                                    Private\n                                viewDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dayClicked\n                            \n                            \n                                make_event_list\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, RequestsService: RequestsService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:57\n                            \n                        \n\n                \n                    \n                            The constructor registers a new subscription to RequestsService's observable to get the list of all the absence requests in the company\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \ndayClicked(undefined: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Handler for clicks on a day of the calendar, if opens/closes dayly-absence list for the clicked day\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make_event_list\n                            \n                            \n                        \n                    \n                \n                \n                    \nmake_event_list()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            This method gets a list of requests and maps it into an CalendarEvent List that can be used as input for the calendar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Unsubscription from requests-service observable\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            This opens request-details dialog, data of the selected request are injected into it\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeDayIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeDayIsOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     CalendarEvent[]\n\n                    \n                \n                    \n                        \n                            Type :     CalendarEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requests:     RequestType[]\n\n                    \n                \n                    \n                        \n                            Type :     RequestType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requestsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestsSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            state_filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state_filter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewDate:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy } from \"@angular/core\";\nimport {\n  startOfDay,\n  endOfDay,\n  endOfMonth,\n  isSameDay,\n  isSameMonth\n} from \"date-fns\";\nimport { Subscription } from \"rxjs\";\nimport { CalendarEvent, CalendarEventAction } from \"angular-calendar\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA\n} from \"@angular/material\";\nimport { RequestsService } from \"../requests.service\";\nimport { UserService } from \"../../user.service\";\nimport { RequestType } from \"../../interfaces\";\nimport * as config from \"../../config.json\";\n\n//colors for absence indicators, it changes according to request's state\nconst colors: any = {\n  red: {\n    //refused requests\n    primary: \"#ad2121\",\n    secondary: \"#FAE3E3\"\n  },\n  grey: {\n    //pending requests\n    primary: \"#888888\",\n    secondary: \"#aaaaaa\"\n  },\n  green: {\n    //approved requests\n    primary: \"#21ad21\",\n    secondary: \"#e3fae3\"\n  }\n};\n\n/**\n * Absences calendar, for every day are displayed all the approved, refused and pending requests for absences\n *\n * NOTE: Component base code got from angular-calendar: https://mattlewis92.github.io/angular-calendar/docs/\n */\n@Component({\n  selector: \"absences-calendar\",\n  templateUrl: \"./absences-calendar.component.html\",\n  styleUrls: [\"./absences-calendar.component.css\"]\n})\nexport class AbsencesCalendarComponent implements OnDestroy {\n  private requests: RequestType[]; //list of all request made by any of the employees\n  private requestsSubscription: Subscription;\n  private events: CalendarEvent[]; //Type of event-item to be injected in the calendar\n  private viewDate: Date = new Date(); //selected date\n  private activeDayIsOpen: boolean = true; //If true the list of absences for the active day is shown\n  private state_filter: number = -1; //value of the state filter (-1 means no filter)\n\n  /**\n   * The constructor registers a new subscription to RequestsService's observable to get the list of all the absence requests in the company\n   */\n  constructor(\n    public dialog: MatDialog,\n    private RequestsService: RequestsService,\n    private UserService: UserService\n  ) {\n    //subscription to observable to get requests list from requests-service\n    this.requestsSubscription = this.RequestsService.all_requests$.subscribe(\n      data => {\n        this.requests = data;\n        this.make_event_list(); //Generate the list for the calendar for requests list\n      }\n    );\n    this.RequestsService.reset_all_requests_version(); //force observable to emit data in the stream even if it has not changed from last check\n  }\n\n  /**\n   * Handler for clicks on a day of the calendar, if opens/closes dayly-absence list for the clicked day\n   */\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false; //close event list if it was opened for the clicked day\n      } else {\n        this.activeDayIsOpen = true; //open the list\n        this.viewDate = date; //select the clicked day\n      }\n    }\n  }\n\n  /**\n   * This method gets a list of requests and maps it into an CalendarEvent List that can be used as input for the calendar\n   */\n  make_event_list() {\n    var res = [];\n    var user;\n    var color;\n    for (var i = 0; i ,\n    @Inject(MAT_DIALOG_DATA) public data: { request: RequestType },\n    private UserService: UserService\n  ) {\n    this.api = (config).api;\n  }\n\n  /**\n   * Get the complete name of the user thet made the request\n   */\n  get_user_name() {\n    var user = this.UserService.get_user_by_id(this.data.request.id_user);\n    return user.surname + \" \" + user.name;\n  }\n\n  /**\n   * Get the label to be displayed according to the request state\n   */\n  get_state_label(state) {\n    if (state == 1) return \"Approvata\";\n    if (state == 2) return \"Rifiutata\";\n    return \"In Attesa di Conferma\";\n  }\n\n  /**\n   * Get the class to change the color of request indicator according to the request state\n   */\n  get_state_label_class(state) {\n    if (state == 1) return \"green\";\n    if (state == 2) return \"red\";\n    return \"grey\";\n  }\n\n  /**\n   * Method called when user clicks 'ok' button, just closes the dialog\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    Calendario Assenze\n  \n  \n    \n      \n        \n          \n            Indietro\n          \n          \n            Oggi\n          \n          \n            Avanti\n          \n        \n      \n      \n        {{viewDate | date:'MMMM y' | titlecase}}\n      \n      \n        \n            \n              Tutte\n              In Attesa\n              Approvate\n              Rifiutate\n            \n        \n        \n         Approvate\n         Rifiutate\n         In attesa\n      \n    \n    \n    \n        \n    \n    \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Calendario Assenze                                            Indietro                                Oggi                                Avanti                                      {{viewDate | date:\\'MMMM y\\' | titlecase}}                                              Tutte              In Attesa              Approvate              Rifiutate                                     Approvate         Rifiutate         In attesa                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AbsencesCalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddRequestResponseType.html":{"url":"interfaces/AddRequestResponseType.html","title":"interface - AddRequestResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddRequestResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        request_id\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request_id\n                                    \n                                \n                                \n                                    \n                                        request_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/surveys-section/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows frontend section for survey administration, and contains an expandible list for every survey and a summary with answers of all users\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                current_user\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                surveys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createArrayStep\n                            \n                            \n                                deleteSurvey\n                            \n                            \n                                fillAnswerPercentual\n                            \n                            \n                                fillQuestions\n                            \n                            \n                                fillUserList\n                            \n                            \n                                injectPercentual\n                            \n                            \n                                isMax\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                RequestallUsers\n                            \n                            \n                                Setup\n                            \n                            \n                                showAnswer\n                            \n                            \n                                stepQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(UserService: UserService, HttpClient: HttpClient, router: Router, RequestsSurveysService: RequestsSurveysService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/admin/admin.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsSurveysService\n                                                  \n                                                        \n                                                                    RequestsSurveysService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createArrayStep\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateArrayStep(survey: SurveyAdminType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                        \n                                                                    SurveyAdminType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSurvey\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSurvey(survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Delete survey from database(with related questions ecc...)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillAnswerPercentual\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillAnswerPercentual(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            Create array with all answers of question and insert percentage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillQuestions(survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Pull questions already submitted from database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillUserList(survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:187\n                            \n                        \n\n\n                \n                    \n                            Pull from database all users that submitted survey\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            injectPercentual\n                            \n                            \n                        \n                    \n                \n                \n                    \ninjectPercentual(id: , percentual_answers: , percentual: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            Pull from database percentages of answers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        percentual_answers\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        percentual\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMax\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMax(percentual: , percentual_answers: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Return true if specified percentual is greater of all others answer percentages of the question\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        percentual\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        percentual_answers\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:333\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RequestallUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \nRequestallUsers(users: , survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:222\n                            \n                        \n\n\n                \n                    \n                            Pull all users from database and push only users that submitted survey\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Setup\n                            \n                            \n                        \n                    \n                \n                \n                    \nSetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:303\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAnswer(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:255\n                            \n                        \n\n\n                \n                    \n                            Pull from database answer submitted by specified user in specified question\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepQuestions(survey: SurveyAdminType, step: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:179\n                            \n                        \n\n\n                \n                    \n                            Return only questions of specified step passed by parameter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                        \n                                                                    SurveyAdminType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        step\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QuestionsType[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current_user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current_user:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            surveys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        surveys:     SurveyAdminType[]\n\n                    \n                \n                    \n                        \n                            Type :     SurveyAdminType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { MatSnackBar, MatSnackBarConfig, MatStepper } from \"@angular/material\";\nimport { RequestsSurveysService } from \"../requests.service\";\nimport {\n  SurveyAdminType,\n  SurveyAdminResponseType,\n  QuestionsResponseType,\n  QuestionsType,\n  PercentualAnswerResponseType,\n  UsersResponseType,\n  UsersSubmittedResponseType,\n  AnswerResponseType\n} from \"../../interfaces\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport swal from \"sweetalert\";\nimport { UserService } from \"../../user.service\";\nimport * as config from \"../../config.json\";\n\n/**\n * This component shows frontend section for survey administration, and contains an expandible list for every survey and a summary with answers of all users\n */\n\n@Component({\n  selector: \"admin\",\n  templateUrl: \"./admin.component.html\",\n  styleUrls: [\"./admin.component.css\"]\n})\nexport class AdminComponent implements OnInit {\n  surveys: SurveyAdminType[]; //list of all surveys\n  api: string;\n  current_user: string; //current user\n\n  constructor(\n    private UserService: UserService,\n    private HttpClient: HttpClient,\n    private router: Router,\n    private RequestsSurveysService: RequestsSurveysService,\n    public snackBar: MatSnackBar\n  ) {\n    this.api = (config).api;\n    this.Setup();\n  }\n\n  createArrayStep(survey: SurveyAdminType) {\n    for (var i = 1; i (url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        survey.questions = data.questions;\n        survey.step = data.step[0].step;\n        survey.ArrayStep = [];\n        this.createArrayStep(survey);\n        for (var i = 0; i  {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Delete survey from database(with related questions ecc...)\n   */\n\n  deleteSurvey(survey) {\n    swal({\n      title: \"Sei sicuro?\",\n      text:\n        \"Una volta eliminato perderai tutti i progressi relativi al sondaggio\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        this.RequestsSurveysService.deleteSurvey(survey.id);\n        var index = this.surveys.indexOf(survey);\n        if (index > -1) {\n          this.surveys.splice(index, 1);\n        }\n      }\n    });\n  }\n\n  /**\n   * Create array with all answers of question and insert percentage\n   */\n\n  fillAnswerPercentual(question) {\n    if (question.type == \"Open\") return;\n    question.percentual_answers = [];\n    for (var i = 0; i (url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        percentual.percentual = data.percentual; //Pull percentual\n        percentual_answers.push(percentual); //Push answer in array\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Return true if specified percentual is greater of all others answer percentages of the question\n   */\n\n  isMax(percentual, percentual_answers) {\n    var ismax = true;\n    for (var i = 0; i  percentual) ismax = false;\n    }\n    return ismax;\n  }\n\n  /**\n   * Return only questions of specified step passed by parameter\n   */\n\n  stepQuestions(survey: SurveyAdminType, step: number): QuestionsType[] {\n    return survey.questions.filter(question => question.step == step);\n  }\n\n  /**\n   * Pull from database all users that submitted survey\n   */\n\n  fillUserList(survey) {\n    var url = this.api + \"surveys/usersubmitted/\" + survey.id;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        var users = [];\n        for (var i = 0; i  {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Pull all users from database and push only users that submitted survey\n   */\n\n  RequestallUsers(users, survey) {\n    survey.users = [];\n    var url = this.api + \"users/false\";\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        survey.users = [];\n        survey.users = data.users.filter(user => users.includes(user.id)); //Filter function\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Pull from database answer submitted by specified user in specified question\n   */\n\n  showAnswer(question) {\n    question.answer_of_user = \"\";\n    if (!question.current_user) return;\n    var url =\n      this.api +\n      \"surveys/answersubmitted/\" +\n      question.id +\n      \"/\" +\n      question.current_user;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          //answer not found\n          let config = new MatSnackBarConfig();\n          config.duration = 2000;\n          this.snackBar.open(\n            \"Risposta non trovata, la domanda e' condizionale e non e' stata sottoposta all'utente\",\n            \"OK\",\n            config\n          );\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        question.answer_of_user = data.answer; //Pull answer\n      },\n      err => {\n        //answer not found\n        let config = new MatSnackBarConfig();\n        config.duration = 2000;\n        this.snackBar.open(\n          \"Risposta non trovata, la domanda e' condizionale e non e' stata sottoposta all'utente\",\n          \"OK\",\n          config\n        );\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  Setup() {\n    var url = this.api + \"surveys/mysurveys\";\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        this.surveys = data.surveys;\n        for (var i = 0; i  {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    Sondaggi (Amministratore)\n  \n  \n    \n      \n        \n          {{survey.name}}\n        \n      \n      Elimina\n      \n        \n          \n            {{question.question}}\n            \n              {{percentual.answer}} {{percentual.percentual}}%{{percentual.percentual}}%\n            \n            \n              \n                \n                  None\n                  \n                    {{user.email}}\n                  \n                \n              \n            \n            \n              {{question.answer_of_user}}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sondaggi (Amministratore)                                {{survey.name}}                    Elimina                                    {{question.question}}                          {{percentual.answer}} {{percentual.percentual}}%{{percentual.percentual}}%                                                                        None                                      {{user.email}}                                                                                      {{question.answer_of_user}}                                          '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AllsurveysComponent.html":{"url":"components/AllsurveysComponent.html","title":"component - AllsurveysComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AllsurveysComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/surveys-section/allsurveys/allsurveys.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                allsurveys\n            \n\n            \n                styleUrls\n                allsurveys.component.css\n            \n\n\n\n            \n                templateUrl\n                ./allsurveys.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allsurveys\n                            \n                            \n                                    Private\n                                allsurveysSubscription\n                            \n                            \n                                    Private\n                                mysurveys\n                            \n                            \n                                    Private\n                                mysurveysSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSubmitted\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSurvey\n                            \n                            \n                                percentageSurveysSubmitted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(RequestsSurveysService: RequestsSurveysService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/allsurveys/allsurveys.component.ts:19\n                            \n                        \n\n                \n                    \n                            This component shows frontend section for surveys list, and contains  a list of all surveys and a percentage spinner of submitted surveys\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        RequestsSurveysService\n                                                  \n                                                        \n                                                                    RequestsSurveysService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmitted\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSubmitted(survey_id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Return true if specific survey was submitted by user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey_id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSurvey\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSurvey(survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Open Survey clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percentageSurveysSubmitted\n                            \n                            \n                        \n                    \n                \n                \n                    \npercentageSurveysSubmitted()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Return percentage of surveys submitted by user\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            allsurveys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allsurveys:     SurveyType[]\n\n                    \n                \n                    \n                        \n                            Type :     SurveyType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            allsurveysSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allsurveysSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mysurveys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mysurveys:     MySurveyType[]\n\n                    \n                \n                    \n                        \n                            Type :     MySurveyType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mysurveysSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mysurveysSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { RequestsSurveysService } from \"../requests.service\";\nimport { Subscription } from \"rxjs\";\nimport {} from \"@angular/material\";\nimport { SurveyType, MySurveyType } from \"../../interfaces\";\nimport * as config from \"../../config.json\";\nimport swal from \"sweetalert\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"allsurveys\",\n  templateUrl: \"./allsurveys.component.html\",\n  styleUrls: [\"./allsurveys.component.css\"]\n})\nexport class AllsurveysComponent implements OnInit {\n  private allsurveys: SurveyType[]; //list of the surveys\n  private allsurveysSubscription: Subscription;\n  private mysurveys: MySurveyType[]; //list of my surveys\n  private mysurveysSubscription: Subscription;\n\n  /**\n   * This component shows frontend section for surveys list, and contains  a list of all surveys and a percentage spinner of submitted surveys\n   */\n\n  constructor(\n    private RequestsSurveysService: RequestsSurveysService,\n    private router: Router\n  ) {\n    this.allsurveysSubscription = this.RequestsSurveysService.all_surveys$.subscribe(\n      surveys => {\n        this.allsurveys = surveys; //save received data\n      }\n    );\n\n    this.mysurveysSubscription = this.RequestsSurveysService.my_surveys$.subscribe(\n      surveys => {\n        this.mysurveys = surveys; //save received data\n      }\n    );\n\n    this.RequestsSurveysService.reset_all_surveys_version();\n    this.RequestsSurveysService.reset_my_surveys_version();\n  }\n\n  /**\n   * Return true if specific survey was submitted by user\n   */\n\n  isSubmitted(survey_id: number) {\n    var submitted = this.mysurveys.filter(\n      survey => survey.id_survey == survey_id\n    );\n    if (submitted.length > 0) return true;\n    return false;\n  }\n\n  /**\n   * Return percentage of surveys submitted by user\n   */\n\n  percentageSurveysSubmitted() {\n    var percentage = 100 / this.allsurveys.length;\n    return percentage * this.mysurveys.length;\n  }\n\n  /**\n   * Open Survey clicked\n   */\n\n  openSurvey(survey) {\n    if (!this.isSubmitted(survey))\n      this.router.navigate([\"/surveys/compile/\" + survey + \"/false\"]);\n    if (this.isSubmitted(survey))\n      this.router.navigate([\"/surveys/compile/\" + survey + \"/true\"]);\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    Tutti i sondaggi\n  \n  \n    \n      \n        \n      \n      \n        \n          Sondaggi\n          \n            create\n            done\n            {{survey.name}}\n             Completato \n            Go\n          \n        \n      \n    \n    \n      \n        Percentuale completata di sondaggi\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tutti i sondaggi                                                    Sondaggi                      create            done            {{survey.name}}             Completato             Go                                              Percentuale completata di sondaggi                    '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AllsurveysComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerResponseType.html":{"url":"interfaces/AnswerResponseType.html","title":"interface - AnswerResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnswerResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        answer\n                                \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answer\n                                    \n                                \n                                \n                                    \n                                        answer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                side_expanded\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get_login_status\n                            \n                            \n                                toggle_sidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(client: HttpClient, BlockScrollService: BlockScrollService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        BlockScrollService\n                                                  \n                                                        \n                                                                    BlockScrollService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_login_status\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_login_status()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/app.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Checks if user is logged in, if not, login modal will be shown over the page (no operation is allowed to a non-logged user)\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_sidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_sidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Toggle sidebar mode (collapsed/expanded)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            side_expanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        side_expanded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"wonderfulcompany\"\n                        \n                    \n                        \n                            \n                                    Defined in app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"./user.service\";\nimport { BlockScrollService } from \"./block-scroll.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"wonderfulcompany\";\n  side_expanded: boolean = false; //track sidebar status, it can be expanded or collapsed (hidden on mobile devices)\n\n  constructor(\n    client: HttpClient,\n    private BlockScrollService: BlockScrollService,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * Checks if user is logged in, if not, login modal will be shown over the page (no operation is allowed to a non-logged user)\n   */\n  get_login_status() {\n    return this.UserService.get_login_status();\n  }\n\n  /**\n   * Toggle sidebar mode (collapsed/expanded)\n   */\n  toggle_sidebar() {\n    this.side_expanded = !this.side_expanded;\n\n    if (window.screen.width \n    \n\n    \n        \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbsencesCalendarComponent\n\nAbsencesCalendarComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbsencesCalendarComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAllsurveysComponent\n\nAllsurveysComponent\n\nAppModule -->\n\nAllsurveysComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBottomListComponent\n\nBottomListComponent\n\nAppModule -->\n\nBottomListComponent->AppModule\n\n\n\n\n\nCompileComponent\n\nCompileComponent\n\nAppModule -->\n\nCompileComponent->AppModule\n\n\n\n\n\nCreatesurveyComponent\n\nCreatesurveyComponent\n\nAppModule -->\n\nCreatesurveyComponent->AppModule\n\n\n\n\n\nEmployeeComponent\n\nEmployeeComponent\n\nAppModule -->\n\nEmployeeComponent->AppModule\n\n\n\n\n\nEmployeesComponent\n\nEmployeesComponent\n\nAppModule -->\n\nEmployeesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginDialogComponent\n\nLoginDialogComponent\n\nAppModule -->\n\nLoginDialogComponent->AppModule\n\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\nAppModule -->\n\nManageUsersComponent->AppModule\n\n\n\n\n\nMiniSidebarItem\n\nMiniSidebarItem\n\nAppModule -->\n\nMiniSidebarItem->AppModule\n\n\n\n\n\nModifyQuestionComponent\n\nModifyQuestionComponent\n\nAppModule -->\n\nModifyQuestionComponent->AppModule\n\n\n\n\n\nModifyRequestComponent\n\nModifyRequestComponent\n\nAppModule -->\n\nModifyRequestComponent->AppModule\n\n\n\n\n\nMyAbsencesComponent\n\nMyAbsencesComponent\n\nAppModule -->\n\nMyAbsencesComponent->AppModule\n\n\n\n\n\nMyAbsencesListComponent\n\nMyAbsencesListComponent\n\nAppModule -->\n\nMyAbsencesListComponent->AppModule\n\n\n\n\n\nRequestChartsComponent\n\nRequestChartsComponent\n\nAppModule -->\n\nRequestChartsComponent->AppModule\n\n\n\n\n\nRequestDetailsComponent\n\nRequestDetailsComponent\n\nAppModule -->\n\nRequestDetailsComponent->AppModule\n\n\n\n\n\nSidebarBodyComponent\n\nSidebarBodyComponent\n\nAppModule -->\n\nSidebarBodyComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSidebarMenuItem\n\nSidebarMenuItem\n\nAppModule -->\n\nSidebarMenuItem->AppModule\n\n\n\n\n\nUserTableComponent\n\nUserTableComponent\n\nAppModule -->\n\nUserTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBlockScrollService\n\nBlockScrollService\n\nAppModule -->\n\nBlockScrollService->AppModule\n\n\n\n\n\nRequestsService\n\nRequestsService\n\nAppModule -->\n\nRequestsService->AppModule\n\n\n\n\n\nRequestsSurveysService\n\nRequestsSurveysService\n\nAppModule -->\n\nRequestsSurveysService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AbsencesCalendarComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                AllsurveysComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                BottomListComponent\n                            \n                            \n                                CompileComponent\n                            \n                            \n                                CreatesurveyComponent\n                            \n                            \n                                EmployeeComponent\n                            \n                            \n                                EmployeesComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                LoginDialogComponent\n                            \n                            \n                                ManageUsersComponent\n                            \n                            \n                                MiniSidebarItem\n                            \n                            \n                                ModifyQuestionComponent\n                            \n                            \n                                ModifyRequestComponent\n                            \n                            \n                                MyAbsencesComponent\n                            \n                            \n                                MyAbsencesListComponent\n                            \n                            \n                                RequestChartsComponent\n                            \n                            \n                                RequestDetailsComponent\n                            \n                            \n                                SidebarBodyComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                SidebarMenuItem\n                            \n                            \n                                UserTableComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                BottomListComponent\n                            \n                            \n                                ModifyQuestionComponent\n                            \n                            \n                                ModifyRequestComponent\n                            \n                            \n                                RequestDetailsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     BlockScrollService\n                            \n                            \n                                     RequestsService\n                            \n                            \n                                     RequestsSurveysService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AppComponent } from \"./app.component\";\nimport { AppRoutingModule } from \"./app-routing/app-routing.module\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { CalendarModule } from \"angular-calendar\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { LOCALE_ID, NgModule } from \"@angular/core\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport {\n  MiniSidebarItem,\n  SidebarBodyComponent,\n  SidebarMenuItem\n} from \"./sidebar/sidebar-body/sidebar-body.component\";\nimport {\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule\n} from \"@angular/material\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { RequestsService } from \"./absences-section/requests.service\";\nimport { RequestsSurveysService } from \"./surveys-section/requests.service\";\nimport { SidebarComponent } from \"./sidebar/sidebar.component\";\nimport { UserService } from \"./user.service\";\nimport { BlockScrollService } from \"./block-scroll.service\";\nimport {\n  BottomListComponent,\n  ManageUsersComponent\n} from \"./manage-users/manage-users.component\";\nimport { UserTableComponent } from \"./manage-users/user-table/user-table.component\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { LoginDialogComponent } from \"./login-dialog/login-dialog.component\";\n\n//Registers locale data to 'it' for date pipe format\nimport { registerLocaleData } from \"@angular/common\";\nimport localeIt from \"@angular/common/locales/it\";\nimport { MyAbsencesComponent } from \"./absences-section/my-absences/my-absences.component\";\nimport {\n  ModifyRequestComponent,\n  MyAbsencesListComponent\n} from \"./absences-section/my-absences/my-absences-list/my-absences-list.component\";\nimport { EmployeesComponent } from \"./absences-section/employees/employees.component\";\nimport { RequestChartsComponent } from \"./absences-section/request-charts/request-charts.component\";\nimport { EmployeeComponent } from \"./absences-section/employee/employee.component\";\nimport {\n  AbsencesCalendarComponent,\n  RequestDetailsComponent\n} from \"./absences-section/absences-calendar/absences-calendar.component\";\nimport {\n  CreatesurveyComponent,\n  ModifyQuestionComponent\n} from \"./surveys-section/createsurvey/createsurvey.component\";\nimport { AllsurveysComponent } from \"./surveys-section/allsurveys/allsurveys.component\";\nimport { NgCircleProgressModule } from \"ng-circle-progress\";\nimport { CompileComponent } from \"./surveys-section/compile/compile.component\";\nimport { AdminComponent } from './surveys-section/admin/admin.component';\nregisterLocaleData(localeIt, \"it\");\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BottomListComponent,\n    HomeComponent,\n    MiniSidebarItem,\n    SidebarBodyComponent,\n    SidebarMenuItem,\n    HeaderComponent,\n    SidebarComponent,\n    ManageUsersComponent,\n    UserTableComponent,\n    LoginDialogComponent,\n    ModifyQuestionComponent,\n    ModifyRequestComponent,\n    MyAbsencesComponent,\n    MyAbsencesListComponent,\n    EmployeesComponent,\n    RequestChartsComponent,\n    RequestDetailsComponent,\n    EmployeeComponent,\n    AbsencesCalendarComponent,\n    CreatesurveyComponent,\n    AllsurveysComponent,\n    CompileComponent,\n    AdminComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CalendarModule.forRoot(),\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatTableModule,\n    MatDialogModule,\n    NgxChartsModule,\n    NgCircleProgressModule.forRoot({\n      // set defaults here\n      radius: 200,\n      outerStrokeWidth: 35,\n      innerStrokeWidth: 26,\n      outerStrokeColor: \"#78C000\",\n      innerStrokeColor: \"#C7E596\",\n      animationDuration: 300\n    })\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: \"it\" },\n    BlockScrollService,\n    CookieService,\n    RequestsService,\n    RequestsSurveysService,\n    UserService\n  ],\n  entryComponents: [\n    BottomListComponent,\n    ModifyRequestComponent,\n    ModifyQuestionComponent,\n    RequestDetailsComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HomeComponent } from \"../home/home.component\";\nimport { ManageUsersComponent } from \"../manage-users/manage-users.component\";\nimport { MyAbsencesComponent } from \"../absences-section/my-absences/my-absences.component\";\nimport { EmployeesComponent } from \"../absences-section/employees/employees.component\";\nimport { EmployeeComponent } from \"../absences-section/employee/employee.component\";\nimport { AbsencesCalendarComponent } from \"../absences-section/absences-calendar/absences-calendar.component\";\nimport { CreatesurveyComponent } from \"../surveys-section/createsurvey/createsurvey.component\";\nimport { AllsurveysComponent } from \"../surveys-section/allsurveys/allsurveys.component\";\nimport { CompileComponent } from \"../surveys-section/compile/compile.component\";\nimport { AdminComponent } from \"../surveys-section/admin/admin.component\";\n\nconst appRoutes: Routes = [\n  { path: \"absences/calendar\", component: AbsencesCalendarComponent },\n  { path: \"absences/employees\", component: EmployeesComponent },\n  { path: \"absences/employee\", component: EmployeeComponent },\n  { path: \"home\", component: HomeComponent },\n  { path: \"absences/myabsences\", component: MyAbsencesComponent },\n  { path: \"surveys/createsurvey\", component: CreatesurveyComponent },\n  { path: \"surveys/allsurveys\", component: AllsurveysComponent },\n  { path: \"surveys/compile/:id/:recompile\", component: CompileComponent },\n  { path: \"surveys/admin\", component: AdminComponent },\n  { path: \"users\", component: ManageUsersComponent },\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, {\n      enableTracing: false // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockScrollService.html":{"url":"injectables/BlockScrollService.html","title":"injectable - BlockScrollService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BlockScrollService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/block-scroll.service.ts\n        \n\n            \n                Description\n            \n            \n                This service allow to block page scrolling (we need this when login dialog is open or sidebar is expanded on mobile devices)\nNOTE: Solution found at https://www.bennadel.com/blog/3374-prevent-body-scrolling-with-a-windowscrolling-service-when-showing-a-modal-window-in-angular-5-0-2.htm\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                styleTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildStyleElement\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in app/block-scroll.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildStyleElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildStyleElement()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/block-scroll.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     HTMLStyleElement\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/block-scroll.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Disable window scroll\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        enable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/block-scroll.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Enable window scroll\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            styleTag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styleTag:     HTMLStyleElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLStyleElement\n\n                        \n                    \n                        \n                            \n                                    Defined in app/block-scroll.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * This service allow to block page scrolling (we need this when login dialog is open or sidebar is expanded on mobile devices)\n *\n * NOTE: Solution found at https://www.bennadel.com/blog/3374-prevent-body-scrolling-with-a-windowscrolling-service-when-showing-a-modal-window-in-angular-5-0-2.htm\n */\n@Injectable()\nexport class BlockScrollService {\n\n    private styleTag: HTMLStyleElement;\n    constructor() {\n        //builds overflow:hidden property, it can be added to body element to disable scroll\n        this.styleTag = this.buildStyleElement();\n    }\n\n    /**\n     * Disable window scroll\n     */\n    public disable() : void {\n        //add property to body\n        document.body.appendChild( this.styleTag );\n    }\n\n    /**\n     * Enable window scroll\n     */\n    public enable() : void {\n        //remove property from body\n        document.body.removeChild( this.styleTag );\n    }\n\n    //build property to be appended to body element to disable scroll\n    private buildStyleElement() : HTMLStyleElement {\n        var style = document.createElement( \"style\" );\n        style.type = \"text/css\";\n        style.setAttribute( \"data-debug\", \"Injected by WindowScrolling service.\" );\n        style.textContent = `\n            body {\n                overflow: hidden !important ;\n            }\n        `;\n        return( style );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BossResponseType.html":{"url":"interfaces/BossResponseType.html","title":"interface - BossResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BossResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        boss\n                                \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        boss\n                                    \n                                \n                                \n                                    \n                                        boss:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BottomListComponent.html":{"url":"components/BottomListComponent.html","title":"component - BottomListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BottomListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/manage-users/manage-users.component.ts\n\n\n    \n        Description\n    \n    \n        This component is used to show a list of users in order to make user chose new boss for previously selected user (data of the selected user (employee) are injected from outer component)\nNOTE: base component code got from Angular Material\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bottom-list\n            \n\n\n\n\n            \n                templateUrl\n                ./bottom-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set_boss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, bottomSheetRef: MatBottomSheetRef, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/manage-users/manage-users.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        bottomSheetRef\n                                                  \n                                                        \n                                                                    MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_boss\n                            \n                            \n                        \n                    \n                \n                \n                    \nset_boss(id_user: , id_boss: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            When user selects new boss from the list this function is called to send a request to backend\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id_user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id_boss\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\nimport {\n  MAT_BOTTOM_SHEET_DATA,\n  MatBottomSheet,\n  MatBottomSheetRef\n} from \"@angular/material\";\nimport { UserType } from \"../interfaces\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * This component is used to show a list of users in order to make user chose new boss for previously selected user (data of the selected user (employee) are injected from outer component)\n *\n * NOTE: base component code got from Angular Material\n */\n@Component({\n  selector: \"bottom-list\",\n  templateUrl: \"./bottom-list.component.html\"\n})\nexport class BottomListComponent {\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private bottomSheetRef: MatBottomSheetRef,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * When user selects new boss from the list this function is called to send a request to backend\n   */\n  set_boss(id_user, id_boss) {\n    //UserService's set_boss method is called, component ref is passed to allow to close this list after the submission of the request to the backend\n    this.UserService.set_boss(id_user, id_boss, this.bottomSheetRef);\n  }\n}\n\n/**\n * Users Management page, in this page the user can add new users, set boss for any user and see a complete list of users\n */\n@Component({\n  selector: \"manage-users\",\n  templateUrl: \"./manage-users.component.html\",\n  styleUrls: [\"./manage-users.component.css\"]\n})\nexport class ManageUsersComponent {\n  private showPassword: boolean = false;\n  private showPassword2: boolean = false;\n\n  //fields of add-user form\n  public number: number;\n  public name: string;\n  public surname: string;\n  public email: string;\n  public password: string;\n  public password2: string;\n\n  constructor(\n    private bottomSheet: MatBottomSheet,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * This function is called when submit button of the form is clicked\n   */\n  add_user() {\n    var user = {\n      name: this.name,\n      surname: this.surname,\n      email: this.email,\n      password: this.password\n    };\n    //UserService's add_user method is called\n    this.UserService.add_user(user);\n\n    //clear form\n    this.name = null;\n    this.surname = null;\n    this.email = null;\n    this.password = null;\n    this.password2 = null;\n  }\n\n  /**\n   * Method used in the template to show the total number of users\n   */\n  get_number() {\n    if (this.number) {\n      return \"(\" + this.number + \")\";\n    } else return \"\";\n  }\n\n  /**\n   * This function is called when set_boss button is clicked for some user in the table, it opens the bottom-list for boss selection\n   */\n  openBottomSheet(employee) {\n    var array = this.UserService.get_users(); //full list of users got from UserService\n    var users = [];\n    for (var i = 0; i \n    \n\n    \n        Nomina supervisore per {{data.employee.name}} {{data.employee.surname}}\n\n  \n    {{user.name}} {{user.surname}}\n    {{user.email}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nomina supervisore per {{data.employee.name}} {{data.employee.surname}}      {{user.name}} {{user.surname}}    {{user.email}}  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BottomListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompileComponent.html":{"url":"components/CompileComponent.html","title":"component - CompileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/surveys-section/compile/compile.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows frontend section for survey compilation\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                compile\n            \n\n            \n                styleUrls\n                compile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./compile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                ArrayStep\n                            \n                            \n                                id\n                            \n                            \n                                questions\n                            \n                            \n                                recompile\n                            \n                            \n                                step\n                            \n                            \n                                survey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AnswersList\n                            \n                            \n                                createArrayStep\n                            \n                            \n                                fillAnswer\n                            \n                            \n                                forwardStep\n                            \n                            \n                                isConditioned\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepQuestions\n                            \n                            \n                                upgradeQuestionsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(RequestsSurveysService: RequestsSurveysService, UserService: UserService, HttpClient: HttpClient, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/compile/compile.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        RequestsSurveysService\n                                                  \n                                                        \n                                                                    RequestsSurveysService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AnswersList\n                            \n                            \n                        \n                    \n                \n                \n                    \nAnswersList(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            return answer list of question passed by parameter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createArrayStep\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateArrayStep()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillAnswer(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:165\n                            \n                        \n\n\n                \n                    \n                            Fill previous answer submitted for specified question by user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forwardStep\n                            \n                            \n                        \n                    \n                \n                \n                    \nforwardStep(stepper: MatStepper, step: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Submit questions of current step and, if is the ultimate step, finish compilation or recompilation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stepper\n                                                        \n                                                                    MatStepper\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        step\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isConditioned\n                            \n                            \n                        \n                    \n                \n                \n                    \nisConditioned(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Fill condition flag of specified question\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:321\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepQuestions(step: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Return only questions of specified step passed by parameter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        step\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QuestionsType[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upgradeQuestionsList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupgradeQuestionsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Pull questions from database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ArrayStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ArrayStep:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     QuestionsType[]\n\n                    \n                \n                    \n                        \n                            Type :     QuestionsType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recompile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        recompile:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            step\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        step:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            survey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        survey:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\nimport { RequestsSurveysService } from \"../requests.service\";\nimport {\n  AnswerResponseType,\n  QuestionsType,\n  QuestionsResponseType,\n  SuccessResponseType,\n  ConditionResponseType\n} from \"../../interfaces\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, interval } from \"rxjs\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport swal from \"sweetalert\";\nimport { switchMap, map, share, filter } from \"rxjs/operators\";\nimport { UserService } from \"../../user.service\";\nimport * as config from \"../../config.json\";\n\n/**\n * This component shows frontend section for survey compilation\n */\n\n@Component({\n  selector: \"compile\",\n  templateUrl: \"./compile.component.html\",\n  styleUrls: [\"./compile.component.css\"]\n})\nexport class CompileComponent implements OnInit {\n  survey: any; //survey object\n  id: number; //id of survey\n  recompile: string; //flag for recompiling\n\n  step: number; //number of step of the survey\n\n  questions: QuestionsType[]; //questions of th survey\n\n  ArrayStep: number[];\n\n  private api: string;\n\n  constructor(\n    private RequestsSurveysService: RequestsSurveysService,\n    private UserService: UserService,\n    private HttpClient: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.api = (config).api;\n\n    //Set variables from url parameters\n    this.route.params.subscribe(res => (this.id = res.id));\n    this.route.params.subscribe(res => (this.recompile = res.recompile));\n\n    this.ArrayStep = [];\n\n    this.upgradeQuestionsList(); //Pull questions from database\n  }\n\n  /**\n   * Pull questions from database\n   */\n\n  upgradeQuestionsList() {\n    var url = this.api + \"surveys/surveys/\" + this.id;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        this.questions = data.questions;\n        this.step = data.step[0].step;\n        this.survey = data.survey;\n        this.createArrayStep();\n        //For every question fills condition answer\n        for (var i = 0; i  {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Return only questions of specified step passed by parameter\n   */\n\n  stepQuestions(step: number): QuestionsType[] {\n    return this.questions.filter(question => question.step == step);\n  }\n\n  createArrayStep() {\n    for (var i = 1; i (url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        if (data.condition == \"true\") {\n          question.condition_confirmed = true;\n        } else {\n          question.condition_confirmed = false;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Fill previous answer submitted for specified question by user\n   */\n\n  fillAnswer(question) {\n    var url = this.api + \"surveys/answers/\" + question.id;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        question.answer_compile = data.answer;\n      },\n      err => {\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Submit questions of current step and, if is the ultimate step, finish compilation or recompilation\n   */\n\n  forwardStep(stepper: MatStepper, step) {\n    //case of recompilation\n    if (this.recompile == \"true\") {\n      //for every question submit new answer\n      for (var i = 0; i (url, post, {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            )\n          }).subscribe(\n            data => {\n              if (!data.success) {\n                swal(\n                  \"Oops!\",\n                  \"Errore durante l'invio della richiesta!\",\n                  \"error\"\n                );\n                if (data.error) {\n                  console.log(data.error);\n                }\n                return;\n              }\n              //Refresh questins array with new values\n              for (var i = 0; i  {\n              swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n              console.log(err);\n              return;\n            }\n          );\n        }\n      }\n    } else {\n      //case of compilation for first time\n      for (var i = 0; i (url, post, {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            )\n          }).subscribe(\n            data => {\n              if (!data.success) {\n                swal(\n                  \"Oops!\",\n                  \"Errore durante l'invio della richiesta!\",\n                  \"error\"\n                );\n                if (data.error) {\n                  console.log(data.error);\n                }\n                return;\n              }\n              for (var i = 0; i  {\n              swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n              console.log(err);\n              return;\n            }\n          );\n        }\n      }\n    }\n    //Final Phase\n    if (\n      step == this.ArrayStep[this.ArrayStep.length - 1] &&\n      this.recompile == \"false\"\n    ) {\n      //Create record for compilation\n      var url = this.api + \"surveys/submitsurvey/\" + this.id;\n      var post = {\n        answer: \"answer\"\n      };\n      this.HttpClient.post(url, post, {\n        headers: new HttpHeaders().set(\n          \"Authorization\",\n          \"bearer \" + this.UserService.get_token()\n        )\n      }).subscribe(\n        data => {\n          if (!data.success) {\n            swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n            if (data.error) {\n              console.log(data.error);\n            }\n            return;\n          }\n          swal(\"Fatto!\", \"Sondaggio compilato correttamente!\", \"success\");\n          this.router.navigate([\"/home\"]);\n        },\n        err => {\n          swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n          console.log(err);\n          return;\n        }\n      );\n      return;\n    } else if (\n      step == this.ArrayStep[this.ArrayStep.length - 1] &&\n      this.recompile == \"true\"\n    ) {\n      swal(\"Fatto!\", \"Sondaggio ricompilato correttamente!\", \"success\");\n    } else {\n      stepper.next();\n    }\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    Compilazione sondaggio\n  \n  \n  \n    \n      \n      \n        \n        \n          {{question.question}}\n          \n            \n              \n                {{answer}}\n              \n            \n          \n          \n            \n          \n        \n      \n      \n      Prosegui\n    \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Compilazione sondaggio                                                {{question.question}}                                                    {{answer}}                                                                                              Prosegui          '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConditionResponseType.html":{"url":"interfaces/ConditionResponseType.html","title":"interface - ConditionResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConditionResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        condition\n                                \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                    \n                                \n                                \n                                    \n                                        condition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmployeeComponent.html":{"url":"components/EmployeeComponent.html","title":"component - EmployeeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmployeeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/employee/employee.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the overview of the data related to a specific user.\nIn this page the boss of the user specified in the queryparams can approve or refuse his absence-requests and see some statistics about this employee\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-employee\n            \n\n            \n                styleUrls\n                employee.component.css\n            \n\n\n\n            \n                templateUrl\n                ./employee.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Private\n                                employee\n                            \n                            \n                                    Private\n                                employee_requests\n                            \n                            \n                                    Private\n                                employee_requestsSubscription\n                            \n                            \n                                    Private\n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayed_requests\n                            \n                            \n                                get_state_label\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, RequestsService: RequestsService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/employee/employee.component.ts:23\n                            \n                        \n\n                \n                    \n                            The constructor gets the info of the selected employee from UserService and subscribe to RequestsService observable to get all employees requests, when data is received, filters it to get just the requests of the selected employee\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayed_requests\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayed_requests()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Get the number of requests currently diplayed requests considering the effect of state filter\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_state_label\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_state_label(state: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Get the label to be displayed to show the state of the request in the template\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"Approvata\" | \"Rifiutata\" | \"In attesa di approvazione\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Unsubscription from requests-service observable to get employees requests\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employee\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employee:     UserType\n\n                    \n                \n                    \n                        \n                            Type :     UserType\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employee_requests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employee_requests:     RequestType[]\n\n                    \n                \n                    \n                        \n                            Type :     RequestType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employee_requestsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employee_requestsSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { RequestsService } from \"../requests.service\";\nimport { RequestType, UserType } from \"../../interfaces\";\nimport { UserService } from \"../../user.service\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * This component is the overview of the data related to a specific user.\n *\n * In this page the boss of the user specified in the queryparams can approve or refuse his absence-requests and see some statistics about this employee\n */\n@Component({\n  selector: \"app-employee\",\n  templateUrl: \"./employee.component.html\",\n  styleUrls: [\"./employee.component.css\"]\n})\nexport class EmployeeComponent implements OnDestroy {\n  private employee_requestsSubscription: Subscription; //subscription to requests-service observable to get the list of the requests made by any of the employees of the logged-in user\n  private api: string; //api base url\n  private employee: UserType; //info of the employee\n  private employee_requests: RequestType[]; //requests of the specific employee\n  private filter: number = -1; //parameter to filter requests by the state\n\n  /**\n   * The constructor gets the info of the selected employee from UserService and subscribe to RequestsService observable to get all employees requests, when data is received, filters it to get just the requests of the selected employee\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private RequestsService: RequestsService,\n    private UserService: UserService\n  ) {\n    this.route.queryParams.subscribe(params => {\n      //get the id of the employee from route queryparams\n      if (!params[\"employee\"]) {\n        this.router.navigate([\"/home\"]); //no user to display, redirect to home\n      } else {\n        //subscription to requests-service observable to get requests list and filter it to get the requests of the specific employee\n        this.employee_requestsSubscription = this.RequestsService.employees_requests$.subscribe(\n          data => {\n            //get info of the employee from UserService\n            this.employee = this.UserService.get_user_by_id(params[\"employee\"]);\n            var array = [];\n            for (var i = 0; i \n    \n\n    \n        \n    \n        Impiegato: {{employee.surname}} {{employee.name}}\n        {{employee.email}}\n    \n    \n        \n            \n                \n                    Richieste\n                \n                \n                     0\">\n                    \n                      \n                          Tutte\n                          Approvate\n                          In Attesa\n                          Rifiutate\n                      \n                    \n                  \n                    \n                        Nessuna richiesta da mostrare...\n                    \n                    \n                        \n                    \n                \n                 0\">\n                    \n                      \n                        \n                          \n                            \n                              Richiesta #{{request.id}} ({{request.reason | titlecase}})\n                            \n                            \n                              {{get_state_label(request.state)}}\n                            \n                          \n                          \n                            \n                          \n                          \n                            \n                              \n                                \n                                  Data di inizio: {{request.start_date | date : 'EEEE, d MMMM y' | titlecase}}\n                                \n                                \n                                  Data di fine (compresa): {{request.end_date | date : 'EEEE, d MMMM y' | titlecase}}\n                                \n                                \n                                  Motivazione: {{request.reason | titlecase}}\n                                \n                              \n                            \n                            \n                              \n                                File giustificativo:\n                                \n                                  \n                                \n                                \n                                  \n                                \n                              \n                            \n                          \n                          \n                          Approva\n                          Rifiuta\n                        \n                        \n                      \n                    \n                \n            \n            \n                \n                    \n                        Statistiche Impiegato\n                    \n                    \n                        \n                    \n                    \n                        Nessuna Statistica da mostrare\n                        Questo impiegato non ha richiesto dei permessi...\n                    \n                \n                \n                   0\">\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Impiegato: {{employee.surname}} {{employee.name}}        {{employee.email}}                                                                Richieste                                                     0\">                                                                    Tutte                          Approvate                          In Attesa                          Rifiutate                                                                                                        Nessuna richiesta da mostrare...                                                                                                                     0\">                                                                                                                                                      Richiesta #{{request.id}} ({{request.reason | titlecase}})                                                                                      {{get_state_label(request.state)}}                                                                                                                                                                                                                                                                                            Data di inizio: {{request.start_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                                                                                  Data di fine (compresa): {{request.end_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                                                                                  Motivazione: {{request.reason | titlecase}}                                                                                                                                                                                    File giustificativo:                                                                                                                                                                                                                                                                                                                                            Approva                          Rifiuta                                                                                                                                                                                              Statistiche Impiegato                                                                                                                                Nessuna Statistica da mostrare                        Questo impiegato non ha richiesto dei permessi...                                                                       0\">                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmployeeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmployeesComponent.html":{"url":"components/EmployeesComponent.html","title":"component - EmployeesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmployeesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/employees/employees.component.ts\n\n\n    \n        Description\n    \n    \n        This component contains the dashboard for bosses in wich they can see some statistic based on all the requests made by their employees and see a list of their own employees\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                employees\n            \n\n            \n                styleUrls\n                employees.component.css\n            \n\n\n\n            \n                templateUrl\n                ./employees.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                employees\n                            \n                            \n                                    Private\n                                employeesSubscription\n                            \n                            \n                                    Private\n                                requests\n                            \n                            \n                                    Private\n                                requestsSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get_pending_requests_number\n                            \n                            \n                                get_requests_number\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                sort_employees\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(RequestsService: RequestsService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/employees/employees.component.ts:19\n                            \n                        \n\n                \n                    \n                            The constructor subscribes to RequestsService Observables to get employees list and the list of all their requests\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_pending_requests_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_pending_requests_number(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Get the number of pending requests made by specified employee (displayed in the user list)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_requests_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_requests_number(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Get the number of requests made by specified employee (displayed in the user list)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Unsubscription from requests-service observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort_employees\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort_employees(employees: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Simple name sorting applied to Employees List when received from RequestsService's observable flow\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employees\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employees\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employees:     UserType[]\n\n                    \n                \n                    \n                        \n                            Type :     UserType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employeesSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employeesSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requests:     RequestType[]\n\n                    \n                \n                    \n                        \n                            Type :     RequestType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requestsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestsSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from \"@angular/core\";\nimport { RequestsService } from \"../requests.service\";\nimport { RequestType, UserType } from \"../../interfaces\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * This component contains the dashboard for bosses in wich they can see some statistic based on all the requests made by their employees and see a list of their own employees\n */\n@Component({\n  selector: \"employees\",\n  templateUrl: \"./employees.component.html\",\n  styleUrls: [\"./employees.component.css\"]\n})\nexport class EmployeesComponent implements OnDestroy {\n  private employees: UserType[]; //list of employees\n  private requests: RequestType[]; //list of all request made by any of the employees\n  private employeesSubscription: Subscription; //subscription to observable to get employees list from requests-service\n  private requestsSubscription: Subscription; //subscription to observable to get requests list from requests-service\n\n  /**\n   * The constructor subscribes to RequestsService Observables to get employees list and the list of all their requests\n   */\n  constructor(private RequestsService: RequestsService) {\n    //subscription to observable to get employees list from requests-service\n    this.employeesSubscription = this.RequestsService.employees$.subscribe(\n      data => {\n        this.employees = this.sort_employees(data);\n      }\n    );\n    this.RequestsService.reset_employees_version(); //force observable to emit data in the stream even if it has not changed from last check\n\n    //subscription to observable to get requests list from requests-service\n    this.requestsSubscription = this.RequestsService.employees_requests$.subscribe(\n      data => {\n        this.requests = data;\n      }\n    );\n    this.RequestsService.reset_employees_requests_version(); //force observable to emit data in the stream even if it has not changed from last check\n  }\n\n  /**\n   * Get the number of requests made by specified employee (displayed in the user list)\n   */\n  get_requests_number(id) {\n    if (!this.requests) return 0;\n    var count = 0;\n    for (var i = 0; i \n    \n\n    \n        \n    \n        Richieste (Amministratore)\n    \n    \n        \n            \n                \n                    Impiegati\n                \n                \n                    \n                      \n                        \n                        {{employee.surname | titlecase}} {{employee.name | titlecase}}\n                        \n                          {{get_requests_number(employee.id)}} Richieste\n                          \n                          ({{get_pending_requests_number(employee.id)}} da approvare)\n                        \n                        \n                      \n                    \n                    \n                        Nessun Utente da mostrare...\n                    \n                    \n                        \n                    \n                \n            \n            \n                \n                    Statistiche Generali\n                    \n                        \n                    \n                    \n                        Nessuna Statistica da mostrare\n                        Nessuno dei tuoi impiegati ha richiesto dei permessi...\n                    \n                \n                \n                   0\">\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Richieste (Amministratore)                                                                Impiegati                                                                                                                          {{employee.surname | titlecase}} {{employee.name | titlecase}}                                                  {{get_requests_number(employee.id)}} Richieste                                                    ({{get_pending_requests_number(employee.id)}} da approvare)                                                                                                                                      Nessun Utente da mostrare...                                                                                                                                                                Statistiche Generali                                                                                                            Nessuna Statistica da mostrare                        Nessuno dei tuoi impiegati ha richiesto dei permessi...                                                                       0\">                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmployeesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the top navbar of the page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                toggle_sidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side_expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/header/header.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side_expanded\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/header/header.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/header/header.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/header/header.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Uses login service to logout, login modal will be displayed over the page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_sidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_sidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/header/header.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            Emits output to outer component in order to change sidebar status\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\n\n/**\n * This component is the top navbar of the page\n */\n@Component({\n  selector: \"header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"]\n})\nexport class HeaderComponent {\n  @Input() side_expanded: boolean; //track sidebar status, logo is shown when sidebar is collapsed\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor(private UserService: UserService) {}\n\n  /**\n   * Emits output to outer component in order to change sidebar status\n   */\n  toggle_sidebar() {\n    this.toggle.emit();\n  }\n\n  /**\n   * Uses login service to logout, login modal will be displayed over the page\n   */\n  logout() {\n    this.UserService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n      \n        \n          \n             {{UserService.get_name()}}\n            \n          \n          \n            \n              \n                Gestione Utenti\n              \n            \n            \n              \n                Log Out\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                     {{UserService.get_name()}}                                                                          Gestione Utenti                                                                    Log Out                                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        This component just contains the cards to enter one of the 3 sections of the app (absences, rooms, surveys)\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/home/home.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\n\n/**\n * This component just contains the cards to enter one of the 3 sections of the app (absences, rooms, surveys)\n */\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent {\n  constructor(private UserService: UserService) {}\n}\n\n    \n\n    \n        \n  \n    Benvenuto, {{UserService.get_name()}}\n  \n\n  \n\n    \n      \n        \n          Sezione Ferie e Assenze\n          Sviluppata da Orazio Scavo\n        \n        \n        \n          \n            In questa sezione tutti i dipendenti possono gestire i propri permessi per ferie o altre assenze. Le richieste dovranno essere approvate dai relativi responsabili prima di essere confermate.\n          \n        \n        \n          CALENDARIO\n          PERMESSI\n        \n      \n    \n\n    \n      \n        \n          Sezione Test e Sondaggi\n          Sviluppata da Federico Grasso\n        \n        \n        \n          \n            In questa sezione è possibile creare nuovi sondaggi e rispondere ai sondaggi creati da altri impiegati. Il gestore di ogni sondaggio potrà avere visione delle statistiche ad esso relative.\n          \n        \n        \n          CREA SONDAGGIO\n          TUTTI I SONDAGGI\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Benvenuto, {{UserService.get_name()}}                                Sezione Ferie e Assenze          Sviluppata da Orazio Scavo                                              In questa sezione tutti i dipendenti possono gestire i propri permessi per ferie o altre assenze. Le richieste dovranno essere approvate dai relativi responsabili prima di essere confermate.                                    CALENDARIO          PERMESSI                                              Sezione Test e Sondaggi          Sviluppata da Federico Grasso                                              In questa sezione è possibile creare nuovi sondaggi e rispondere ai sondaggi creati da altri impiegati. Il gestore di ogni sondaggio potrà avere visione delle statistiche ad esso relative.                                    CREA SONDAGGIO          TUTTI I SONDAGGI                    '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogResponseType.html":{"url":"interfaces/LogResponseType.html","title":"interface - LogResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LogResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginDialogComponent.html":{"url":"components/LoginDialogComponent.html","title":"component - LoginDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/login-dialog/login-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the modal containing the login form, it's shown over the page when user is not logged-in (no operation is allowed to a non-logged-in user)\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                login-dialog\n            \n\n            \n                styleUrls\n                login-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-dialog.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                email\n                            \n                            \n                                    Private\n                                password\n                            \n                            \n                                    Private\n                                showPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle_show_password\n                            \n                            \n                                try_login\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(BlockScrollService: BlockScrollService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/login-dialog/login-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            The constructor just uses the BlockScrollService to disable scroll whand login dialog is shown\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        BlockScrollService\n                                                  \n                                                        \n                                                                    BlockScrollService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_show_password\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_show_password()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            makes password field's content visible or make it hidden again\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            try_login\n                            \n                            \n                        \n                    \n                \n                \n                    \ntry_login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Uses login service to try log in with the credentials inserted by the user in the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Simple validation of email and password values: they must not be empty, this control is used to disable button in login form\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showPassword:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { BlockScrollService } from \"../block-scroll.service\";\nimport { UserService } from \"../user.service\";\n\n/**\n * This component is the modal containing the login form, it's shown over the page when user is not logged-in (no operation is allowed to a non-logged-in user)\n */\n@Component({\n  selector: \"login-dialog\",\n  templateUrl: \"./login-dialog.component.html\",\n  styleUrls: [\"./login-dialog.component.css\"]\n})\nexport class LoginDialogComponent {\n  private showPassword: boolean = false;\n\n  //login form inputs\n  private email: string;\n  private password: string;\n\n  /**\n   * The constructor just uses the BlockScrollService to disable scroll whand login dialog is shown\n   */\n  constructor(\n    private BlockScrollService: BlockScrollService,\n    private UserService: UserService\n  ) {\n    this.BlockScrollService.disable(); //scroll is disabled when this modal is shown over the page\n  }\n\n  /**\n   * makes password field's content visible or make it hidden again\n   */\n  toggle_show_password() {\n    this.showPassword = !this.showPassword;\n  }\n\n  /**\n   * Uses login service to try log in with the credentials inserted by the user in the form\n   */\n  try_login() {\n    this.UserService.try_login(this.email, this.password);\n  }\n\n  /**\n   * Simple validation of email and password values: they must not be empty, this control is used to disable button in login form\n   */\n  validate() {\n    if (this.email && this.password) {\n      if (this.email != \"\" && this.password != \"\") {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n    \n        \n\n  LOGIN\n  All'interno di questa applicazione non è prevista la navigazione anonima. \n    Inserisci le tue credenziali per accedere\n  \n  \n    \n      \n    \n    \n      \n    \n    \n    \n      INVIA\n    \n  \n  \n    \n     Accedi come amministratore per aggiungere nuovi utenti.\n    EMAIL AMMINISTRATORE: [admin@wonderfulcompany.it]\n    \n    PASSWORD DI DEFAULT: [angular] \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  LOGIN  All\\'interno di questa applicazione non è prevista la navigazione anonima.     Inserisci le tue credenziali per accedere                                              INVIA                 Accedi come amministratore per aggiungere nuovi utenti.    EMAIL AMMINISTRATORE: [admin@wonderfulcompany.it]        PASSWORD DI DEFAULT: [angular]   '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageUsersComponent.html":{"url":"components/ManageUsersComponent.html","title":"component - ManageUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/manage-users/manage-users.component.ts\n\n\n    \n        Description\n    \n    \n        Users Management page, in this page the user can add new users, set boss for any user and see a complete list of users\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                manage-users\n            \n\n            \n                styleUrls\n                manage-users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manage-users.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                number\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                password2\n                            \n                            \n                                    Private\n                                showPassword\n                            \n                            \n                                    Private\n                                showPassword2\n                            \n                            \n                                    Public\n                                surname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add_user\n                            \n                            \n                                get_number\n                            \n                            \n                                openBottomSheet\n                            \n                            \n                                password_confirmed\n                            \n                            \n                                set_number\n                            \n                            \n                                toggle_show_password\n                            \n                            \n                                toggle_show_password2\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bottomSheet: MatBottomSheet, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/manage-users/manage-users.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bottomSheet\n                                                  \n                                                        \n                                                                    MatBottomSheet\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add_user\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd_user()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            This function is called when submit button of the form is clicked\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_number()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Method used in the template to show the total number of users\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openBottomSheet\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenBottomSheet(employee: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            This function is called when set_boss button is clicked for some user in the table, it opens the bottom-list for boss selection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employee\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password_confirmed\n                            \n                            \n                        \n                    \n                \n                \n                    \npassword_confirmed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Control for password fields (they have to hold the same value)\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nset_number(val: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:130\n                            \n                        \n\n\n                \n                    \n                            Handler for inner component (user-table) emission: the emitted values is the number of users\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_show_password\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_show_password()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Makes password field's content visible or make it hidden again\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_show_password2\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_show_password2()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            Makes password2 field's content visible or make it hidden again\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Simple validation for add-user form, all fields must be not null and passwords must be equals\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            number\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        number:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showPassword:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showPassword2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showPassword2:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            surname\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        surname:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\nimport {\n  MAT_BOTTOM_SHEET_DATA,\n  MatBottomSheet,\n  MatBottomSheetRef\n} from \"@angular/material\";\nimport { UserType } from \"../interfaces\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * This component is used to show a list of users in order to make user chose new boss for previously selected user (data of the selected user (employee) are injected from outer component)\n *\n * NOTE: base component code got from Angular Material\n */\n@Component({\n  selector: \"bottom-list\",\n  templateUrl: \"./bottom-list.component.html\"\n})\nexport class BottomListComponent {\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private bottomSheetRef: MatBottomSheetRef,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * When user selects new boss from the list this function is called to send a request to backend\n   */\n  set_boss(id_user, id_boss) {\n    //UserService's set_boss method is called, component ref is passed to allow to close this list after the submission of the request to the backend\n    this.UserService.set_boss(id_user, id_boss, this.bottomSheetRef);\n  }\n}\n\n/**\n * Users Management page, in this page the user can add new users, set boss for any user and see a complete list of users\n */\n@Component({\n  selector: \"manage-users\",\n  templateUrl: \"./manage-users.component.html\",\n  styleUrls: [\"./manage-users.component.css\"]\n})\nexport class ManageUsersComponent {\n  private showPassword: boolean = false;\n  private showPassword2: boolean = false;\n\n  //fields of add-user form\n  public number: number;\n  public name: string;\n  public surname: string;\n  public email: string;\n  public password: string;\n  public password2: string;\n\n  constructor(\n    private bottomSheet: MatBottomSheet,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * This function is called when submit button of the form is clicked\n   */\n  add_user() {\n    var user = {\n      name: this.name,\n      surname: this.surname,\n      email: this.email,\n      password: this.password\n    };\n    //UserService's add_user method is called\n    this.UserService.add_user(user);\n\n    //clear form\n    this.name = null;\n    this.surname = null;\n    this.email = null;\n    this.password = null;\n    this.password2 = null;\n  }\n\n  /**\n   * Method used in the template to show the total number of users\n   */\n  get_number() {\n    if (this.number) {\n      return \"(\" + this.number + \")\";\n    } else return \"\";\n  }\n\n  /**\n   * This function is called when set_boss button is clicked for some user in the table, it opens the bottom-list for boss selection\n   */\n  openBottomSheet(employee) {\n    var array = this.UserService.get_users(); //full list of users got from UserService\n    var users = [];\n    for (var i = 0; i \n    \n\n    \n        \n    \n        \n            Inserimento Utente\n        \n        \n            \n                \n                    \n                       \n                    \n                \n                \n                    \n                       \n                    \n                \n                \n                    \n                      \n                    \n                \n                \n                    \n                      \n                    \n                    \n                \n                \n                    \n                      \n                    \n                    \n                \n              \n                INVIA\n                \n                 Le due password non coincidono\n              \n            \n        \n    \n    \n        \n            Lista Impiegati {{get_number()}}\n        \n        \n            \n        \n        \n            Nessun Utente da mostrare...\n        \n        \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Inserimento Utentee due password non coincidono                                                              Lista Impiegati {{get_number()}}                                                        Nessun Utente da mostrare...                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        short_name\n                                \n                                \n                                        sub_menu\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        short_name\n                                    \n                                \n                                \n                                    \n                                        short_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_menu\n                                    \n                                \n                                \n                                    \n                                        sub_menu:     string[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[][]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MiniSidebarItem.html":{"url":"components/MiniSidebarItem.html","title":"component - MiniSidebarItem","body":"\n                   \n\n\n\n\n\n  Components\n  MiniSidebarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/sidebar/sidebar-body/sidebar-body.component.ts\n\n\n    \n        Description\n    \n    \n        This component is an Element of restricted sidebar menu (desktop-only)\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mini-sidebar-item\n            \n\n            \n                styleUrls\n                mini-sidebar-item.component.css\n            \n\n\n\n            \n                templateUrl\n                mini-sidebar-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get_icon\n                            \n                            \n                                get_section_active\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, Router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        Router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type:    MenuItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.target' \n                        \n                    \n                \n                    \ndocument:click(targetElement: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            The Listener is used to handle every click on the window, and if the element clicked is not this menu-item the sub-menu is closed\n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_icon\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_icon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Get tha class of the icon to be shown for this menu entry\n\n\n                            \n                                Returns :     \"fas fa-calendar-times\" | \"fas fa-chalkboard-teacher\" | \"fas fa-question\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_section_active\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_section_active()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Checks if current route is in the section related to this item, so it can be displayed as active\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Output\n} from \"@angular/core\";\nimport { UserService } from \"../../user.service\";\nimport { Router } from \"@angular/router/\";\nimport { interval } from \"rxjs\";\nimport { MenuItem } from \"../../interfaces\";\n\n/**\n * This component is an Element of restricted sidebar menu (desktop-only)\n */\n@Component({\n  selector: \"mini-sidebar-item\",\n  templateUrl: \"mini-sidebar-item.component.html\",\n  styleUrls: [\"./mini-sidebar-item.component.css\"]\n})\nexport class MiniSidebarItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is shown\n\n  constructor(private _elementRef: ElementRef, private Router: Router) {}\n\n  /**\n   * The Listener is used to handle every click on the window, and if the element clicked is not this menu-item the sub-menu is closed\n   */\n  @HostListener(\"document:click\", [\"$event.target\"])\n  public onClick(targetElement) {\n    const clickedInside = this._elementRef.nativeElement.contains(\n      targetElement\n    ); //check if element is clicked\n    if (!clickedInside) {\n      this.active = false; //close sub-menu if click is external to this component\n    }\n  }\n\n  /**\n   * Get tha class of the icon to be shown for this menu entry\n   */\n  get_icon() {\n    if (this.item.name == \"Sezione Assenze\") return \"fas fa-calendar-times\";\n    if (this.item.name == \"Sezione Aule\") return \"fas fa-chalkboard-teacher\";\n    return \"fas fa-question\";\n  }\n\n  /**\n   * Checks if current route is in the section related to this item, so it can be displayed as active\n   */\n  get_section_active() {\n    var parts = this.Router.url.split(\"/\");\n    if (parts[1] == \"absences\" && this.item.short_name == \"Assenze\")\n      return true;\n    if (parts[1] == \"surveys\" && this.item.short_name == \"Sondaggi\")\n      return true;\n    if (parts[1] == \"rooms\" && this.item.short_name == \"Aule\") return true;\n    return false;\n  }\n}\n\n/**\n * This component is an Element of expanded-sidebar menu\n */\n@Component({\n  selector: \"sidebar-menu-item\",\n  templateUrl: \"sidebar-menu-item.component.html\",\n  styleUrls: [\"./sidebar-menu-item.component.css\"]\n})\nexport class SidebarMenuItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is visible\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor(private Router: Router) {}\n\n  /**\n   * Method called when a submenu item is clicked, it hides sidebar in mobile devices\n   */\n  collapse_if_mobile() {\n    if (window.screen.width  {\n      this.today = Date.now(); //refresh datetime every second\n    });\n\n    //Build the list of data object to be injected in menu-item components\n    var obj = {\n      //first item, absences section\n      name: \"Sezione Assenze\",\n      short_name: \"Assenze\",\n      sub_menu: [\n        [\"Calendario\", \"absences/calendar\"],\n        [\"Le tue Richieste\", \"/absences/myabsences\"],\n        [\"Richieste (amministratore)\", \"/absences/employees\"]\n      ]\n    };\n    this.items.push(obj);\n\n    /*obj = {\n      //second item, rooms section\n      name: \"Sezione Aule\",\n      short_name: \"Aule\",\n      sub_menu: [\n        [\"Aule (amministratore)\", \"\"],\n        [\"Le tue prenotazioni\", \"\"],\n        [\"Prenota Aula\", \"\"],\n        [\"Tutte le Aule\", \"\"]\n      ]\n    };\n    this.items.push(obj);*/\n\n    obj = {\n      //third item, surveys section\n      name: \"Sezione Sondaggi\",\n      short_name: \"Sondaggi\",\n      sub_menu: [\n        [\"Crea Sondaggio\", \"surveys/createsurvey\"],\n        [\"Sondaggi (amministratore)\", \"surveys/admin\"],\n        [\"Tutti i Sondaggi\", \"surveys/allsurveys\"]\n      ]\n    };\n    this.items.push(obj);\n  }\n\n  /**\n   * Emits output to the outer component in oorder to change sidebar status\n   */\n  emit_toggle() {\n    this.toggle.emit();\n  }\n\n  /**\n   * Emits output to the outer component in order to change sidebar status (just for mobile devices)\n   */\n  emit_toggle_if_mobile() {\n    if (window.screen.width \n    \n\n    \n        \n  \n    \n  \n  \n  {{item.short_name}}\n\n\n  \n    \n      {{item[0]}}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{item.short_name}}            {{item[0]}}      '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MiniSidebarItem'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModifyQuestionComponent.html":{"url":"components/ModifyQuestionComponent.html","title":"component - ModifyQuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModifyQuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/surveys-section/createsurvey/createsurvey.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows modal for survey modification, and contains a form very similar to the creation of the survey, both as a structure and as a logic\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modify-question\n            \n\n            \n                styleUrls\n                modify-question/modify-question.component.css\n            \n\n\n\n            \n                templateUrl\n                modify-question/modify-question.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                answers\n                            \n                            \n                                    Private\n                                api\n                            \n                            \n                                condition\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                previous_answer\n                            \n                            \n                                previous_answers\n                            \n                            \n                                previous_question\n                            \n                            \n                                previous_questions\n                            \n                            \n                                question\n                            \n                            \n                                step\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                deleteAnswer\n                            \n                            \n                                fillanswerslist\n                            \n                            \n                                insertAnswer\n                            \n                            \n                                multipleQuestions\n                            \n                            \n                                questionanswers\n                            \n                            \n                                submit\n                            \n                            \n                                upgradeQuestionsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type, UserService: UserService, HttpClient: HttpClient, RequestsSurveysService: RequestsSurveysService)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/createsurvey/createsurvey.component.ts:373\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsSurveysService\n                                                  \n                                                        \n                                                                    RequestsSurveysService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:477\n                            \n                        \n\n\n                \n                    \n                            Method called when user clicks 'ok' button, just closes the dialog and submit modify\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:485\n                            \n                        \n\n\n                \n                    \n                            Delete question from database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAnswer(answer: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:467\n                            \n                        \n\n\n                \n                    \n                            Delete answer from answers list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answer\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillanswerslist\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillanswerslist(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:407\n                            \n                        \n\n\n                \n                    \n                            Create a list of answers from answer string received from database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \ninsertAnswer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:398\n                            \n                        \n\n\n                \n                    \n                            Insert answer in answers array\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multipleQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nmultipleQuestions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:449\n                            \n                        \n\n\n                \n                    \n                            Return only Multiple questions from previous_question array\n\n\n                            \n                                Returns :     QuestionsType[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionanswers\n                            \n                            \n                        \n                    \n                \n                \n                    \nquestionanswers(question: QuestionsType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:459\n                            \n                        \n\n\n                \n                    \n                            return answer list of question passed by parameter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    QuestionsType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:495\n                            \n                        \n\n\n                \n                    \n                            Submit question modification into database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upgradeQuestionsList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupgradeQuestionsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:418\n                            \n                        \n\n\n                \n                    \n                            Pull questions already submitted from database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:361\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answers:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:369\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:373\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            condition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        condition:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:364\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:377\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:375\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previous_answer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previous_answer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:367\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previous_answers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previous_answers:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:371\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previous_question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previous_question:     QuestionsType\n\n                    \n                \n                    \n                        \n                            Type :     QuestionsType\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:366\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previous_questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previous_questions:     QuestionsType[]\n\n                    \n                \n                    \n                        \n                            Type :     QuestionsType[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:370\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        question:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:360\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            step\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        step:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:363\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:362\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Open\", \"Multiple\"]\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:358\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA,\n  MatStepper\n} from \"@angular/material\";\nimport { RequestsSurveysService } from \"../requests.service\";\nimport {\n  QuestionsType,\n  SurveyCreationResponseType,\n  QuestionsResponseType,\n  SuccessResponseType\n} from \"../../interfaces\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, interval } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport swal from \"sweetalert\";\nimport { switchMap, map, share, filter } from \"rxjs/operators\";\nimport { UserService } from \"../../user.service\";\nimport * as config from \"../../config.json\";\n\n/**\n * This component shows frontend section for survey creation, and contains  a tree-times stepper(first step for general informations, second step for questions submit and third step for survey summary) that drive the creation of the survey\n */\n\n@Component({\n  selector: \"createsurvey\",\n  templateUrl: \"./createsurvey.component.html\",\n  styleUrls: [\"./createsurvey.component.css\"]\n})\nexport class CreatesurveyComponent implements OnInit {\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  name: string; //name of the survey\n  survey: any; //survey object\n\n  types: string[] = [\"Open\", \"Multiple\"]; //possible type of a single question\n\n  question: string; //NgModel for question input\n  answer: string; //NgModel for answer input\n  type: string; //NgModel for type radio\n  step: number = 1; //Current step in questions submit\n  condition: boolean = false; //NgModel for condition checkbox\n\n  previous_question: QuestionsType; //Ngmodel of previous question choosen for condition\n  previous_answer: string; //Ngmodel for answer select\n\n  answers: string[]; //list of all answers enter until now\n  questions: any; //list of all questions enter until now\n  previous_questions: QuestionsType[] = []; //questions included in the previous steps\n  previous_answers: string[]; //answers of previous question choosen for condition\n\n  timer: any;\n  ArrayStep: number[];\n\n  private api: string; //api base url\n\n  constructor(\n    public dialog: MatDialog,\n    private _formBuilder: FormBuilder,\n    private RequestsSurveysService: RequestsSurveysService, //Request service\n    private UserService: UserService, //User service\n    private HttpClient: HttpClient,\n    private router: Router //Router module\n  ) {\n    this.api = (config).api;\n    this.questions = [];\n    this.answers = [];\n    this.ArrayStep = [];\n    this.timer = interval(1000);\n  }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: [\"\", Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      question: [\"\", Validators.required],\n      answer: [\"\"],\n      type: [\"\"],\n      check: [\"\"],\n      pq: [\"\"],\n      pa: [\"\"]\n    });\n  }\n\n  /**\n   * Insert answer in answers array\n   */\n\n  insertAnswer() {\n    this.answers.push(this.answer);\n    this.answer = \"\";\n  }\n\n  /**\n   * Creates survey, create record into database and forward step\n   */\n\n  goForward(stepper: MatStepper) {\n    var url = this.api + \"surveys/surveys\";\n    //new request's data\n    var post = {\n      name: this.name\n    };\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.post(url, post, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (data.success) {\n          this.survey = data.survey;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n    stepper.next();\n  }\n\n  /**\n   * For every question contained in questions array creates record into database. At the end empties array\n   */\n\n  insertQuestion() {\n    var question = {\n      question: this.question,\n      answer: \"\",\n      answers: null,\n      type: this.type,\n      condition: \"false\",\n      previous_question: -1,\n      previous_answer: \"\"\n    };\n\n    //fill optional attributes if condition is selected\n    if (this.condition == true) {\n      question.condition = \"true\";\n      question.previous_question = this.previous_question.id;\n      question.previous_answer = this.previous_answer;\n    }\n\n    //fill answers if type is multiple\n    if (this.type == \"Multiple\") {\n      question.answer = this.answers.toString();\n      question.answers = this.answers;\n    }\n\n    this.question = \"None\";\n    this.answers = [];\n    this.previous_answer = \"\";\n    this.previous_question = null;\n\n    this.questions.push(question);\n  }\n\n  /**\n   * Call function for submit all questions and forward step of survey\n   */\n\n  forwardStep() {\n    var url = this.api + \"surveys/surveys/\" + this.survey;\n    //new request's data\n    var post = {\n      questions: JSON.stringify(this.questions)\n    };\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.post(url, post, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          console.log(data.error);\n          return;\n        }\n        this.upgradeQuestionsList(); //refresh previous_questions adding new questions\n        this.questions = []; //empties questions\n        this.ArrayStep.push(this.step);\n        this.step++; //increase step\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Move to summary of the survey(ultimate step)\n   */\n\n  goForwardEnd(stepper: MatStepper) {\n    if (this.questions && this.questions.length > 0) this.forwardStep();\n    this.timer.subscribe(x => this.upgradeQuestionsList());\n    stepper.next();\n  }\n\n  /**\n   * Create a list of answers from answer string received from database\n   */\n\n  fillanswerslist(question) {\n    if (!question.answer) {\n      return;\n    }\n    this.previous_answers = question.answer.split(\",\");\n  }\n\n  /**\n   * Pull questions already submitted from database\n   */\n\n  upgradeQuestionsList() {\n    var url = this.api + \"surveys/surveys/\" + this.survey;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        this.previous_questions = data.questions;\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Return only Multiple questions from previous_question array\n   */\n\n  multipleQuestions(): QuestionsType[] {\n    return this.previous_questions.filter(\n      question => question.type == \"Multiple\"\n    );\n  }\n\n  /**\n   * Return only questions of specified step passed by parameter\n   */\n\n  stepQuestions(step: number): QuestionsType[] {\n    return this.previous_questions.filter(question => question.step == step);\n  }\n\n  /**\n   * return answer list of question passed by parameter\n   */\n\n  questionanswers(question: QuestionsType) {\n    return question.answer.split(\",\");\n  }\n\n  /**\n   * Delete Question before insert into database\n   */\n\n  deleteBeforeInsert(question: any) {\n    var index = this.questions.indexOf(question);\n    if (index > -1) {\n      this.questions.splice(index, 1);\n    }\n  }\n\n  /**\n   * Delete answer from answers list\n   */\n\n  deleteAnswer(answer) {\n    var index = this.answers.indexOf(answer);\n    if (index > -1) {\n      this.answers.splice(index, 1);\n    }\n  }\n\n  /**\n   * Open Dialog for survey modification\n   */\n\n  openDialog(question): void {\n    let dialogRef = this.dialog.open(ModifyQuestionComponent, {\n      data: { question: question, survey: this.survey }\n    });\n  }\n\n  /**\n   * Delete survey from database(with related questions ecc...)\n   */\n\n  deleteSurvey() {\n    swal({\n      title: \"Sei sicuro?\",\n      text:\n        \"Una volta eliminato perderai tutti i progressi relativi al sondaggio\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        this.RequestsSurveysService.deleteSurvey(this.survey);\n        this.router.navigate([\"/home\"]);\n      }\n    });\n  }\n\n  /**\n   * Finalizes the creation of survey\n   */\n\n  finishCreation() {\n    swal({\n      title: \"Sei sicuro?\",\n      text: \"Assicurati di aver controllato il riepilogo\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        swal(\"Fatto!\", \"Sondaggio creato con successo!\", \"success\");\n        this.router.navigate([\"/home\"]);\n      } else {\n      }\n    });\n  }\n}\n\n/**\n * This component shows modal for survey modification, and contains a form very similar to the creation of the survey, both as a structure and as a logic\n */\n\n@Component({\n  selector: \"modify-question\",\n  templateUrl: \"modify-question/modify-question.component.html\",\n  styleUrls: [\"modify-question/modify-question.component.css\"]\n})\nexport class ModifyQuestionComponent {\n  types: string[] = [\"Open\", \"Multiple\"];\n\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition: boolean = false;\n\n  previous_question: QuestionsType;\n  previous_answer: string;\n\n  answers: string[] = [];\n  previous_questions: QuestionsType[] = [];\n  previous_answers: string[];\n\n  private api: string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA)\n    public data: { question: QuestionsType; survey: number },\n    private UserService: UserService,\n    private HttpClient: HttpClient,\n    private RequestsSurveysService: RequestsSurveysService\n  ) {\n    this.api = (config).api;\n\n    //Pull question informations and upload in modal variables\n    if (this.data.question.answer.length > 3)\n      this.answers = this.questionanswers(this.data.question);\n    this.question = this.data.question.question;\n    this.type = this.data.question.type;\n    this.step = this.data.question.step;\n    this.condition = this.data.question.condition_answer ? false : true;\n    this.upgradeQuestionsList();\n  }\n\n  /**\n   * Insert answer in answers array\n   */\n\n  insertAnswer() {\n    this.answers.push(this.answer);\n    this.answer = \"\";\n  }\n\n  /**\n   * Create a list of answers from answer string received from database\n   */\n\n  fillanswerslist(question) {\n    if (!question.answer) {\n      return;\n    }\n    this.previous_answers = question.answer.split(\",\");\n  }\n\n  /**\n   * Pull questions already submitted from database\n   */\n\n  upgradeQuestionsList() {\n    var url = this.api + \"surveys/surveys/\" + this.data.survey;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        this.previous_questions = data.questions;\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Return only Multiple questions from previous_question array\n   */\n\n  multipleQuestions(): QuestionsType[] {\n    return this.previous_questions.filter(\n      question => question.type == \"Multiple\"\n    );\n  }\n\n  /**\n   * return answer list of question passed by parameter\n   */\n\n  questionanswers(question: QuestionsType) {\n    return question.answer.split(\",\");\n  }\n\n  /**\n   * Delete answer from answers list\n   */\n\n  deleteAnswer(answer) {\n    var index = this.answers.indexOf(answer);\n    if (index > -1) {\n      this.answers.splice(index, 1);\n    }\n  }\n\n  /**\n   * Method called when user clicks 'ok' button, just closes the dialog and submit modify\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Delete question from database\n   */\n\n  delete(): void {\n    this.RequestsSurveysService.deleteQuestion(this.data.question.id);\n    this.upgradeQuestionsList();\n    this.dialogRef.close();\n  }\n\n  /**\n   * Submit question modification into database\n   */\n\n  submit(): void {\n    var post = {\n      question: this.question,\n      answer: \"\",\n      type: this.type,\n      condition: \"false\",\n      previous_question: -1,\n      previous_answer: \"\"\n    };\n\n    if (this.type == \"Multiple\") {\n      post.answer = this.answers.toString();\n    }\n\n    if (this.condition == true) {\n      post.condition = \"true\";\n      post.previous_question = this.previous_question.id;\n      post.previous_answer = this.previous_answer;\n    }\n\n    this.RequestsSurveysService.modifyQuestion(this.data.question.id, post);\n    this.upgradeQuestionsList();\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Modifica domanda\n  \n      \n        \n        \n          \n        \n      \n      \n        \n          {{type}}\n        \n      \n    \n      \n        \n          \n        \n        Aggiungi\n      \n      \n       0\">\n        \n           {{answer}}\n        \n      \n    \n       1\">\n        Domanda condizionale\n      \n      \n        \n          \n            None\n            \n              {{question.question}}\n            \n          \n        \n      \n      \n        \n          \n            None\n            \n              {{answer}}\n            \n          \n        \n      \n  \n  \n    \n  \n  \n    Modifica\n    Elimina\n    Chiudi\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Modifica domanda                                                                        {{type}}                                                          Aggiungi                   0\">                   {{answer}}                         1\">        Domanda condizionale                                          None                          {{question.question}}                                                                        None                          {{answer}}                                                    Modifica    Elimina    Chiudi  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModifyQuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModifyRequestComponent.html":{"url":"components/ModifyRequestComponent.html","title":"component - ModifyRequestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModifyRequestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modify-request\n            \n\n            \n                styleUrls\n                modify-request/modify-request.component.css\n            \n\n\n\n            \n                templateUrl\n                modify-request/modify-request.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                custom_reason\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Private\n                                end_date\n                            \n                            \n                                    Private\n                                fileList\n                            \n                            \n                                    Private\n                                reason\n                            \n                            \n                                    Private\n                                start_date\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelClick\n                            \n                            \n                                fileChange\n                            \n                            \n                                save_changes\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type, RequestsService: RequestsService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChange(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save_changes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave_changes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:167\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            custom_reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        custom_reason:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            end_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end_date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileList:     FileList\n\n                    \n                \n                    \n                        \n                            Type :     FileList\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reason:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        start_date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:101\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy } from \"@angular/core\";\nimport { RequestsService } from \"../../requests.service\";\nimport { Subscription } from \"rxjs\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA\n} from \"@angular/material\";\nimport { RequestType } from \"../../../interfaces\";\nimport * as config from \"../../../config.json\";\nimport swal from \"sweetalert\";\n\n/*\n  This component contains the list of the requests made by the logged-in user\n*/\n@Component({\n  selector: \"my-absences-list\",\n  templateUrl: \"./my-absences-list.component.html\",\n  styleUrls: [\"./my-absences-list.component.css\"]\n})\nexport class MyAbsencesListComponent implements OnDestroy {\n  private api: string; //api base url\n  private myrequests: RequestType[]; //list of the requests\n  private filter: number = -1; //parameter to filter requests by the state\n  private myrequestsSubscription: Subscription;\n\n  constructor(\n    public dialog: MatDialog,\n    private RequestsService: RequestsService\n  ) {\n    this.api = (config).api;\n\n    //subscription to requests-service's observable to get myrequests list\n    this.myrequestsSubscription = this.RequestsService.myrequests$.subscribe(\n      requests => {\n        this.myrequests = requests; //save received data\n      }\n    );\n\n    //force observable to emit data in the stream even if it has not changed from last check\n    this.RequestsService.reset_myrequests_version();\n  }\n\n  //get the number of displayed requests considering the effect of the state filter\n  displayed_requests() {\n    if (!this.myrequests) return 0;\n    if (!this.filter || this.filter == -1) return this.myrequests.length;\n    var count = 0;\n    for (var i = 0; i ,\n    @Inject(MAT_DIALOG_DATA) public data: { request: RequestType },\n    private RequestsService: RequestsService\n  ) {\n    //set form data equals to selected request data\n    this.start_date = new Date(this.data.request.start_date);\n    this.end_date = new Date(this.data.request.end_date);\n\n    if (\n      this.data.request.reason == \"ferie\" ||\n      this.data.request.reason == \"malattia\" ||\n      this.data.request.reason == \"studio\"\n    ) {\n      this.reason = this.data.request.reason;\n      this.custom_reason = null;\n    } else {\n      this.reason = \"other\";\n      this.custom_reason = this.data.request.reason;\n    }\n  }\n\n  //User discarded changes, just close the dialog\n  cancelClick(): void {\n    this.dialogRef.close();\n  }\n\n  //get changes from file input\n  fileChange(event) {\n    this.fileList = event.target.files;\n  }\n\n  //Call requests-service method to modify the request after a confirm check\n  save_changes() {\n    //if reason is not standard set it to custom reason\n    var reason = this.reason == \"other\" ? this.custom_reason : this.reason;\n\n    //use swal to show confirm box\n    swal({\n      title: \"Conferma\",\n      text: \"Salvare le modifiche apportate alla richiesta?\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        //willDelete is true if user clicked ok\n        this.RequestsService.modify_request(\n          this.data.request.id,\n          reason,\n          this.start_date,\n          this.end_date,\n          this.fileList,\n          this.dialogRef\n        );\n        return;\n      }\n    });\n  }\n\n  //validation of form data\n  validate() {\n    //end_date must be after start_date\n    if (this.end_date && !(this.end_date >= this.start_date)) return false;\n\n    //absence reason must be set\n    if (!this.reason) return false;\n    if (\n      this.reason == \"other\" &&\n      (!this.custom_reason || this.custom_reason == \"\")\n    )\n      return false;\n\n    //check if some data has been modified\n    var old_start_date = new Date(this.data.request.start_date);\n    var old_end_date = new Date(this.data.request.end_date);\n    if (this.end_date.getTime() != old_end_date.getTime()) return true;\n    if (this.start_date.getTime() != old_start_date.getTime()) return true;\n    if (\n      this.data.request.reason != \"malattia\" &&\n      this.data.request.reason != \"ferie\" &&\n      this.data.request.reason != \"studio\" &&\n      this.data.request.reason != \"other\"\n    ) {\n      if (\n        this.reason != \"other\" ||\n        this.custom_reason != this.data.request.reason\n      )\n        return true;\n    }\n    if (\n      this.reason != this.data.request.reason &&\n      (this.data.request.reason == \"malattia\" ||\n        this.data.request.reason == \"ferie\" ||\n        this.data.request.reason == \"studio\")\n    )\n      return true;\n    if (this.fileList && this.fileList.length > 0) return true;\n\n    //no data has been modified, unvalidate form\n    return false;\n  }\n}\n\n    \n\n    \n        \n  Modifica Richiesta #{{data.request.id}}\n  \n    \n        \n            \n              \n              \n              \n            \n        \n        \n            \n              \n              \n              \n            \n        \n        \n            \n                \n                    Malattia\n                    Studio\n                    Ferie\n                    Altro (specifica)\n                \n            \n        \n        \n            \n              \n            \n        \n        \n                Carica file giustificativo\n                \n        \n    \n  \n  \n    \n  \n  \n    Salva Modifiche\n    Annulla\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Modifica Richiesta #{{data.request.id}}                                                                                                                                                                                                                                  Malattia                    Studio                    Ferie                    Altro (specifica)                                                                                                                  Carica file giustificativo                                            Salva Modifiche    Annulla  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModifyRequestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyAbsencesComponent.html":{"url":"components/MyAbsencesComponent.html","title":"component - MyAbsencesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyAbsencesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/my-absences/my-absences.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows a list of the absence-request made by the logged-in user, and contains a form to submit new requests\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-absences\n            \n\n            \n                styleUrls\n                my-absences.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-absences.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Private\n                                custom_reason\n                            \n                            \n                                    Private\n                                end_date\n                            \n                            \n                                    Private\n                                fileList\n                            \n                            \n                                    Private\n                                reason\n                            \n                            \n                                    Private\n                                start_date\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChange\n                            \n                            \n                                send_request\n                            \n                            \n                                validate\n                            \n                            \n                                validate_period_len\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(HttpClient: HttpClient, RequestsService: RequestsService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/my-absences/my-absences.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChange(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Handles file selection from file input by putting selected files in the fileList object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            send_request\n                            \n                            \n                        \n                    \n                \n                \n                    \nsend_request()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Collects data from inputs and call request-service's method to submit a new absence-request\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Validation of input data, end date, if set, must be after the start date, the absence period must be less than 180 days and a reason must be set\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate_period_len\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate_period_len()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Checks absence length (in days), it can't be more then 180 days\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            custom_reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        custom_reason:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            end_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end_date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileList:     FileList\n\n                    \n                \n                    \n                        \n                            Type :     FileList\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reason:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        start_date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport * as config from \"../../config.json\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { RequestsService } from \"../requests.service\";\nimport { UserService } from \"../../user.service\";\nimport swal from \"sweetalert\";\n\n/**\n * This component shows a list of the absence-request made by the logged-in user, and contains a form to submit new requests\n */\n@Component({\n  selector: \"my-absences\",\n  templateUrl: \"./my-absences.component.html\",\n  styleUrls: [\"./my-absences.component.css\"]\n})\nexport class MyAbsencesComponent {\n  private api: string; //api base url\n  private start_date: Date = new Date(); //start_date of the request\n  private end_date: Date; //end date of the request\n  private reason: string; //reason for the absence\n  private custom_reason: string; //a non-standard reason\n  private fileList: FileList; //fileList to upload justification file for the request\n  constructor(\n    private HttpClient: HttpClient,\n    private RequestsService: RequestsService,\n    private UserService: UserService\n  ) {\n    this.api = (config).api;\n    //we need just the date, not the time\n    this.start_date.setHours(0, 0, 0, 0);\n  }\n\n  /**\n   * Handles file selection from file input by putting selected files in the fileList object\n   */\n  fileChange(event) {\n    this.fileList = event.target.files;\n  }\n\n  /**\n   * Collects data from inputs and call request-service's method to submit a new absence-request\n   */\n  send_request() {\n    //check if reason is a custom reason\n    var reason = this.reason == \"other\" ? this.custom_reason : this.reason;\n\n    //check if end_date is set, otherwise set end date = start date\n    var end_date = this.end_date ? this.end_date : this.start_date;\n\n    //call requests-service method to submit request\n    this.RequestsService.send_request(\n      reason,\n      this.start_date,\n      end_date,\n      this.fileList\n    );\n\n    //clear form\n    this.start_date = new Date();\n    this.end_date = null;\n    this.reason = null;\n    this.custom_reason = null;\n    this.fileList = null;\n  }\n\n  /**\n   * Validation of input data, end date, if set, must be after the start date, the absence period must be less than 180 days and a reason must be set\n   */\n  validate() {\n    //if set, end_date must be after the start_date\n    if (this.end_date && !(this.end_date >= this.start_date)) return false;\n\n    //the max length for request is 6 month\n    if (this.validate_period_len() == false) return false;\n\n    //required field reason\n    if (!this.reason) return false;\n\n    //if reason is not standard, a custom one must be specified\n    if (\n      this.reason == \"other\" &&\n      (!this.custom_reason || this.custom_reason == \"\")\n    )\n      return false;\n    return true;\n  }\n\n  /**\n   * Checks absence length (in days), it can't be more then 180 days\n   */\n  validate_period_len() {\n    if (!this.end_date) return true;\n    var start = new Date(this.start_date);\n    var end = new Date(this.end_date);\n    var timeDiff = Math.abs(end.getTime() - start.getTime());\n    var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\n    if (diffDays > 180) return false;\n    return true;\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Richiedi un nuovo permesso\n        \n        \n            \n                \n                    \n                      \n                      \n                      \n                    \n                \n                \n                    \n                      \n                      \n                      \n                    \n                \n                \n                    \n                        \n                            Malattia\n                            Studio\n                            Ferie\n                            Altro (specifica)\n                        \n                    \n                \n                \n                    \n                      \n                    \n                \n                \n                        Carica file giustificativo\n                        \n                \n            \n            \n                INVIA\n                \n                 NOTA: Non è possibile richiedere permessi per periodi maggiori di sei mesi (180 giorni)\n            \n            \n                 NB: Le tue richieste dovranno essere approvate dal tuo superiore ({{UserService.get_boss_name(UserService.get_user().id)}}) prima di essere confermate\n            \n        \n    \n    \n        \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Richiedi un nuovo permesso                                                                                                                                                                                                                                                                                                                                                                                                        Malattia                            Studio                            Ferie                            Altro (specifica)                                                                                                                                                                                                  Carica file giustificativo                                                                                INVIA                                 NOTA: Non è possibile richiedere permessi per periodi maggiori di sei mesi (180 giorni)                                         NB: Le tue richieste dovranno essere approvate dal tuo superiore ({{UserService.get_boss_name(UserService.get_user().id)}}) prima di essere confermate                                                            '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyAbsencesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyAbsencesListComponent.html":{"url":"components/MyAbsencesListComponent.html","title":"component - MyAbsencesListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyAbsencesListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-absences-list\n            \n\n            \n                styleUrls\n                my-absences-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-absences-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                filter\n                            \n                            \n                                    Private\n                                myrequests\n                            \n                            \n                                    Private\n                                myrequestsSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayed_requests\n                            \n                            \n                                get_number\n                            \n                            \n                                get_state_label\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, RequestsService: RequestsService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayed_requests\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayed_requests()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_number()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_state_label\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_state_label(state: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"Approvata\" | \"Rifiutata\" | \"In attesa di approvazione\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(request: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myrequests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myrequests:     RequestType[]\n\n                    \n                \n                    \n                        \n                            Type :     RequestType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myrequestsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myrequestsSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy } from \"@angular/core\";\nimport { RequestsService } from \"../../requests.service\";\nimport { Subscription } from \"rxjs\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA\n} from \"@angular/material\";\nimport { RequestType } from \"../../../interfaces\";\nimport * as config from \"../../../config.json\";\nimport swal from \"sweetalert\";\n\n/*\n  This component contains the list of the requests made by the logged-in user\n*/\n@Component({\n  selector: \"my-absences-list\",\n  templateUrl: \"./my-absences-list.component.html\",\n  styleUrls: [\"./my-absences-list.component.css\"]\n})\nexport class MyAbsencesListComponent implements OnDestroy {\n  private api: string; //api base url\n  private myrequests: RequestType[]; //list of the requests\n  private filter: number = -1; //parameter to filter requests by the state\n  private myrequestsSubscription: Subscription;\n\n  constructor(\n    public dialog: MatDialog,\n    private RequestsService: RequestsService\n  ) {\n    this.api = (config).api;\n\n    //subscription to requests-service's observable to get myrequests list\n    this.myrequestsSubscription = this.RequestsService.myrequests$.subscribe(\n      requests => {\n        this.myrequests = requests; //save received data\n      }\n    );\n\n    //force observable to emit data in the stream even if it has not changed from last check\n    this.RequestsService.reset_myrequests_version();\n  }\n\n  //get the number of displayed requests considering the effect of the state filter\n  displayed_requests() {\n    if (!this.myrequests) return 0;\n    if (!this.filter || this.filter == -1) return this.myrequests.length;\n    var count = 0;\n    for (var i = 0; i ,\n    @Inject(MAT_DIALOG_DATA) public data: { request: RequestType },\n    private RequestsService: RequestsService\n  ) {\n    //set form data equals to selected request data\n    this.start_date = new Date(this.data.request.start_date);\n    this.end_date = new Date(this.data.request.end_date);\n\n    if (\n      this.data.request.reason == \"ferie\" ||\n      this.data.request.reason == \"malattia\" ||\n      this.data.request.reason == \"studio\"\n    ) {\n      this.reason = this.data.request.reason;\n      this.custom_reason = null;\n    } else {\n      this.reason = \"other\";\n      this.custom_reason = this.data.request.reason;\n    }\n  }\n\n  //User discarded changes, just close the dialog\n  cancelClick(): void {\n    this.dialogRef.close();\n  }\n\n  //get changes from file input\n  fileChange(event) {\n    this.fileList = event.target.files;\n  }\n\n  //Call requests-service method to modify the request after a confirm check\n  save_changes() {\n    //if reason is not standard set it to custom reason\n    var reason = this.reason == \"other\" ? this.custom_reason : this.reason;\n\n    //use swal to show confirm box\n    swal({\n      title: \"Conferma\",\n      text: \"Salvare le modifiche apportate alla richiesta?\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        //willDelete is true if user clicked ok\n        this.RequestsService.modify_request(\n          this.data.request.id,\n          reason,\n          this.start_date,\n          this.end_date,\n          this.fileList,\n          this.dialogRef\n        );\n        return;\n      }\n    });\n  }\n\n  //validation of form data\n  validate() {\n    //end_date must be after start_date\n    if (this.end_date && !(this.end_date >= this.start_date)) return false;\n\n    //absence reason must be set\n    if (!this.reason) return false;\n    if (\n      this.reason == \"other\" &&\n      (!this.custom_reason || this.custom_reason == \"\")\n    )\n      return false;\n\n    //check if some data has been modified\n    var old_start_date = new Date(this.data.request.start_date);\n    var old_end_date = new Date(this.data.request.end_date);\n    if (this.end_date.getTime() != old_end_date.getTime()) return true;\n    if (this.start_date.getTime() != old_start_date.getTime()) return true;\n    if (\n      this.data.request.reason != \"malattia\" &&\n      this.data.request.reason != \"ferie\" &&\n      this.data.request.reason != \"studio\" &&\n      this.data.request.reason != \"other\"\n    ) {\n      if (\n        this.reason != \"other\" ||\n        this.custom_reason != this.data.request.reason\n      )\n        return true;\n    }\n    if (\n      this.reason != this.data.request.reason &&\n      (this.data.request.reason == \"malattia\" ||\n        this.data.request.reason == \"ferie\" ||\n        this.data.request.reason == \"studio\")\n    )\n      return true;\n    if (this.fileList && this.fileList.length > 0) return true;\n\n    //no data has been modified, unvalidate form\n    return false;\n  }\n}\n\n    \n\n    \n        \n  Le tue richieste {{get_number()}}\n  \n    \n      \n          Tutte\n          Approvate\n          In Attesa\n          Rifiutate\n      \n    \n  \n\n\n  \n    \n      \n        \n          \n            Richiesta #{{request.id}} ({{request.reason | titlecase}})\n          \n          \n            {{get_state_label(request.state)}}\n          \n        \n        \n          \n        \n        \n          \n            \n              \n                Data di inizio: {{request.start_date | date : 'EEEE, d MMMM y' | titlecase}}\n              \n              \n                Data di fine (compresa): {{request.end_date | date : 'EEEE, d MMMM y' | titlecase}}\n              \n              \n                Motivazione: {{request.reason | titlecase}}\n              \n            \n          \n          \n            \n              File giustificativo:\n              \n                \n              \n              \n                \n              \n            \n          \n        \n        \n        Elimina\n        Modifica\n      \n      \n    \n  \n\n\n    \n\n\n\n    Nessuna richiesta da mostrare...\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Le tue richieste {{get_number()}}                      Tutte          Approvate          In Attesa          Rifiutate                                                      Richiesta #{{request.id}} ({{request.reason | titlecase}})                                {{get_state_label(request.state)}}                                                                                                        Data di inizio: {{request.start_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                            Data di fine (compresa): {{request.end_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                            Motivazione: {{request.reason | titlecase}}                                                                        File giustificativo:                                                                                                                                      Elimina        Modifica                          Nessuna richiesta da mostrare...'\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyAbsencesListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MySurveyType.html":{"url":"interfaces/MySurveyType.html","title":"interface - MySurveyType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MySurveyType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id_survey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_survey\n                                    \n                                \n                                \n                                    \n                                        id_survey:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MySurveysResponseType.html":{"url":"interfaces/MySurveysResponseType.html","title":"interface - MySurveysResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MySurveysResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        surveys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surveys\n                                    \n                                \n                                \n                                    \n                                        surveys:     MySurveyType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MySurveyType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PercentualAnswerResponseType.html":{"url":"interfaces/PercentualAnswerResponseType.html","title":"interface - PercentualAnswerResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PercentualAnswerResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        percentual\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentual\n                                    \n                                \n                                \n                                    \n                                        percentual:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PercentualAnswerType.html":{"url":"interfaces/PercentualAnswerType.html","title":"interface - PercentualAnswerType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PercentualAnswerType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        answer\n                                \n                                \n                                        percentual\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answer\n                                    \n                                \n                                \n                                    \n                                        answer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentual\n                                    \n                                \n                                \n                                    \n                                        percentual:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionsResponseType.html":{"url":"interfaces/QuestionsResponseType.html","title":"interface - QuestionsResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuestionsResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        questions\n                                \n                                \n                                        step\n                                \n                                \n                                        success\n                                \n                                \n                                        survey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                    \n                                \n                                \n                                    \n                                        questions:     QuestionsType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     QuestionsType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                    \n                                \n                                \n                                    \n                                        step:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        survey\n                                    \n                                \n                                \n                                    \n                                        survey:     SurveyType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SurveyType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionsType.html":{"url":"interfaces/QuestionsType.html","title":"interface - QuestionsType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuestionsType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        answer\n                                \n                                \n                                        answer_compile\n                                \n                                \n                                        answer_of_user\n                                \n                                \n                                        condition_answer\n                                \n                                \n                                        condition_confirmed\n                                \n                                \n                                        current_user\n                                \n                                \n                                        id\n                                \n                                \n                                        id_survey\n                                \n                                \n                                        percentual_answers\n                                \n                                \n                                        question\n                                \n                                \n                                        step\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answer\n                                    \n                                \n                                \n                                    \n                                        answer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answer_compile\n                                    \n                                \n                                \n                                    \n                                        answer_compile:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answer_of_user\n                                    \n                                \n                                \n                                    \n                                        answer_of_user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condition_answer\n                                    \n                                \n                                \n                                    \n                                        condition_answer:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condition_confirmed\n                                    \n                                \n                                \n                                    \n                                        condition_confirmed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current_user\n                                    \n                                \n                                \n                                    \n                                        current_user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_survey\n                                    \n                                \n                                \n                                    \n                                        id_survey:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentual_answers\n                                    \n                                \n                                \n                                    \n                                        percentual_answers:     PercentualAnswerType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PercentualAnswerType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        question\n                                    \n                                \n                                \n                                    \n                                        question:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                    \n                                \n                                \n                                    \n                                        step:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterResponseType.html":{"url":"interfaces/RegisterResponseType.html","title":"interface - RegisterResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RequestDetailsComponent.html":{"url":"components/RequestDetailsComponent.html","title":"component - RequestDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RequestDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/absences-calendar/absences-calendar.component.ts\n\n\n    \n        Description\n    \n    \n        This is the dialog component, it contains the info of the selected request\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                request-details\n            \n\n            \n                styleUrls\n                request-details/request-details.component.css\n            \n\n\n\n            \n                templateUrl\n                request-details/request-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                get_state_label\n                            \n                            \n                                get_state_label_class\n                            \n                            \n                                get_user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:159\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:197\n                            \n                        \n\n\n                \n                    \n                            Method called when user clicks 'ok' button, just closes the dialog\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_state_label\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_state_label(state: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:179\n                            \n                        \n\n\n                \n                    \n                            Get the label to be displayed according to the request state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"Approvata\" | \"Rifiutata\" | \"In Attesa di Conferma\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_state_label_class\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_state_label_class(state: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Get the class to change the color of request indicator according to the request state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"green\" | \"red\" | \"grey\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_user_name\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_user_name()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:171\n                            \n                        \n\n\n                \n                    \n                            Get the complete name of the user thet made the request\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:159\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:162\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:161\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy } from \"@angular/core\";\nimport {\n  startOfDay,\n  endOfDay,\n  endOfMonth,\n  isSameDay,\n  isSameMonth\n} from \"date-fns\";\nimport { Subscription } from \"rxjs\";\nimport { CalendarEvent, CalendarEventAction } from \"angular-calendar\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA\n} from \"@angular/material\";\nimport { RequestsService } from \"../requests.service\";\nimport { UserService } from \"../../user.service\";\nimport { RequestType } from \"../../interfaces\";\nimport * as config from \"../../config.json\";\n\n//colors for absence indicators, it changes according to request's state\nconst colors: any = {\n  red: {\n    //refused requests\n    primary: \"#ad2121\",\n    secondary: \"#FAE3E3\"\n  },\n  grey: {\n    //pending requests\n    primary: \"#888888\",\n    secondary: \"#aaaaaa\"\n  },\n  green: {\n    //approved requests\n    primary: \"#21ad21\",\n    secondary: \"#e3fae3\"\n  }\n};\n\n/**\n * Absences calendar, for every day are displayed all the approved, refused and pending requests for absences\n *\n * NOTE: Component base code got from angular-calendar: https://mattlewis92.github.io/angular-calendar/docs/\n */\n@Component({\n  selector: \"absences-calendar\",\n  templateUrl: \"./absences-calendar.component.html\",\n  styleUrls: [\"./absences-calendar.component.css\"]\n})\nexport class AbsencesCalendarComponent implements OnDestroy {\n  private requests: RequestType[]; //list of all request made by any of the employees\n  private requestsSubscription: Subscription;\n  private events: CalendarEvent[]; //Type of event-item to be injected in the calendar\n  private viewDate: Date = new Date(); //selected date\n  private activeDayIsOpen: boolean = true; //If true the list of absences for the active day is shown\n  private state_filter: number = -1; //value of the state filter (-1 means no filter)\n\n  /**\n   * The constructor registers a new subscription to RequestsService's observable to get the list of all the absence requests in the company\n   */\n  constructor(\n    public dialog: MatDialog,\n    private RequestsService: RequestsService,\n    private UserService: UserService\n  ) {\n    //subscription to observable to get requests list from requests-service\n    this.requestsSubscription = this.RequestsService.all_requests$.subscribe(\n      data => {\n        this.requests = data;\n        this.make_event_list(); //Generate the list for the calendar for requests list\n      }\n    );\n    this.RequestsService.reset_all_requests_version(); //force observable to emit data in the stream even if it has not changed from last check\n  }\n\n  /**\n   * Handler for clicks on a day of the calendar, if opens/closes dayly-absence list for the clicked day\n   */\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false; //close event list if it was opened for the clicked day\n      } else {\n        this.activeDayIsOpen = true; //open the list\n        this.viewDate = date; //select the clicked day\n      }\n    }\n  }\n\n  /**\n   * This method gets a list of requests and maps it into an CalendarEvent List that can be used as input for the calendar\n   */\n  make_event_list() {\n    var res = [];\n    var user;\n    var color;\n    for (var i = 0; i ,\n    @Inject(MAT_DIALOG_DATA) public data: { request: RequestType },\n    private UserService: UserService\n  ) {\n    this.api = (config).api;\n  }\n\n  /**\n   * Get the complete name of the user thet made the request\n   */\n  get_user_name() {\n    var user = this.UserService.get_user_by_id(this.data.request.id_user);\n    return user.surname + \" \" + user.name;\n  }\n\n  /**\n   * Get the label to be displayed according to the request state\n   */\n  get_state_label(state) {\n    if (state == 1) return \"Approvata\";\n    if (state == 2) return \"Rifiutata\";\n    return \"In Attesa di Conferma\";\n  }\n\n  /**\n   * Get the class to change the color of request indicator according to the request state\n   */\n  get_state_label_class(state) {\n    if (state == 1) return \"green\";\n    if (state == 2) return \"red\";\n    return \"grey\";\n  }\n\n  /**\n   * Method called when user clicks 'ok' button, just closes the dialog\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Richiesta #{{data.request.id}} ({{get_user_name()}})\n  \n    \n      \n        \n          \n            Data di inizio: {{data.request.start_date | date : 'EEEE, d MMMM y' | titlecase}}\n          \n          \n            Data di fine (compresa): {{data.request.end_date | date : 'EEEE, d MMMM y' | titlecase}}\n          \n          \n            Motivazione: {{data.request.reason | titlecase}}\n          \n          \n            Stato: {{get_state_label(data.request.state)}}\n          \n          \n            File giustificativo:\n            \n              \n            \n            \n              \n            \n            Non disponibile\n          \n        \n\n      \n    \n  \n  \n    \n  \n  \n    Ok\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Richiesta #{{data.request.id}} ({{get_user_name()}})                                          Data di inizio: {{data.request.start_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                Data di fine (compresa): {{data.request.end_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                Motivazione: {{data.request.reason | titlecase}}                                Stato: {{get_state_label(data.request.state)}}                                File giustificativo:                                                                                        Non disponibile                                            Ok  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RequestDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestType.html":{"url":"interfaces/RequestType.html","title":"interface - RequestType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        end_date\n                                \n                                \n                                        id\n                                \n                                \n                                        id_user\n                                \n                                \n                                        justification_file\n                                \n                                \n                                        reason\n                                \n                                \n                                        start_date\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end_date\n                                    \n                                \n                                \n                                    \n                                        end_date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        justification_file\n                                    \n                                \n                                \n                                    \n                                        justification_file:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reason\n                                    \n                                \n                                \n                                    \n                                        reason:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_date\n                                    \n                                \n                                \n                                    \n                                        start_date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestsResponseType.html":{"url":"interfaces/RequestsResponseType.html","title":"interface - RequestsResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestsResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        requests\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requests\n                                    \n                                \n                                \n                                    \n                                        requests:     RequestType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestsSurveysService.html":{"url":"injectables/RequestsSurveysService.html","title":"injectable - RequestsSurveysService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RequestsSurveysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/surveys-section/requests.service.ts\n        \n\n            \n                Description\n            \n            \n                This service can be used for all the survey-related funtionality. It's methods sends propr requests to backend to get and update values in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                all_surveys_version\n                            \n                            \n                                    Public\n                                all_surveys$\n                            \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Private\n                                my_surveys_version\n                            \n                            \n                                    Public\n                                my_surveys$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteQuestion\n                            \n                            \n                                deleteSurvey\n                            \n                            \n                                modifyQuestion\n                            \n                            \n                                reset_all_surveys_version\n                            \n                            \n                                reset_my_surveys_version\n                            \n                            \n                                sendQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(HttpClient: HttpClient, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/requests.service.ts:29\n                            \n                        \n\n                \n                    \n                            The constructor creates 2 observables to get the lists of all surveys and the list of surveys submitted by user\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteQuestion(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            Delete a specific question from database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSurvey\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSurvey(survey: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:120\n                            \n                        \n\n\n                \n                    \n                            Deletes a survey from database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifyQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifyQuestion(question: , parameters: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Send request for modify a specific question\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parameters\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset_all_surveys_version\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset_all_surveys_version()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:229\n                            \n                        \n\n\n                \n                    \n                            This method is called when a new subscription to all_surveys observable is registered, it forces to send the value even this has not changed by setting version code to '', so new subscribers can get the value\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset_my_surveys_version\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset_my_surveys_version()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:237\n                            \n                        \n\n\n                \n                    \n                            This method is called when a new subscription to my_surveys observable is registered, it forces to send the value even this has not changed by setting version code to '', so new subscribers can get the value\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendQuestions(survey: string, questions: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            Insert questions of specific survey into database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        questions\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            all_surveys_version\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        all_surveys_version:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            all_surveys$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        all_surveys$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            my_surveys_version\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        my_surveys_version:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            my_surveys$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        my_surveys$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Component, Injectable, Inject } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, interval } from \"rxjs\";\nimport { switchMap, map, share, filter } from \"rxjs/operators\";\nimport {\n  SurveyCreationResponseType,\n  MySurveyType,\n  MySurveysResponseType,\n  QuestionsResponseType,\n  QuestionsType,\n  SuccessResponseType,\n  SurveyType,\n  SurveysResponseType,\n  VersionResponseType\n} from \"../interfaces\";\nimport * as config from \"../config.json\";\nimport swal from \"sweetalert\";\nimport { UserService } from \"../user.service\";\n\n/**\n * This service can be used for all the survey-related funtionality. It's methods sends propr requests to backend to get and update values in the database\n */\n@Injectable()\nexport class RequestsSurveysService {\n  private api: string; //api base url\n  public all_surveys$: Observable;\n  private all_surveys_version = \"\"; //version code for all_surveys list\n  public my_surveys$: Observable;\n  private my_surveys_version = \"\"; //version code for my_surveys list\n  /**\n   * The constructor creates 2 observables to get the lists of all surveys and the list of surveys submitted by user\n   */\n  constructor(\n    private HttpClient: HttpClient,\n    private UserService: UserService\n  ) {\n    this.api = (config).api;\n\n    //Observable to get the list of all surveys\n    this.all_surveys$ = interval(2000).pipe(\n      switchMap(() =>\n        this.HttpClient.get(\n          this.api + \"surveys/allsurveys/true\",\n          {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            ) //set authentication header with thoken got from UserService\n          }\n        )\n      ), //this request gets version code\n      filter((data: VersionResponseType) => {\n        if (data.version === this.all_surveys_version) {\n          return false; //stop stream for this iteration, value has not changed from last check\n        }\n        //data has changed, refresh version code\n        this.all_surveys_version = data.version;\n        return true;\n      }),\n      switchMap(() =>\n        this.HttpClient.get(\n          this.api + \"surveys/allsurveys/false\",\n          {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            )\n          }\n        )\n      ),\n      map(data => {\n        return data.surveys;\n      }), //save new value\n      share()\n    );\n\n    //Observable to get the list of surveys submitted by user\n    this.my_surveys$ = interval(2000).pipe(\n      switchMap(() =>\n        this.HttpClient.get(\n          this.api + \"surveys/allsurveyssubmitted/true\",\n          {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            ) //set authentication header with thoken got from UserService\n          }\n        )\n      ), //this request gets version code\n      filter((data: VersionResponseType) => {\n        if (data.version === this.my_surveys_version) {\n          return false; //stop stream for this iteration, value has not changed from last check\n        }\n        //data has changed, refresh version code\n        this.my_surveys_version = data.version;\n        return true;\n      }),\n      switchMap(() =>\n        this.HttpClient.get(\n          this.api + \"surveys/allsurveyssubmitted/false\",\n          {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            )\n          }\n        )\n      ),\n      map(data => {\n        return data.surveys;\n      }), //save new value\n      share()\n    );\n  }\n\n  /**\n   * Deletes a survey from database\n   */\n\n  deleteSurvey(survey: number) {\n    var url = this.api + \"surveys/surveys/\" + survey;\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.delete(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          console.log(data.error);\n          return;\n        }\n        swal(\"Fatto!\", \"Sondaggio eliminato!\", \"success\");\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Insert questions of specific survey into database\n   */\n\n  sendQuestions(survey: string, questions: any) {\n    var url = this.api + \"surveys/surveys/\" + survey;\n    //new request's data\n    var post = {\n      questions: JSON.stringify(questions)\n    };\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.post(url, post, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          console.log(data.error);\n          return;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Send request for modify a specific question\n   */\n\n  modifyQuestion(question, parameters) {\n    var url = this.api + \"surveys//questions/\" + question;\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.put(url, parameters, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          console.log(data.error);\n          return;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Delete a specific question from database\n   */\n\n  deleteQuestion(question) {\n    var url = this.api + \"surveys//questions/\" + question;\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.delete(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          console.log(data.error);\n          return;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * This method is called when a new subscription to all_surveys observable is registered, it forces to send the value even this has not changed by setting version code to '', so new subscribers can get the value\n   */\n\n  reset_all_surveys_version() {\n    this.all_surveys_version = \"\";\n  }\n\n  /**\n   * This method is called when a new subscription to my_surveys observable is registered, it forces to send the value even this has not changed by setting version code to '', so new subscribers can get the value\n   */\n\n  reset_my_surveys_version() {\n    this.my_surveys_version = \"\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarBodyComponent.html":{"url":"components/SidebarBodyComponent.html","title":"component - SidebarBodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarBodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/sidebar/sidebar-body/sidebar-body.component.ts\n\n\n    \n        Description\n    \n    \n        The whole sidebar-menu component, it contains components of type SidebarMenuItem and MiniSidebarItem and inject data in them\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidebar-body\n            \n\n            \n                styleUrls\n                sidebar-body.component.css\n            \n\n\n\n            \n                templateUrl\n                sidebar-body.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                    Private\n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emit_toggle\n                            \n                            \n                                emit_toggle_if_mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side_extended\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(UserService: UserService, Router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:113\n                            \n                        \n\n                \n                    \n                            The constructor builds the list of data object to be injected in menu-item components and subscribes to ano observable to refresh displayed datetime every second\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        Router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side_extended\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:111\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:113\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit_toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit_toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:165\n                            \n                        \n\n\n                \n                    \n                            Emits output to the outer component in oorder to change sidebar status\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit_toggle_if_mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit_toggle_if_mobile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:172\n                            \n                        \n\n\n                \n                    \n                            Emits output to the outer component in order to change sidebar status (just for mobile devices)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     MenuItem[]\n\n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            today\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        today:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : Date.now()\n                        \n                    \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:110\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Output\n} from \"@angular/core\";\nimport { UserService } from \"../../user.service\";\nimport { Router } from \"@angular/router/\";\nimport { interval } from \"rxjs\";\nimport { MenuItem } from \"../../interfaces\";\n\n/**\n * This component is an Element of restricted sidebar menu (desktop-only)\n */\n@Component({\n  selector: \"mini-sidebar-item\",\n  templateUrl: \"mini-sidebar-item.component.html\",\n  styleUrls: [\"./mini-sidebar-item.component.css\"]\n})\nexport class MiniSidebarItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is shown\n\n  constructor(private _elementRef: ElementRef, private Router: Router) {}\n\n  /**\n   * The Listener is used to handle every click on the window, and if the element clicked is not this menu-item the sub-menu is closed\n   */\n  @HostListener(\"document:click\", [\"$event.target\"])\n  public onClick(targetElement) {\n    const clickedInside = this._elementRef.nativeElement.contains(\n      targetElement\n    ); //check if element is clicked\n    if (!clickedInside) {\n      this.active = false; //close sub-menu if click is external to this component\n    }\n  }\n\n  /**\n   * Get tha class of the icon to be shown for this menu entry\n   */\n  get_icon() {\n    if (this.item.name == \"Sezione Assenze\") return \"fas fa-calendar-times\";\n    if (this.item.name == \"Sezione Aule\") return \"fas fa-chalkboard-teacher\";\n    return \"fas fa-question\";\n  }\n\n  /**\n   * Checks if current route is in the section related to this item, so it can be displayed as active\n   */\n  get_section_active() {\n    var parts = this.Router.url.split(\"/\");\n    if (parts[1] == \"absences\" && this.item.short_name == \"Assenze\")\n      return true;\n    if (parts[1] == \"surveys\" && this.item.short_name == \"Sondaggi\")\n      return true;\n    if (parts[1] == \"rooms\" && this.item.short_name == \"Aule\") return true;\n    return false;\n  }\n}\n\n/**\n * This component is an Element of expanded-sidebar menu\n */\n@Component({\n  selector: \"sidebar-menu-item\",\n  templateUrl: \"sidebar-menu-item.component.html\",\n  styleUrls: [\"./sidebar-menu-item.component.css\"]\n})\nexport class SidebarMenuItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is visible\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor(private Router: Router) {}\n\n  /**\n   * Method called when a submenu item is clicked, it hides sidebar in mobile devices\n   */\n  collapse_if_mobile() {\n    if (window.screen.width  {\n      this.today = Date.now(); //refresh datetime every second\n    });\n\n    //Build the list of data object to be injected in menu-item components\n    var obj = {\n      //first item, absences section\n      name: \"Sezione Assenze\",\n      short_name: \"Assenze\",\n      sub_menu: [\n        [\"Calendario\", \"absences/calendar\"],\n        [\"Le tue Richieste\", \"/absences/myabsences\"],\n        [\"Richieste (amministratore)\", \"/absences/employees\"]\n      ]\n    };\n    this.items.push(obj);\n\n    /*obj = {\n      //second item, rooms section\n      name: \"Sezione Aule\",\n      short_name: \"Aule\",\n      sub_menu: [\n        [\"Aule (amministratore)\", \"\"],\n        [\"Le tue prenotazioni\", \"\"],\n        [\"Prenota Aula\", \"\"],\n        [\"Tutte le Aule\", \"\"]\n      ]\n    };\n    this.items.push(obj);*/\n\n    obj = {\n      //third item, surveys section\n      name: \"Sezione Sondaggi\",\n      short_name: \"Sondaggi\",\n      sub_menu: [\n        [\"Crea Sondaggio\", \"surveys/createsurvey\"],\n        [\"Sondaggi (amministratore)\", \"surveys/admin\"],\n        [\"Tutti i Sondaggi\", \"surveys/allsurveys\"]\n      ]\n    };\n    this.items.push(obj);\n  }\n\n  /**\n   * Emits output to the outer component in oorder to change sidebar status\n   */\n  emit_toggle() {\n    this.toggle.emit();\n  }\n\n  /**\n   * Emits output to the outer component in order to change sidebar status (just for mobile devices)\n   */\n  emit_toggle_if_mobile() {\n    if (window.screen.width \n    \n\n    \n        \n  \n    {{today | date:'EEEE,' | titlecase}}\n    \n    {{today | date:'d MMMM y' | titlecase}}\n  \n  \n  \n    {{today | date:'H:mm:ss'}}\n  \n\n\n  \n\n\n  \n    \n       Home\n    \n  \n  \n    \n       Gestione Utenti\n    \n  \n  \n  \n    \n       Logout\n    \n  \n\n\n  \n    \n      \n    \n    \n    Home\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{today | date:\\'EEEE,\\' | titlecase}}        {{today | date:\\'d MMMM y\\' | titlecase}}          {{today | date:\\'H:mm:ss\\'}}                 Home                   Gestione Utenti                     Logout                              Home    '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarBodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle_sidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side_expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in app/sidebar/sidebar.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side_expanded\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_sidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_sidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar.component.ts:16\n                            \n                        \n\n\n                \n                    \n                            Emits an output to outer component in ordrd to change sidebar status\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  @Input() side_expanded:boolean; //Input from appcomponent to get sidebar status (collapsed/expanded)\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor() { }\n\n  /**\n   * Emits an output to outer component in ordrd to change sidebar status\n   */\n  toggle_sidebar(){\n    this.toggle.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarMenuItem.html":{"url":"components/SidebarMenuItem.html","title":"component - SidebarMenuItem","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarMenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/sidebar/sidebar-body/sidebar-body.component.ts\n\n\n    \n        Description\n    \n    \n        This component is an Element of expanded-sidebar menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidebar-menu-item\n            \n\n            \n                styleUrls\n                sidebar-menu-item.component.css\n            \n\n\n\n            \n                templateUrl\n                sidebar-menu-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collapse_if_mobile\n                            \n                            \n                                get_section_active\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(Router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type:    MenuItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:73\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:75\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapse_if_mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \ncollapse_if_mobile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Method called when a submenu item is clicked, it hides sidebar in mobile devices\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_section_active\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_section_active()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Checks if current route is in the section related to this item, so it can be displayed as active\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Output\n} from \"@angular/core\";\nimport { UserService } from \"../../user.service\";\nimport { Router } from \"@angular/router/\";\nimport { interval } from \"rxjs\";\nimport { MenuItem } from \"../../interfaces\";\n\n/**\n * This component is an Element of restricted sidebar menu (desktop-only)\n */\n@Component({\n  selector: \"mini-sidebar-item\",\n  templateUrl: \"mini-sidebar-item.component.html\",\n  styleUrls: [\"./mini-sidebar-item.component.css\"]\n})\nexport class MiniSidebarItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is shown\n\n  constructor(private _elementRef: ElementRef, private Router: Router) {}\n\n  /**\n   * The Listener is used to handle every click on the window, and if the element clicked is not this menu-item the sub-menu is closed\n   */\n  @HostListener(\"document:click\", [\"$event.target\"])\n  public onClick(targetElement) {\n    const clickedInside = this._elementRef.nativeElement.contains(\n      targetElement\n    ); //check if element is clicked\n    if (!clickedInside) {\n      this.active = false; //close sub-menu if click is external to this component\n    }\n  }\n\n  /**\n   * Get tha class of the icon to be shown for this menu entry\n   */\n  get_icon() {\n    if (this.item.name == \"Sezione Assenze\") return \"fas fa-calendar-times\";\n    if (this.item.name == \"Sezione Aule\") return \"fas fa-chalkboard-teacher\";\n    return \"fas fa-question\";\n  }\n\n  /**\n   * Checks if current route is in the section related to this item, so it can be displayed as active\n   */\n  get_section_active() {\n    var parts = this.Router.url.split(\"/\");\n    if (parts[1] == \"absences\" && this.item.short_name == \"Assenze\")\n      return true;\n    if (parts[1] == \"surveys\" && this.item.short_name == \"Sondaggi\")\n      return true;\n    if (parts[1] == \"rooms\" && this.item.short_name == \"Aule\") return true;\n    return false;\n  }\n}\n\n/**\n * This component is an Element of expanded-sidebar menu\n */\n@Component({\n  selector: \"sidebar-menu-item\",\n  templateUrl: \"sidebar-menu-item.component.html\",\n  styleUrls: [\"./sidebar-menu-item.component.css\"]\n})\nexport class SidebarMenuItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is visible\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor(private Router: Router) {}\n\n  /**\n   * Method called when a submenu item is clicked, it hides sidebar in mobile devices\n   */\n  collapse_if_mobile() {\n    if (window.screen.width  {\n      this.today = Date.now(); //refresh datetime every second\n    });\n\n    //Build the list of data object to be injected in menu-item components\n    var obj = {\n      //first item, absences section\n      name: \"Sezione Assenze\",\n      short_name: \"Assenze\",\n      sub_menu: [\n        [\"Calendario\", \"absences/calendar\"],\n        [\"Le tue Richieste\", \"/absences/myabsences\"],\n        [\"Richieste (amministratore)\", \"/absences/employees\"]\n      ]\n    };\n    this.items.push(obj);\n\n    /*obj = {\n      //second item, rooms section\n      name: \"Sezione Aule\",\n      short_name: \"Aule\",\n      sub_menu: [\n        [\"Aule (amministratore)\", \"\"],\n        [\"Le tue prenotazioni\", \"\"],\n        [\"Prenota Aula\", \"\"],\n        [\"Tutte le Aule\", \"\"]\n      ]\n    };\n    this.items.push(obj);*/\n\n    obj = {\n      //third item, surveys section\n      name: \"Sezione Sondaggi\",\n      short_name: \"Sondaggi\",\n      sub_menu: [\n        [\"Crea Sondaggio\", \"surveys/createsurvey\"],\n        [\"Sondaggi (amministratore)\", \"surveys/admin\"],\n        [\"Tutti i Sondaggi\", \"surveys/allsurveys\"]\n      ]\n    };\n    this.items.push(obj);\n  }\n\n  /**\n   * Emits output to the outer component in oorder to change sidebar status\n   */\n  emit_toggle() {\n    this.toggle.emit();\n  }\n\n  /**\n   * Emits output to the outer component in order to change sidebar status (just for mobile devices)\n   */\n  emit_toggle_if_mobile() {\n    if (window.screen.width \n    \n\n    \n        \n  \n    \n    {{item.name}}\n  \n\n\n  \n    \n      {{item[0]}}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{item.name}}              {{item[0]}}      '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarMenuItem'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SuccessResponseType.html":{"url":"interfaces/SuccessResponseType.html","title":"interface - SuccessResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SuccessResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SupervisionType.html":{"url":"interfaces/SupervisionType.html","title":"interface - SupervisionType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SupervisionType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id_boss\n                                \n                                \n                                        id_user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_boss\n                                    \n                                \n                                \n                                    \n                                        id_boss:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SupervisionsResponseType.html":{"url":"interfaces/SupervisionsResponseType.html","title":"interface - SupervisionsResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SupervisionsResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        supervisions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supervisions\n                                    \n                                \n                                \n                                    \n                                        supervisions:     SupervisionType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SupervisionType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyAdminResponseType.html":{"url":"interfaces/SurveyAdminResponseType.html","title":"interface - SurveyAdminResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveyAdminResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        surveys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surveys\n                                    \n                                \n                                \n                                    \n                                        surveys:     SurveyAdminType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SurveyAdminType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyAdminType.html":{"url":"interfaces/SurveyAdminType.html","title":"interface - SurveyAdminType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveyAdminType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ArrayStep\n                                \n                                \n                                        id\n                                \n                                \n                                        id_user\n                                \n                                \n                                        name\n                                \n                                \n                                        questions\n                                \n                                \n                                        step\n                                \n                                \n                                        users\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ArrayStep\n                                    \n                                \n                                \n                                    \n                                        ArrayStep:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                    \n                                \n                                \n                                    \n                                        questions:     QuestionsType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     QuestionsType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                    \n                                \n                                \n                                    \n                                        step:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     UserType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyCreationResponseType.html":{"url":"interfaces/SurveyCreationResponseType.html","title":"interface - SurveyCreationResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveyCreationResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        survey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        survey\n                                    \n                                \n                                \n                                    \n                                        survey:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyType.html":{"url":"interfaces/SurveyType.html","title":"interface - SurveyType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveyType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        id_user\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveysResponseType.html":{"url":"interfaces/SurveysResponseType.html","title":"interface - SurveysResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveysResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        surveys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surveys\n                                    \n                                \n                                \n                                    \n                                        surveys:     SurveyType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SurveyType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableUserType.html":{"url":"interfaces/TableUserType.html","title":"interface - TableUserType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableUserType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        position\n                                \n                                \n                                        surname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserResponseType.html":{"url":"interfaces/UserResponseType.html","title":"interface - UserResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/user.service.ts\n        \n\n            \n                Description\n            \n            \n                This service can be used for the user-related funtionality like login, logout, token and user info management.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Private\n                                logged_in\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Private\n                                supervisions\n                            \n                            \n                                    Private\n                                supervisions_version\n                            \n                            \n                                    Public\n                                supervisions$\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Private\n                                users\n                            \n                            \n                                    Private\n                                users_version\n                            \n                            \n                                    Public\n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add_user\n                            \n                            \n                                get_boss_name\n                            \n                            \n                                get_login_status\n                            \n                            \n                                get_name\n                            \n                            \n                                get_token\n                            \n                            \n                                get_user\n                            \n                            \n                                get_user_by_id\n                            \n                            \n                                get_users\n                            \n                            \n                                load_cookies\n                            \n                            \n                                logout\n                            \n                            \n                                reset_version\n                            \n                            \n                                save_cookies\n                            \n                            \n                                set_boss\n                            \n                            \n                                try_login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(BlockScrollService: BlockScrollService, cookieService: CookieService, httpClient: HttpClient, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in app/user.service.ts:37\n                            \n                        \n\n                \n                    \n                            The constructor creates 2 observables to get the lists of users and supervisions from backend\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        BlockScrollService\n                                                  \n                                                        \n                                                                    BlockScrollService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add_user\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd_user(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:106\n                            \n                        \n\n\n                \n                    \n                            This function is called when user compiles the form for add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_boss_name\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_boss_name(id_employee: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:148\n                            \n                        \n\n\n                \n                    \n                            This function is used by users management component to show boss complete name (name + surname) for each user (if it's set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id_employee\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_login_status\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_login_status()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_name\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_name()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:173\n                            \n                        \n\n\n                \n                    \n                            Get complete name (name + surname) of the user\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_token\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_token()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            If set, return the authentication token\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_user\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_user()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:184\n                            \n                        \n\n\n                \n                    \n                            Get info of the user\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_user_by_id\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_user_by_id(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:191\n                            \n                        \n\n\n                \n                    \n                            Return info of the user selected by his id, if not found returns info of the logged-in user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_users\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_users()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            Get users list holded by user-service instance\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load_cookies\n                            \n                            \n                        \n                    \n                \n                \n                    \nload_cookies()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:220\n                            \n                        \n\n\n                \n                    \n                            This method checks if cookies are set, if they are load them\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:237\n                            \n                        \n\n\n                \n                    \n                            This Method uses swal to show a confirm modal, and if the user click 'ok' clears login data and cookies\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset_version\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset_version()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:258\n                            \n                        \n\n\n                \n                    \n                            This method is called when a new subscription to users$ observable is registered, it forces to send the value even this has not changed, so new subscribers can get the value\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save_cookies\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave_cookies()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:265\n                            \n                        \n\n\n                \n                    \n                            Saves Login data in cookies\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_boss\n                            \n                            \n                        \n                    \n                \n                \n                    \nset_boss(id_user: , id_boss: , bottomsheetref: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:274\n                            \n                        \n\n\n                \n                    \n                            Sends a request to backend to add/update supervision entry for specified employee/boss couple\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id_user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id_boss\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bottomsheetref\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            try_login\n                            \n                            \n                        \n                    \n                \n                \n                    \ntry_login(email: , password: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:318\n                            \n                        \n\n\n                \n                    \n                            Sends authentication request to backend, providing credentials got through the login form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logged_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logged_in:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            supervisions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        supervisions:     SupervisionType[]\n\n                    \n                \n                    \n                        \n                            Type :     SupervisionType[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            supervisions_version\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        supervisions_version:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supervisions$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        supervisions$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     UserType\n\n                    \n                \n                    \n                        \n                            Type :     UserType\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     UserType[]\n\n                    \n                \n                    \n                        \n                            Type :     UserType[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users_version\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users_version:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BlockScrollService } from \"./block-scroll.service\";\nimport {\n  BossResponseType,\n  LogResponseType,\n  RegisterResponseType,\n  SuccessResponseType,\n  SupervisionsResponseType,\n  SupervisionType,\n  UserResponseType,\n  UsersResponseType,\n  UserType,\n  VersionResponseType\n} from \"./interfaces\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { filter, map, share, switchMap } from \"rxjs/operators\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { interval, Observable } from \"rxjs\";\nimport { MatSnackBar, MatSnackBarConfig } from \"@angular/material\";\nimport swal from \"sweetalert\";\nimport * as config from \"./config.json\";\n\n/**\n *This service can be used for the user-related funtionality like login, logout, token and user info management.\n */\n@Injectable()\nexport class UserService {\n  private api: string; //api base url\n  private logged_in: boolean = false;\n  public user: UserType; //Info of the user ( null if not logged in)\n  public token: string; //Authentication Token of the user (null if not logged in)\n  public users$: Observable; //observable to get user list\n  public supervisions$: Observable; //observable for supervisions list\n  private users_version = \"\"; //version code for user list\n  private supervisions_version = \"\"; //version code for supervision list\n  private supervisions: SupervisionType[] = []; //list of supervisions couples (id_user, id_boss)\n  private users: UserType[] = []; //list of users\n\n  /**\n   * The constructor creates 2 observables to get the lists of users and supervisions from backend\n   */\n  constructor(\n    private BlockScrollService: BlockScrollService,\n    private cookieService: CookieService,\n    private httpClient: HttpClient,\n    public snackBar: MatSnackBar\n  ) {\n    this.api = (config).api;\n    this.load_cookies();\n    //NOTE: components that use some observable must implement ngOnDestroy and call unsubscribe() on subscription object\n    //Observable to get Users List\n    this.users$ = interval(1000).pipe(\n      switchMap(() =>\n        this.httpClient.get(this.api + \"users/true\")\n      ), //this request gets version code\n      filter((data: VersionResponseType) => {\n        if (data.version === this.users_version) {\n          return false; //stop stream for this iteration, value has not changed from last check\n        }\n        this.users_version = data.version;\n        return true;\n      }),\n      switchMap(() =>\n        this.httpClient.get(this.api + \"users/false\")\n      ),\n      map(data => {\n        return data.users;\n      }), //save new value (get just users field from response)\n      share()\n    );\n    //Observable to get Supervisions List\n    this.supervisions$ = interval(1000).pipe(\n      switchMap(() =>\n        this.httpClient.get(this.api + \"supervisions/true\")\n      ), //this request gets version code\n      filter((data: VersionResponseType) => {\n        if (data.version === this.supervisions_version) {\n          return false; //stop stream for this iteration, value has not changed from last check\n        }\n        this.supervisions_version = data.version;\n        return true;\n      }),\n      switchMap(() =>\n        this.httpClient.get(\n          this.api + \"supervisions/false\"\n        )\n      ),\n      map(data => {\n        return data.supervisions;\n      }), //save new value (get just supervisions field from response)\n      share()\n    );\n    //subscribe to this observable to refresh user list every second\n    this.users$.subscribe(users => {\n      this.users = users;\n    });\n    //subscribe to this observable to refresh supervisions list every second\n    this.supervisions$.subscribe(supervisions => {\n      this.supervisions = supervisions;\n    });\n  }\n\n  /**\n   * This function is called when user compiles the form for add a new user\n   */\n  add_user(user) {\n    this.httpClient\n      .post(this.api + \"users\", user)\n      .subscribe(\n        data => {\n          if (data.success) {\n            //insertion succesfully\n            swal(\n              \"Inserimento Riuscito!\",\n              \"Utente salvato correttamente!\",\n              \"success\"\n            );\n          } else {\n            //insertion failed, error message shown in snackBar\n            let config = new MatSnackBarConfig();\n            config.duration = 2000;\n            if (data.error) {\n              console.log(data.error);\n            }\n            this.snackBar.open(\n              \"Inserimento non riuscito! Errore inaspettato nel server...\",\n              \"OK\",\n              config\n            );\n          }\n        },\n        err => {\n          let config = new MatSnackBarConfig();\n          config.duration = 2000;\n          this.snackBar.open(\n            \"Inserimento non riuscito! Errore inaspettato nel server...\",\n            \"OK\",\n            config\n          );\n          console.log(err);\n        }\n      );\n  }\n\n  /**\n   *This function is used by users management component to show boss complete name (name + surname) for each user (if it's set)\n   */\n  get_boss_name(id_employee) {\n    //search for user in supervisions list\n    for (var i = 0; i  {\n      if (willDelete) {\n        //willDelete is true if user clicked 'ok'\n        this.token = null;\n        this.user = null;\n        this.logged_in = false;\n        this.cookieService.deleteAll(); //clear login data and cookies\n      }\n    });\n  }\n\n  /**\n   * This method is called when a new subscription to users$ observable is registered, it forces to send the value even this has not changed, so new subscribers can get the value\n   */\n  reset_version() {\n    this.users_version = \"\"; //setting version code in this way the value will be sent in observable flow in next check for changes\n  }\n\n  /**\n   * Saves Login data in cookies\n   */\n  save_cookies() {\n    this.cookieService.set(\"logged_in\", \"true\");\n    this.cookieService.set(\"token\", this.token);\n    this.cookieService.set(\"user\", JSON.stringify(this.user));\n  }\n\n  /**\n   * Sends a request to backend to add/update supervision entry for specified employee/boss couple\n   */\n  set_boss(id_user, id_boss, bottomsheetref) {\n    var post = { user: id_user, boss: id_boss };\n    this.httpClient\n      .post(this.api + \"users/set_boss/\", post)\n      .subscribe(\n        data => {\n          if (data.success) {\n            //login succesfully\n            swal(\n              \"Nomina Riuscita!\",\n              \"Supervisione salvata correttamente!\",\n              \"success\"\n            );\n          } else {\n            //login failed\n            let config = new MatSnackBarConfig();\n            config.duration = 2000;\n            if (data.error) {\n              console.log(data.error);\n            }\n            this.snackBar.open(\n              \"Inserimento non riuscito! Errore inaspettato del server...\",\n              \"OK\",\n              config\n            );\n          }\n        },\n        err => {\n          let config = new MatSnackBarConfig();\n          config.duration = 2000;\n          this.snackBar.open(\n            \"Inserimento non riuscito! Errore inaspettato del server...\",\n            \"OK\",\n            config\n          );\n          console.log(err);\n        }\n      );\n    bottomsheetref.dismiss(); //close bottom sheet (boss choosing list) after sending the request\n  }\n\n  /**\n   * Sends authentication request to backend, providing credentials got through the login form\n   */\n  try_login(email, password) {\n    this.httpClient\n      .get(this.api + \"authenticate\", {\n        headers: new HttpHeaders().set(\n          \"Authorization\",\n          \"Basic \" + btoa(email + \":\" + password)\n        ) //basic authentication, base-64 encoded string :\n      })\n      .subscribe(\n        data => {\n          if (data.success) {\n            //login succesfully\n            this.token = data.token;\n            this.user = data.user;\n            this.logged_in = true;\n            this.save_cookies();\n            this.BlockScrollService.enable(); //scroll is disabled while login modal is shown, after login we can enable it\n          } else {\n            //login failed\n            let config = new MatSnackBarConfig();\n            config.duration = 2000;\n            this.snackBar.open(\n              \"Login non riuscito! Credenziali non valide...\",\n              \"OK\",\n              config\n            );\n          }\n        },\n        err => {\n          //login failed\n          let config = new MatSnackBarConfig();\n          config.duration = 2000;\n          this.snackBar.open(\n            \"Login non riuscito! Credenziali non valide...\",\n            \"OK\",\n            config\n          );\n          console.log(JSON.stringify(err));\n        }\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserTableComponent.html":{"url":"components/UserTableComponent.html","title":"component - UserTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/manage-users/user-table/user-table.component.ts\n\n\n    \n        Description\n    \n    \n        This component contains the table showing a complete list of users (name,surname,email, boss)\nNOTE: table base code got from Angula Material\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-table\n            \n\n            \n                styleUrls\n                user-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataSource\n                            \n                            \n                                    Private\n                                displayedColumns\n                            \n                            \n                                    Private\n                                usersSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                emit_employee\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ready\n                            \n                            \n                                set_boss\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(client: HttpClient, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/manage-users/user-table/user-table.component.ts:29\n                            \n                        \n\n                \n                    \n                            The constructro subsribes to UserService Observable to get users list and checks device screen dimension in order to hide email column in mobile devices\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ready\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        set_boss\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filterValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Filter function for datatable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit_employee\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit_employee(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Emits output to outer component, the value indicates wich user has been clicked in order to start boss assigment procedure\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Executes unsubscription from user-service's observable\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     \n\n                    \n                \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"name\", \"surname\", \"email\", \"boss\"]\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        usersSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output\n} from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material\";\nimport { UserType } from \"../../interfaces\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subscription } from \"rxjs\";\nimport { UserService } from \"../../user.service\";\n\n/**\n * This component contains the table showing a complete list of users (name,surname,email, boss)\n *\n * NOTE: table base code got from Angula Material\n */\n@Component({\n  selector: \"user-table\",\n  templateUrl: \"./user-table.component.html\",\n  styleUrls: [\"./user-table.component.css\"]\n})\nexport class UserTableComponent implements OnDestroy {\n  @Output() ready = new EventEmitter(); //output to indicate to outer component if data is ready, it contains length of users list\n  @Output() set_boss = new EventEmitter(); //emit to outer component to show boss selection list\n  private displayedColumns = [\"name\", \"surname\", \"email\", \"boss\"];\n  private dataSource; //data source for datatable\n  private usersSubscription: Subscription; //Subscription to user-service observaable to get user list\n\n  /**\n   * The constructro subsribes to UserService Observable to get users list and checks device screen dimension in order to hide email column in mobile devices\n   */\n  constructor(client: HttpClient, private UserService: UserService) {\n    if (window.screen.width  {\n      //subscription to user-service's observable to get user list\n      this.dataSource = new MatTableDataSource(users); //inject received data in the table\n      if (users.length == 0) {\n        //emit query status to outer component\n        this.ready.emit(0); //no user found\n      } else {\n        this.ready.emit(users.length); //data is ready, table can be displayed\n      }\n    });\n    this.UserService.reset_version();\n  }\n\n  /**\n   * Filter function for datatable\n   */\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  /**\n   * Emits output to outer component, the value indicates wich user has been clicked in order to start boss assigment procedure\n   */\n  emit_employee(user) {\n    this.set_boss.emit(user);\n  }\n\n  /**\n   * Executes unsubscription from user-service's observable\n   */\n  ngOnDestroy() {\n    this.usersSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n  \n     Nome \n     {{element.name}} \n  \n  \n     Cognome \n     {{element.surname}} \n  \n  \n     Email \n     {{element.email}} \n  \n  \n     Capo \n    \n      \n        {{UserService.get_boss_name(element.id)}}\n      \n      Nomina Capo\n    \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         Nome      {{element.name}}          Cognome      {{element.surname}}          Email      {{element.email}}          Capo                   {{UserService.get_boss_name(element.id)}}            Nomina Capo          '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserType.html":{"url":"interfaces/UserType.html","title":"interface - UserType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        surname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersResponseType.html":{"url":"interfaces/UsersResponseType.html","title":"interface - UsersResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UsersResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        users\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     UserType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersSubmittedResponseType.html":{"url":"interfaces/UsersSubmittedResponseType.html","title":"interface - UsersSubmittedResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UsersSubmittedResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        users\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     UsersSubmittedType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UsersSubmittedType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersSubmittedType.html":{"url":"interfaces/UsersSubmittedType.html","title":"interface - UsersSubmittedType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UsersSubmittedType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id_user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VersionResponseType.html":{"url":"interfaces/VersionResponseType.html","title":"interface - VersionResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VersionResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    app/absences-section/absences-calendar/absences-calendar.component.ts\n            \n            \n                component\n            \n            \n                AbsencesCalendarComponent\n            \n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                    app/absences-section/absences-calendar/absences-calendar.component.ts\n            \n            \n                component\n            \n            \n                RequestDetailsComponent\n            \n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                    app/absences-section/absences-calendar/absences-calendar.component.ts\n            \n            \n                variable\n            \n            \n                colors\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    app/absences-section/employee/employee.component.ts\n            \n            \n                component\n            \n            \n                EmployeeComponent\n            \n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                    app/absences-section/employees/employees.component.ts\n            \n            \n                component\n            \n            \n                EmployeesComponent\n            \n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                    app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts\n            \n            \n                component\n            \n            \n                ModifyRequestComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts\n            \n            \n                component\n            \n            \n                MyAbsencesListComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    app/absences-section/my-absences/my-absences.component.ts\n            \n            \n                component\n            \n            \n                MyAbsencesComponent\n            \n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                    app/absences-section/request-charts/request-charts.component.ts\n            \n            \n                component\n            \n            \n                RequestChartsComponent\n            \n            \n                66 %\n                (24/36)\n            \n        \n        \n            \n                \n                    app/absences-section/requests.service.ts\n            \n            \n                injectable\n            \n            \n                RequestsService\n            \n            \n                57 %\n                (12/21)\n            \n        \n        \n            \n                \n                    app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                    app/block-scroll.service.ts\n            \n            \n                injectable\n            \n            \n                BlockScrollService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                    app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                    app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                AddRequestResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                AnswerResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                BossResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConditionResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                LogResponseType\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                MenuItem\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                MySurveyType\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                MySurveysResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                PercentualAnswerResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                PercentualAnswerType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                QuestionsResponseType\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                QuestionsType\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                RegisterResponseType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                RequestType\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                RequestsResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SuccessResponseType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SupervisionType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SupervisionsResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveyAdminResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveyAdminType\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveyCreationResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveyType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveysResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                TableUserType\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UserResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UserType\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UsersResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UsersSubmittedResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UsersSubmittedType\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                VersionResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/login-dialog/login-dialog.component.ts\n            \n            \n                component\n            \n            \n                LoginDialogComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    app/manage-users/manage-users.component.ts\n            \n            \n                component\n            \n            \n                BottomListComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    app/manage-users/manage-users.component.ts\n            \n            \n                component\n            \n            \n                ManageUsersComponent\n            \n            \n                50 %\n                (9/18)\n            \n        \n        \n            \n                \n                    app/manage-users/user-table/user-table.component.ts\n            \n            \n                component\n            \n            \n                UserTableComponent\n            \n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                    app/sidebar/sidebar-body/sidebar-body.component.ts\n            \n            \n                component\n            \n            \n                MiniSidebarItem\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                    app/sidebar/sidebar-body/sidebar-body.component.ts\n            \n            \n                component\n            \n            \n                SidebarBodyComponent\n            \n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                    app/sidebar/sidebar-body/sidebar-body.component.ts\n            \n            \n                component\n            \n            \n                SidebarMenuItem\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    app/surveys-section/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                    app/surveys-section/allsurveys/allsurveys.component.ts\n            \n            \n                component\n            \n            \n                AllsurveysComponent\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                    app/surveys-section/compile/compile.component.ts\n            \n            \n                component\n            \n            \n                CompileComponent\n            \n            \n                41 %\n                (7/17)\n            \n        \n        \n            \n                \n                    app/surveys-section/createsurvey/createsurvey.component.ts\n            \n            \n                component\n            \n            \n                CreatesurveyComponent\n            \n            \n                42 %\n                (16/38)\n            \n        \n        \n            \n                \n                    app/surveys-section/createsurvey/createsurvey.component.ts\n            \n            \n                component\n            \n            \n                ModifyQuestionComponent\n            \n            \n                40 %\n                (10/25)\n            \n        \n        \n            \n                \n                    app/surveys-section/requests.service.ts\n            \n            \n                injectable\n            \n            \n                RequestsSurveysService\n            \n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                    app/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                55 %\n                (15/27)\n            \n        \n        \n            \n                \n                    environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbsencesCalendarComponent\n\nAbsencesCalendarComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbsencesCalendarComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAllsurveysComponent\n\nAllsurveysComponent\n\nAppModule -->\n\nAllsurveysComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBottomListComponent\n\nBottomListComponent\n\nAppModule -->\n\nBottomListComponent->AppModule\n\n\n\n\n\nCompileComponent\n\nCompileComponent\n\nAppModule -->\n\nCompileComponent->AppModule\n\n\n\n\n\nCreatesurveyComponent\n\nCreatesurveyComponent\n\nAppModule -->\n\nCreatesurveyComponent->AppModule\n\n\n\n\n\nEmployeeComponent\n\nEmployeeComponent\n\nAppModule -->\n\nEmployeeComponent->AppModule\n\n\n\n\n\nEmployeesComponent\n\nEmployeesComponent\n\nAppModule -->\n\nEmployeesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginDialogComponent\n\nLoginDialogComponent\n\nAppModule -->\n\nLoginDialogComponent->AppModule\n\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\nAppModule -->\n\nManageUsersComponent->AppModule\n\n\n\n\n\nMiniSidebarItem\n\nMiniSidebarItem\n\nAppModule -->\n\nMiniSidebarItem->AppModule\n\n\n\n\n\nModifyQuestionComponent\n\nModifyQuestionComponent\n\nAppModule -->\n\nModifyQuestionComponent->AppModule\n\n\n\n\n\nModifyRequestComponent\n\nModifyRequestComponent\n\nAppModule -->\n\nModifyRequestComponent->AppModule\n\n\n\n\n\nMyAbsencesComponent\n\nMyAbsencesComponent\n\nAppModule -->\n\nMyAbsencesComponent->AppModule\n\n\n\n\n\nMyAbsencesListComponent\n\nMyAbsencesListComponent\n\nAppModule -->\n\nMyAbsencesListComponent->AppModule\n\n\n\n\n\nRequestChartsComponent\n\nRequestChartsComponent\n\nAppModule -->\n\nRequestChartsComponent->AppModule\n\n\n\n\n\nRequestDetailsComponent\n\nRequestDetailsComponent\n\nAppModule -->\n\nRequestDetailsComponent->AppModule\n\n\n\n\n\nSidebarBodyComponent\n\nSidebarBodyComponent\n\nAppModule -->\n\nSidebarBodyComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSidebarMenuItem\n\nSidebarMenuItem\n\nAppModule -->\n\nSidebarMenuItem->AppModule\n\n\n\n\n\nUserTableComponent\n\nUserTableComponent\n\nAppModule -->\n\nUserTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBlockScrollService\n\nBlockScrollService\n\nAppModule -->\n\nBlockScrollService->AppModule\n\n\n\n\n\nRequestsService\n\nRequestsService\n\nAppModule -->\n\nRequestsService->AppModule\n\n\n\n\n\nRequestsSurveysService\n\nRequestsSurveysService\n\nAppModule -->\n\nRequestsSurveysService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        24 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        30 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            11 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            colors   (app/.../absences-calendar.component.ts)\n                        \n                        \n                            context   (test.ts)\n                        \n                        \n                            environment   (environments/.../environment.prod.ts)\n                        \n                        \n                            environment   (environments/.../environment.ts)\n                        \n                        \n                            require   (test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    app/absences-section/absences-calendar/absences-calendar.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            colors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colors:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  red: {\n    //refused requests\n    primary: \"#ad2121\",\n    secondary: \"#FAE3E3\"\n  },\n  grey: {\n    //pending requests\n    primary: \"#888888\",\n    secondary: \"#aaaaaa\"\n  },\n  green: {\n    //approved requests\n    primary: \"#21ad21\",\n    secondary: \"#e3fae3\"\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
