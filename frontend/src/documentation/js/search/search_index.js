var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AbsencesCalendarComponent.html",[0,0.242,1,0.832]],["body/components/AbsencesCalendarComponent.html",[0,0.419,1,1.242,2,0.07,3,0.07,4,0.789,5,0.789,6,0.789,7,0.057,8,3.638,9,4.368,10,4.368,11,2.022,12,0.86,13,1.802,14,4.368,15,5.264,16,2.304,17,3.694,18,3.576,19,3.576,20,0.261,21,2.419,22,1.751,23,2.419,24,3.077,25,3.667,26,3.667,27,1.838,28,2.714,29,0.789,30,2.113,31,1.17,32,3.667,33,1.17,34,3.667,35,0.083,36,0.207,37,2.08,38,4.836,39,2.309,40,3.694,41,3.446,42,4.332,43,4.836,44,5.411,45,1.512,46,4.372,47,4.836,48,3.077,49,3.667,50,1.356,51,2.472,52,4.089,53,3.11,54,1.796,55,1.721,56,4.248,57,2.771,58,1.758,59,2.674,60,3.285,61,2.589,62,2.294,63,3.667,64,1.336,65,0.017,66,0.243,67,0.174,68,1.336,69,2.864,70,2.999,71,2.864,72,3.285,73,2.674,74,3.667,75,3.667,76,1.776,77,1.654,78,2.864,79,2.771,80,2.581,81,5.602,82,1.751,83,1.751,84,2.864,85,2.022,86,1.594,87,2.864,88,2.864,89,2.714,90,2.472,91,1.721,92,2.304,93,1.521,94,0.383,95,1.815,96,1.92,97,2.145,98,2.864,99,2.864,100,2.864,101,0.788,102,2.864,103,2.864,104,0.471,105,3.207,106,0.987,107,2.864,108,1.51,109,0.635,110,2.472,111,2.472,112,2.472,113,2.472,114,2.472,115,2.472,116,0.939,117,2.472,118,1.868,119,1.868,120,1.868,121,1.18,122,1.303,123,0.899,124,0.151,125,1.303,126,1.303,127,3.955,128,3.285,129,2.191,130,4.372,131,2.022,132,1.023,133,1.74,134,3.285,135,3.916,136,2.215,137,3.916,138,2.215,139,3.285,140,2.215,141,2.215,142,3.285,143,2.215,144,2.215,145,0.07,146,0.984,147,2.419,148,1.74,149,1.868,150,1.868,151,1.45,152,1.933,153,2.472,154,2.215,155,2.472,156,2.215,157,2.472,158,2.215,159,2.472,160,1.631,161,1.239,162,1.631,163,1.631,164,1.631,165,1.126,166,2.472,167,3.667,168,2.472,169,4.372,170,2.472,171,1.456,172,0.86,173,2.304,174,1.647,175,2.472,176,0.203,177,1.868,178,1.373,179,1.373,180,1.74,181,2.472,182,2.472,183,2.472,184,2.215,185,2.215,186,2.215,187,2.022,188,2.022,189,2.771,190,2.022,191,4.225,192,1.45,193,2.022,194,2.472,195,1.18,196,1.74,197,1.74,198,1.868,199,2.771,200,2.771,201,4.248,202,4.248,203,4.248,204,2.864,205,2.771,206,2.581,207,2.581,208,4.332,209,0.724,210,1.17,211,1.121,212,1.17,213,0.789,214,2.864,215,0.789,216,0.635,217,0.789,218,0.635,219,0.789,220,0.664,221,1.336,222,0.789,223,0.664,224,0.756,225,1.17,226,0.635,227,0.789,228,0.664,229,0.789,230,0.635,231,0.789,232,0.635,233,0.789,234,0.664,235,0.789,236,0.635,237,0.789,238,0.664,239,0.693,240,0.789,241,0.635,242,0.693,243,0.789,244,0.664,245,0.789,246,1.336,247,1.17,248,0.664,249,1.121,250,0.789,251,0.664,252,0.789,253,0.635,254,0.789,255,0.664,256,0.693,257,0.789,258,0.664,259,0.789,260,0.664,261,0.789,262,0.664,263,0.789,264,0.664,265,0.789,266,0.664,267,0.756,268,0.789,269,0.009,270,0.009]],["title/interfaces/AddRequestResponseType.html",[124,0.197,271,0.664]],["body/interfaces/AddRequestResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.735,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.97,272,0.762,273,1.207,274,1.276,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/components/AdminComponent.html",[0,0.242,216,0.832]],["body/components/AdminComponent.html",[0,0.401,1,0.559,2,0.062,3,0.062,4,0.694,5,0.694,6,0.694,7,0.05,12,0.757,13,0.934,20,0.131,27,1.67,29,0.694,30,2.084,31,1.063,33,1.063,35,0.137,36,0.188,37,1.447,45,0.975,50,0.934,54,1.576,55,1.743,58,1.874,62,1.471,64,1.848,65,0.017,66,0.272,67,0.146,68,1.799,76,1.958,77,1.769,89,1.351,91,1.718,94,0.19,97,1.883,104,0.436,105,2.512,108,1.457,109,0.559,121,1.039,122,1.147,123,0.791,124,0.133,125,1.147,126,1.147,145,0.062,146,0.584,152,1.147,171,1.94,172,0.757,174,1.756,176,0.24,178,2.714,179,1.208,209,0.637,210,1.063,211,1.018,212,1.063,213,0.694,215,0.694,216,1.165,217,0.694,218,0.559,219,0.694,220,0.584,221,1.237,222,0.694,223,0.584,224,0.665,225,1.063,226,0.559,227,0.694,228,0.584,229,0.694,230,0.559,231,0.694,232,0.559,233,0.694,234,0.584,235,0.694,236,0.559,237,0.694,238,0.584,239,0.61,240,0.694,241,0.559,242,0.61,243,0.694,244,0.584,245,0.694,246,1.237,247,1.063,248,0.584,249,1.018,250,0.694,251,0.584,252,0.694,253,0.559,254,0.694,255,0.584,256,0.61,257,0.694,258,0.584,259,0.694,260,0.584,261,0.694,262,0.584,263,0.694,264,0.584,265,0.694,266,0.584,267,0.665,268,0.694,269,0.008,270,0.008,273,1.153,276,0.52,277,0.406,278,1.153,289,0.836,293,0.368,294,0.972,295,0.685,297,1.009,298,0.426,299,1.153,301,0.387,305,1.05,306,0.974,317,0.426,318,1.133,326,0.406,327,0.426,335,4.41,336,2.176,337,1.59,338,2.725,339,2.068,340,3.859,341,1.59,342,2.345,343,3.331,344,3.31,345,3.859,346,3.859,347,3.859,348,2.518,349,3.331,350,2.984,351,3.859,352,3.859,353,3.859,354,3.859,355,5.662,356,3.709,357,3.859,358,5.253,359,3.859,360,3.331,361,1.78,362,3.331,363,3.146,364,3.146,365,3.859,366,3.859,367,2.521,368,3.331,369,2.521,370,2.984,371,3.331,372,2.068,373,3.331,374,3.859,375,2.521,376,2.345,377,2.849,378,2.517,379,4.888,380,2.521,381,2.521,382,5.186,383,2.176,384,3.331,385,4.526,386,3.859,387,2.521,388,2.521,389,2.521,390,3.859,391,2.521,392,3.65,393,3.859,394,3.859,395,2.521,396,3.859,397,2.521,398,4.688,399,2.521,400,3.859,401,2.521,402,3.859,403,2.521,404,2.517,405,2.521,406,2.521,407,1.949,408,1.532,409,1.276,410,1.208,411,1.953,412,1.276,413,1.435,414,2.521,415,3.023,416,3.629,417,3.896,418,3.896,419,4.216,420,4.216,421,3.2,422,3.896,423,4.885,424,4.885,425,4.618,426,4.618,427,3.4,428,4.216,429,3.896,430,2.521,431,1.949,432,2.521,433,2.176,434,2.521,435,2.521,436,4.216,437,3.896,438,1.645,439,1.949,440,2.176,441,1.78,442,2.176,443,2.176,444,1.949,445,2.176,446,1.532,447,2.176,448,1.949,449,2.176,450,1.351,451,1.435,452,1.78,453,1.78,454,1.78,455,1.645,456,2.521,457,2.521,458,2.521,459,2.176,460,2.521,461,2.521,462,2.521,463,2.521,464,3.058,465,2.521,466,1.949,467,2.521,468,2.521,469,4.062,470,4.688,471,2.176,472,2.521,473,2.521,474,1.532,475,3.859,476,2.521,477,2.176,478,4.688,479,2.176,480,2.521,481,1.949,482,1.78,483,3.331,484,3.331,485,2.984,486,3.859,487,3.859,488,3.331,489,3.331]],["title/components/AllsurveysComponent.html",[0,0.242,218,0.832]],["body/components/AllsurveysComponent.html",[0,0.453,1,0.827,2,0.091,3,0.091,4,1.028,5,1.028,6,1.028,7,0.074,13,1.242,20,0.174,27,2.221,28,1.999,29,1.028,30,2.165,31,1.414,33,1.414,35,0.109,36,0.25,37,2.086,45,1.297,50,1.242,55,1.755,59,2.892,62,2.149,64,1.548,65,0.017,66,0.257,67,0.167,68,1.548,73,2.115,76,1.873,77,1.354,89,2.751,91,1.476,93,1.121,94,0.282,97,2.265,104,0.588,108,1.585,109,0.827,116,1.223,121,1.537,122,1.697,124,0.196,125,1.697,126,1.697,145,0.091,146,0.864,171,1.278,172,1.542,174,1.657,176,0.225,192,2.598,209,0.943,210,1.414,211,1.354,212,1.414,213,1.028,215,1.028,216,0.827,217,1.028,218,1.402,219,1.028,220,0.864,221,1.548,222,1.028,223,0.864,224,0.984,225,1.414,226,0.827,227,1.028,228,0.864,229,1.028,230,0.827,231,1.028,232,0.827,233,1.028,234,0.864,235,1.028,236,0.827,237,1.028,238,0.864,239,0.903,240,1.028,241,0.827,242,0.903,243,1.028,244,0.864,245,1.028,246,1.548,247,1.414,248,0.864,249,1.354,250,1.028,251,0.864,252,1.028,253,0.827,254,1.028,255,0.864,256,0.903,257,1.028,258,0.864,259,1.028,260,0.864,261,1.028,262,0.864,263,1.028,264,0.864,265,1.028,266,0.864,267,0.984,268,1.028,269,0.011,270,0.011,286,1.018,289,0.871,296,1.018,335,4.46,337,2.115,338,3.624,339,2.751,341,2.115,344,4.143,356,4.462,363,3.551,364,3.466,376,3.119,379,5.912,384,3.76,410,1.788,411,1.888,412,1.888,483,4.431,490,3.221,491,6.848,492,5.132,493,5.132,494,6.32,495,6.32,496,6.32,497,5.132,498,5.132,499,6.32,500,3.221,501,5.132,502,5.132,503,5.132,504,3.73,505,3.969,506,5.132,507,3.73,508,5.132,509,3.73,510,3.73,511,3.73,512,3.73,513,3.73,514,3.73,515,3.73,516,3.73,517,3.348,518,2.922,519,3.73,520,3.73,521,3.73,522,3.73,523,3.73,524,3.73,525,3.73,526,3.73,527,3.73,528,3.73,529,3.73,530,5.132,531,5.132,532,4.123,533,5.132,534,5.132,535,5.132,536,5.132,537,5.132]],["title/interfaces/AnswerResponseType.html",[124,0.197,277,0.604]],["body/interfaces/AnswerResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.701,277,0.883,278,1.191,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/components/AppComponent.html",[0,0.242,220,0.869]],["body/components/AppComponent.html",[0,0.452,1,0.975,2,0.107,3,0.107,4,1.211,5,1.211,6,1.211,7,0.087,13,1.386,20,0.194,29,1.211,30,2.192,31,1.578,33,1.578,35,0.128,36,0.279,37,1.578,45,1.448,50,1.386,54,1.929,55,1.695,59,1.812,64,1.16,65,0.017,66,0.247,67,0.156,68,1.16,76,1.61,77,1.16,94,0.482,95,2.053,96,1.963,108,1.553,109,0.975,116,1.441,123,1.379,145,0.107,146,1.018,151,2.9,165,2.252,172,1.721,174,1.634,176,0.237,209,1.111,210,1.578,211,1.511,212,1.578,213,1.211,215,1.211,216,0.975,217,1.211,218,0.975,219,1.211,220,1.565,221,1.848,222,1.211,223,1.018,224,1.16,225,1.578,226,0.975,227,1.211,228,1.018,229,1.211,230,0.975,231,1.211,232,0.975,233,1.211,234,1.018,235,1.211,236,0.975,237,1.211,238,1.018,239,1.542,240,1.211,241,0.975,242,1.064,243,1.211,244,1.018,245,1.211,246,1.895,247,1.578,248,1.018,249,1.511,250,1.211,251,1.018,252,1.211,253,0.975,254,1.211,255,1.018,256,1.064,257,1.211,258,1.018,259,1.211,260,1.018,261,1.211,262,1.018,263,1.211,264,1.018,265,1.211,266,1.018,267,1.16,268,1.211,269,0.012,270,0.012,276,0.499,342,2.671,362,3.619,409,2.225,438,4.405,538,3.795,539,5.729,540,5.729,541,5.729,542,5.222,543,5.83,544,5.222,545,3.795,546,3.919,547,5.729,548,4.946,549,4.395,550,3.619,551,3.481,552,4.43,553,3.262,554,4.946,555,3.737,556,3.262,557,4.395,558,3.481,559,5.729,560,4.946,561,5.729,562,4.395,563,2.868,564,3.104,565,3.795,566,2.503,567,3.795,568,3.104,569,2.671,570,2.671,571,4.395,572,5.729,573,2.868]],["title/modules/AppModule.html",[574,2.01,575,2.648]],["body/modules/AppModule.html",[1,1.48,2,0.084,3,0.084,7,0.068,9,2.086,10,2.086,13,1.723,14,2.086,24,2.086,53,3.198,54,1.76,57,2.24,65,0.017,86,1.288,91,0.987,95,1.231,106,0.477,108,1.759,109,0.761,121,1.415,123,1.077,145,0.118,146,0.795,209,0.868,216,1.48,218,1.48,220,1.707,221,0.906,223,1.622,226,1.48,228,1.546,230,1.48,232,1.48,234,1.546,236,1.48,238,1.546,239,0.831,241,1.48,242,1.172,244,1.546,248,1.622,251,1.622,253,1.48,255,1.546,256,1.614,258,1.622,260,1.546,262,1.546,264,1.546,266,1.546,269,0.01,270,0.01,289,0.718,364,3.377,409,1.738,546,3.575,563,2.24,564,2.424,574,2.596,575,5.68,576,2.964,577,4.846,578,4.846,579,4.714,580,2.964,581,2.964,582,2.964,583,2.964,584,2.964,585,4.352,586,4.182,587,2.964,588,2.655,589,3.433,590,4.844,591,3.433,592,2.964,593,3.433,594,4.844,595,4.844,596,3.433,597,4.844,598,2.964,599,3.433,600,4.844,601,3.433,602,3.433,603,2.964,604,4.844,605,4.844,606,4.182,607,4.844,608,3.433,609,3.433,610,4.844,611,4.844,612,2.655,613,3.433,614,2.24,615,3.433,616,4.844,617,4.844,618,4.844,619,4.844,620,4.844,621,4.844,622,4.844,623,4.844,624,4.844,625,4.844,626,4.844,627,4.844,628,4.844,629,4.844,630,4.844,631,4.844,632,4.844,633,4.844,634,4.844,635,4.844,636,4.844,637,4.844,638,3.433,639,4.844,640,3.433,641,2.24,642,2.964,643,2.655,644,2.655,645,3.433,646,4.182,647,2.964,648,2.964,649,2.655,650,3.433,651,3.433,652,3.433,653,3.433,654,3.433,655,3.433,656,3.433,657,3.433,658,2.944,659,2.944,660,2.964,661,2.424,662,3.433,663,2.964,664,2.964,665,2.964,666,3.433,667,2.964,668,2.964,669,2.964,670,2.964,671,3.433,672,3.433,673,3.433,674,3.433,675,2.964,676,2.964,677,3.433,678,3.433,679,3.433,680,1.738,681,3.433,682,3.433,683,3.433,684,3.433,685,3.433,686,3.433,687,3.433,688,3.433,689,3.433,690,3.433,691,3.433,692,3.433,693,3.433,694,3.433]],["title/modules/AppRoutingModule.html",[574,2.01,585,2.446]],["body/modules/AppRoutingModule.html",[0,0.5,1,1.4,2,0.125,3,0.125,7,0.102,9,3.113,10,3.113,13,1.728,65,0.017,108,1.743,109,1.136,133,3.113,172,1.539,176,0.174,216,1.4,218,1.4,226,1.4,228,1.463,230,1.4,232,1.4,236,1.4,241,1.4,242,1.24,253,1.4,269,0.013,270,0.013,289,0.798,410,2.456,574,2.746,585,3.342,592,4.423,603,4.423,606,5.45,641,3.342,642,4.423,658,3.113,659,3.113,660,4.423,663,4.423,667,4.423,668,4.423,669,4.423,670,4.423,675,4.423,676,4.423,695,5.123,696,5.123,697,5.123,698,3.195,699,5.123,700,7.794,701,3.617,702,4.458,703,4.458,704,3.617,705,3.617,706,3.617,707,5.123,708,3.617,709,5.123,710,5.123,711,3.962,712,5.123,713,5.123]],["title/injectables/BlockScrollService.html",[93,1.126,546,2.01]],["body/injectables/BlockScrollService.html",[2,0.116,3,0.116,7,0.094,12,1.422,21,3.421,24,3.651,35,0.138,36,0.357,37,2.017,39,3.018,40,3.421,45,1.518,50,1.597,55,1.734,65,0.017,67,0.116,76,1.755,77,1.832,86,2.689,89,3.22,91,1.362,93,2.086,108,1.333,109,1.05,145,0.116,146,1.097,171,2.059,174,1.146,211,1.585,239,1.454,246,1.585,269,0.013,270,0.013,337,2.476,342,3.651,546,3.22,551,3.651,553,3.421,555,3.92,563,3.92,568,3.343,569,3.651,570,3.651,714,6.322,715,4.087,716,5.922,717,5.188,718,6.009,719,4.647,720,6.009,721,6.009,722,6.423,723,6.601,724,5.171,725,6.009,726,6.009,727,6.944,728,6.944,729,5.822,730,6.322,731,6.009,732,4.734,733,7.167,734,4.734,735,4.734,736,4.243,737,4.734,738,3.661,739,6.601,740,4.734,741,3.343,742,4.734,743,4.087,744,4.734,745,4.734,746,6.601,747,4.734,748,4.734,749,4.734,750,4.734,751,4.734,752,4.734,753,4.734]],["title/interfaces/BossResponseType.html",[124,0.197,279,0.634]],["body/interfaces/BossResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.735,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.926,280,0.96,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/components/BottomListComponent.html",[0,0.242,223,0.869]],["body/components/BottomListComponent.html",[0,0.483,1,0.803,2,0.088,3,0.088,4,1.385,5,0.997,6,0.997,7,0.072,12,1.087,13,1.216,20,0.222,21,2.862,22,2.071,23,2.862,24,3.054,29,0.997,30,2.163,31,0.997,33,1.591,35,0.105,36,0.245,37,1.869,39,2.969,45,1.656,50,1.397,54,1.925,55,1.397,58,2.057,59,1.492,62,2.289,64,1.326,65,0.017,66,0.263,67,0.123,68,1.326,73,2.071,76,1.459,77,0.955,82,2.38,89,1.94,91,2.001,92,3.166,93,1.874,94,0.38,104,0.537,108,1.454,109,0.803,116,1.186,121,1.492,123,1.136,124,0.19,145,0.123,146,1.165,148,3.054,171,1.24,172,1.51,173,1.647,174,1.717,176,0.264,180,2.199,184,3.887,185,3.887,195,2.796,197,3.054,209,0.915,210,1.385,211,1.326,212,1.385,213,0.997,215,0.997,216,0.803,217,0.997,218,0.803,219,0.997,220,0.839,221,1.523,222,0.997,223,1.445,224,1.79,225,1.385,226,0.803,227,0.997,228,0.839,229,0.997,230,0.803,231,0.997,232,0.803,233,0.997,234,0.839,235,0.997,236,0.803,237,0.997,238,0.839,239,0.876,240,0.997,241,1.115,242,1.586,243,0.997,244,0.839,245,0.997,246,1.523,247,1.385,248,0.839,249,1.326,250,0.997,251,0.839,252,0.997,253,0.803,254,0.997,255,0.839,256,0.876,257,0.997,258,0.839,259,0.997,260,0.839,261,0.997,262,0.839,263,0.997,264,0.839,265,0.997,266,0.839,267,1.326,268,0.997,269,0.011,270,0.011,276,0.571,280,0.991,291,0.477,310,0.641,324,1.054,329,0.81,330,0.771,337,2.38,377,2.199,384,1.94,404,2.361,474,3.791,489,4.339,553,2.862,555,2.361,641,4.07,680,1.832,711,2.799,741,3.549,754,4.405,755,2.799,756,2.694,757,3.887,758,4.339,759,4.339,760,2.694,761,3.887,762,3.549,763,4.405,764,3.619,765,4.465,766,5.386,767,3.619,768,3.887,769,3.619,770,3.279,771,3.767,772,2.555,773,3.619,774,3.124,775,4.339,776,3.124,777,4.339,778,3.124,779,3.124,780,3.124,781,3.124,782,2.555,783,3.124,784,3.124,785,2.799,786,3.124,787,2.555,788,3.095,789,3.549,790,3.124,791,3.124,792,3.887,793,3.887,794,4.339,795,3.887,796,3.887,797,3.124,798,2.555,799,3.733,800,3.124,801,3.124,802,2.799,803,4.339,804,3.124,805,3.124,806,3.887,807,5.026,808,3.549,809,5.026,810,5.026]],["title/components/CompileComponent.html",[0,0.242,226,0.832]],["body/components/CompileComponent.html",[0,0.406,1,0.581,2,0.064,3,0.064,4,0.722,5,0.722,6,0.722,7,0.052,12,0.787,13,0.962,20,0.135,27,1.72,29,0.722,30,2.093,31,1.095,33,1.095,35,0.076,36,0.194,37,1.788,45,1.004,50,0.962,54,1.662,55,1.755,58,2.036,61,1.134,62,0.822,64,1.787,65,0.017,66,0.252,67,0.166,68,1.6,76,1.93,77,1.6,80,1.593,91,1.744,96,0.898,97,1.921,104,0.657,105,2.573,108,1.527,109,0.581,116,0.859,121,1.08,122,1.193,123,0.822,124,0.138,125,1.193,126,1.193,145,0.064,146,0.607,152,1.193,171,1.974,172,1.194,174,1.726,176,0.163,178,2.569,179,1.257,209,0.662,210,1.095,211,1.049,212,1.095,213,0.722,215,0.722,216,0.581,217,0.722,218,0.581,219,0.722,220,0.607,221,1.267,222,0.722,223,0.607,224,0.692,225,1.095,226,1.189,227,0.722,228,0.607,229,0.722,230,0.581,231,0.722,232,0.581,233,0.722,234,0.607,235,0.722,236,0.581,237,0.722,238,0.607,239,0.634,240,0.722,241,0.581,242,0.634,243,0.722,244,0.607,245,0.722,246,1.267,247,1.095,248,0.607,249,1.049,250,0.722,251,0.607,252,0.722,253,0.581,254,0.722,255,0.607,256,0.634,257,0.722,258,0.607,259,0.722,260,0.607,261,0.722,262,0.607,263,0.722,264,0.607,265,0.722,266,0.607,267,0.692,268,0.722,269,0.008,270,0.008,273,1.159,275,0.64,276,0.548,277,0.422,278,1.123,281,0.443,282,0.704,289,0.757,293,0.383,294,1.036,295,0.885,297,1.242,301,0.884,315,0.383,319,0.949,335,4.439,337,1.638,338,2.807,339,2.13,344,3.391,348,2.569,349,4.627,356,3.784,360,3.432,362,3.376,363,3.189,364,3.069,376,1.593,377,1.593,382,3.713,384,3.087,385,3.391,392,3.28,404,3.133,407,4.145,408,1.593,409,1.327,410,1.257,411,2.431,412,1.327,413,2.263,415,3.189,416,3.685,417,3.956,418,3.956,419,4.281,420,4.281,421,3.249,422,3.956,423,4.784,424,4.928,425,4.689,426,4.689,427,3.452,428,4.281,429,3.956,431,2.027,433,2.263,436,4.281,437,3.956,450,2.13,464,3.133,466,2.027,469,3.074,477,2.263,479,2.263,481,2.027,482,1.851,485,3.074,500,2.263,680,1.327,698,2.431,811,2.263,812,5.602,813,3.975,814,3.975,815,6.489,816,3.975,817,3.975,818,3.432,819,3.975,820,4.627,821,4.627,822,3.975,823,2.621,824,2.621,825,2.621,826,3.975,827,2.621,828,4.627,829,3.432,830,3.975,831,2.621,832,3.975,833,3.975,834,2.621,835,2.621,836,2.621,837,3.975,838,2.621,839,3.432,840,2.621,841,2.621,842,2.621,843,2.621,844,2.621,845,2.621,846,2.621,847,2.621,848,1.492,849,1.851,850,1.851,851,1.851,852,1.405,853,2.621,854,1.71,855,3.975,856,4.802,857,2.621,858,5.359,859,2.621,860,2.263,861,2.263,862,2.027,863,2.263,864,2.263,865,2.621,866,2.621,867,2.621,868,3.975,869,2.621,870,2.621,871,3.975,872,3.784,873,3.975,874,1.492,875,2.621,876,1.851,877,1.593,878,2.263,879,2.621,880,3.975,881,2.263,882,2.621,883,2.027,884,3.074,885,2.621,886,3.432,887,2.027,888,2.621,889,2.263,890,3.975]],["title/interfaces/ConditionResponseType.html",[124,0.197,281,0.634]],["body/interfaces/ConditionResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.701,277,0.662,278,1.042,279,0.694,280,0.6,281,0.926,282,1.165,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/components/EmployeeComponent.html",[0,0.242,230,0.832]],["body/components/EmployeeComponent.html",[0,0.438,1,0.736,2,0.155,3,0.081,4,1.302,5,0.914,6,0.914,7,0.109,8,3.626,12,0.996,13,1.453,16,2.151,17,3.418,18,3.338,20,0.26,22,1.367,27,2.046,28,2.952,29,0.914,30,2.143,31,1.302,33,1.302,35,0.097,36,0.231,37,2.102,45,1.195,48,3.347,50,1.453,53,3.386,54,1.89,55,1.709,59,2.719,61,2.746,62,1.483,64,1.453,65,0.017,66,0.233,67,0.161,68,1.247,76,1.392,77,0.875,79,3.084,85,2.342,86,2.066,91,2.031,92,2.732,95,1.189,96,1.137,101,0.791,104,0.558,105,2.533,106,0.833,108,1.463,109,0.736,116,1.087,122,1.509,123,1.041,124,0.175,132,0.921,145,0.081,146,0.769,147,1.889,148,4.668,152,3.214,171,2.327,174,1.596,176,0.23,186,2.565,187,2.342,188,2.342,190,2.342,191,3.889,192,3.212,205,3.916,206,4.217,207,2.873,208,3.656,209,0.838,210,1.302,211,1.247,212,1.302,213,0.914,215,0.914,216,0.736,217,0.914,218,0.736,219,0.914,220,0.769,221,1.674,222,0.914,223,0.769,224,0.875,225,1.302,226,0.736,227,0.914,228,0.769,229,0.914,230,1.331,231,0.914,232,0.736,233,0.914,234,0.769,235,0.914,236,0.736,237,0.914,238,0.769,239,0.803,240,0.914,241,0.736,242,0.803,243,0.914,244,0.769,245,0.914,246,1.453,247,1.302,248,0.769,249,1.247,250,0.914,251,0.769,252,0.914,253,0.736,254,0.914,255,0.769,256,0.803,257,0.914,258,0.769,259,0.914,260,0.769,261,0.914,262,0.769,263,0.914,264,0.769,265,0.914,266,0.769,267,0.875,268,0.914,269,0.01,270,0.01,276,0.48,280,0.69,291,0.791,301,0.509,337,1.367,348,3.042,363,3.436,372,2.533,377,2.016,392,2.692,410,1.59,413,1.889,415,1.679,421,2.533,427,3.418,505,4.642,518,2.692,550,1.778,553,2.692,556,2.692,698,2.788,703,2.342,782,3.338,821,5.183,887,2.565,891,2.864,892,3.656,893,5.508,894,4.081,895,4.727,896,4.727,897,6.003,898,6.003,899,4.259,900,3.656,901,2.864,902,4.727,903,3.317,904,3.317,905,2.565,906,2.565,907,3.317,908,2.864,909,3.317,910,3.317,911,3.317,912,3.317,913,3.317,914,3.317,915,3.317,916,3.317,917,3.317,918,3.317,919,2.864,920,2.864,921,3.317,922,6.597,923,4.081,924,4.081,925,4.727,926,2.533,927,4.642,928,3.648,929,4.239,930,4.081,931,5.183,932,4.081,933,3.656,934,4.081,935,4.642,936,4.642,937,4.239,938,3.656,939,3.656,940,4.081,941,3.656,942,3.084,943,4.727,944,4.727,945,3.656,946,4.081,947,4.727,948,4.081,949,4.081,950,4.081,951,3.338]],["title/components/EmployeesComponent.html",[0,0.242,232,0.832]],["body/components/EmployeesComponent.html",[0,0.448,1,0.793,2,0.087,3,0.087,4,0.985,5,0.985,6,0.985,7,0.071,8,3.684,12,1.074,13,1.206,16,2.611,19,2.526,20,0.263,22,2.055,27,2.157,28,3.075,29,0.985,30,2.157,31,1.373,33,1.373,35,0.104,36,0.243,37,2.044,42,4.8,45,1.26,48,3.487,50,1.389,53,3.391,55,1.739,59,3.031,60,2.766,61,3.149,62,2.386,64,1.638,65,0.017,66,0.269,67,0.16,68,1.638,76,1.649,77,0.944,85,2.526,86,2.449,91,1.877,101,0.818,104,0.607,108,1.448,109,0.793,116,1.173,122,1.628,124,0.188,129,2.157,145,0.087,146,0.829,147,3.849,148,4.706,154,2.766,156,3.855,160,2.839,161,2.157,162,2.839,163,2.839,164,2.839,165,1.959,171,2.237,174,1.636,176,0.211,206,3.772,209,0.904,210,1.373,211,1.315,212,1.373,213,0.985,215,0.985,216,0.793,217,0.985,218,0.793,219,0.985,220,0.829,221,1.514,222,0.985,223,0.829,224,0.944,225,1.373,226,0.793,227,0.985,228,0.829,229,0.985,230,0.793,231,0.985,232,1.377,233,0.985,234,0.829,235,0.985,236,0.793,237,0.985,238,0.829,239,0.866,240,0.985,241,0.793,242,0.866,243,0.985,244,0.829,245,0.985,246,1.514,247,1.373,248,0.829,249,1.315,250,0.985,251,0.829,252,0.985,253,0.793,254,0.985,255,0.829,256,0.866,257,0.985,258,0.829,259,0.985,260,0.829,261,0.985,262,0.829,263,0.985,264,0.829,265,0.985,266,0.829,267,0.944,268,0.985,269,0.011,270,0.011,280,0.728,291,0.818,301,0.765,341,2.055,363,1.811,392,3.267,410,1.715,421,2.672,518,2.037,782,4.383,894,4.304,919,3.088,920,3.088,923,4.304,924,4.304,926,3.327,927,3.855,928,4.108,929,4.383,945,3.855,946,4.304,948,4.304,949,4.304,950,5.359,951,3.52,952,3.088,953,4.985,954,4.304,955,4.985,956,4.985,957,6.207,958,4.985,959,4.985,960,4.985,961,3.577,962,4.985,963,3.577,964,3.577,965,4.985,966,3.577,967,3.577,968,3.577,969,3.577,970,2.766,971,3.577,972,3.577,973,3.088,974,3.577,975,3.577,976,3.577,977,2.174,978,3.577,979,3.577,980,3.577,981,3.577,982,3.577,983,2.766,984,3.252,985,4.8,986,4.985,987,4.985,988,4.985,989,4.304,990,3.855,991,4.985,992,4.985,993,4.985]],["title/components/HeaderComponent.html",[0,0.242,234,0.869]],["body/components/HeaderComponent.html",[0,0.489,1,0.987,2,0.109,3,0.109,4,1.226,5,1.226,6,1.226,7,0.088,12,1.337,13,1.398,16,2.628,20,0.196,29,1.226,30,2.194,31,1.591,33,1.591,35,0.13,41,2.253,45,1.459,50,1.077,54,1.901,55,1.701,58,1.396,64,1.174,65,0.017,66,0.249,67,0.157,68,1.174,76,1.459,77,1.524,82,2.38,83,2.796,86,2.167,94,0.436,108,1.281,109,0.987,123,1.396,129,2.774,145,0.109,146,1.031,151,2.253,161,2.499,174,1.642,176,0.151,209,1.125,210,1.591,211,1.524,212,1.591,213,1.226,215,1.226,216,0.987,217,1.226,218,0.987,219,1.226,220,1.031,221,1.692,222,1.226,223,1.031,224,1.174,225,1.591,226,0.987,227,1.226,228,1.031,229,1.226,230,0.987,231,1.226,232,0.987,233,1.226,234,1.572,235,1.226,236,0.987,237,1.226,238,1.031,239,1.701,240,1.226,241,0.987,242,1.077,243,1.226,244,1.031,245,1.226,246,1.962,247,1.591,248,1.031,249,1.524,250,1.226,251,1.031,252,1.226,253,0.987,254,1.226,255,1.031,256,1.077,257,1.226,258,1.031,259,1.226,260,1.031,261,1.226,262,1.031,263,1.226,264,1.031,265,1.226,266,1.031,267,1.174,268,1.226,269,0.012,270,0.012,361,3.142,416,3.51,542,4.958,544,5.247,550,3.095,551,3.51,552,4.466,553,3.863,558,3.896,565,3.842,566,3.863,567,3.842,588,4.466,756,3.436,760,3.436,977,2.705,994,3.842,995,5.775,996,5.775,997,5.775,998,5.775,999,5.572,1000,4.378,1001,5.775,1002,4.451,1003,3.896,1004,4.451,1005,4.451,1006,4.451,1007,2.904,1008,2.904,1009,4.451,1010,4.986,1011,4.986,1012,4.466]],["title/components/HomeComponent.html",[0,0.242,236,0.832]],["body/components/HomeComponent.html",[0,0.468,1,0.941,2,0.104,3,0.104,4,1.168,5,1.168,6,1.168,7,0.084,12,1.274,13,1.612,17,3.187,20,0.19,29,1.168,30,2.186,31,1.542,33,1.542,50,1.026,54,1.876,55,1.026,64,1.119,65,0.017,66,0.243,67,0.104,68,1.119,108,1.241,109,0.941,123,1.331,145,0.104,146,0.983,174,1.612,176,0.144,192,3.371,199,3.651,200,4.345,209,1.072,210,1.542,211,1.477,212,1.542,213,1.168,215,1.168,216,0.941,217,1.168,218,0.941,219,1.168,220,0.983,221,1.913,222,1.168,223,0.983,224,1.119,225,1.542,226,0.941,227,1.168,228,0.983,229,1.168,230,0.941,231,1.168,232,0.941,233,1.168,234,0.983,235,1.168,236,1.477,237,1.168,238,0.983,239,1.026,240,1.168,241,0.941,242,1.026,243,1.168,244,0.983,245,1.168,246,1.653,247,1.542,248,0.983,249,1.477,250,1.168,251,0.983,252,1.168,253,0.941,254,1.168,255,0.983,256,1.026,257,1.168,258,0.983,259,1.168,260,0.983,261,1.168,262,0.983,263,1.168,264,0.983,265,1.168,266,0.983,267,1.119,268,1.168,269,0.012,270,0.012,289,0.625,339,2.999,341,2.307,361,2.995,446,4.047,448,4.328,450,3.569,532,4.801,703,3.952,738,4.328,808,3.952,926,2.999,928,4.321,945,4.328,951,4.703,977,2.578,985,4.328,1010,4.832,1013,3.662,1014,5.597,1015,4.832,1016,4.832,1017,4.832,1018,3.952,1019,5.597,1020,5.597,1021,4.242,1022,5.597,1023,5.196,1024,4.703,1025,7.111,1026,6.66,1027,5.597,1028,5.597,1029,5.75,1030,5.597,1031,5.597,1032,5.597,1033,5.597,1034,5.597,1035,5.597,1036,2.833,1037,4.832,1038,5.75,1039,5.597,1040,5.597,1041,4.832,1042,4.832,1043,5.597,1044,5.597,1045,5.597,1046,4.832,1047,5.597,1048,4.832,1049,5.597,1050,5.597,1051,5.597,1052,5.597,1053,4.832,1054,5.597,1055,5.597,1056,5.597,1057,4.832,1058,5.597,1059,5.597,1060,5.597,1061,5.597,1062,3.952]],["title/interfaces/LogResponseType.html",[124,0.197,290,0.634]],["body/interfaces/LogResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.138,35,0.119,36,0.266,65,0.017,66,0.265,67,0.167,94,0.595,101,0.719,104,0.733,106,0.758,124,0.419,132,0.627,145,0.194,176,0.248,269,0.012,270,0.012,271,0.723,272,0.757,273,1.206,274,0.793,275,1.266,276,0.701,277,0.658,278,1.039,279,0.69,280,0.596,281,0.69,282,0.723,283,0.627,284,0.69,285,0.69,286,0.879,287,1.059,288,0.69,289,0.764,290,0.922,291,0.946,292,1.109,293,0.596,294,0.853,295,0.898,296,0.99,297,1.039,298,0.69,299,1.012,300,0.966,301,1.049,302,0.793,303,0.793,304,0.793,305,0.757,306,0.757,307,0.793,308,0.69,309,0.723,310,1.211,311,0.69,312,0.793,313,0.69,314,0.69,315,0.596,316,0.658,317,0.69,318,0.922,319,0.723,320,0.69,321,0.69,322,0.757,323,0.922,324,0.69,325,0.69,326,0.658,327,0.69,328,0.966,329,0.879,330,0.838,331,0.723,332,0.793,333,0.658,334,0.723]],["title/components/LoginDialogComponent.html",[0,0.242,238,0.869]],["body/components/LoginDialogComponent.html",[0,0.452,1,0.821,2,0.09,3,0.09,4,1.019,5,1.019,6,1.019,7,0.073,12,1.112,13,1.235,20,0.173,29,1.019,30,2.163,31,1.406,33,1.406,35,0.108,36,0.249,37,2.039,40,3.586,45,1.29,50,1.524,54,1.847,55,1.694,64,0.976,65,0.017,66,0.227,67,0.154,68,0.976,76,1.67,77,1.347,82,2.815,83,1.525,86,1.915,94,0.476,95,1.326,96,2.002,97,1.326,108,1.296,109,0.821,123,1.161,145,0.09,146,0.857,151,3.345,172,1.755,174,1.524,176,0.237,192,2.583,197,3.102,209,0.935,210,1.406,211,1.347,212,1.406,213,1.019,215,1.019,216,0.821,217,1.019,218,0.821,219,1.019,220,0.857,221,1.542,222,1.019,223,0.857,224,0.976,225,1.406,226,0.821,227,1.019,228,0.857,229,1.019,230,0.821,231,1.019,232,0.821,233,1.019,234,0.857,235,1.019,236,0.821,237,1.019,238,1.459,239,1.863,240,1.019,241,0.821,242,0.895,243,1.019,244,0.857,245,1.019,246,1.542,247,1.406,248,0.857,249,1.347,250,1.019,251,0.857,252,1.019,253,0.821,254,1.019,255,0.857,256,0.895,257,1.019,258,0.857,259,1.019,260,0.857,261,1.019,262,0.857,263,1.019,264,0.857,265,1.019,266,0.857,267,0.976,268,1.019,269,0.011,270,0.011,276,0.595,330,1.095,341,2.104,378,3.33,546,3.823,550,3.661,551,3.551,552,4.518,553,3.327,554,4.406,555,3.33,556,3.586,563,2.414,564,2.613,568,3.604,649,5.516,716,4.518,729,5.11,757,4.871,785,4.871,788,3.752,789,5.174,795,3.947,796,4.518,808,4.447,928,3.102,970,3.947,984,4.109,1012,3.947,1029,4.406,1036,2.583,1048,4.406,1063,6.158,1064,3.195,1065,3.947,1066,5.104,1067,5.104,1068,5.438,1069,5.438,1070,3.89,1071,3.195,1072,5.104,1073,5.104,1074,3.7,1075,4.406,1076,4.406,1077,3.33,1078,4.406,1079,3.7,1080,5.104,1081,4.406,1082,3.7,1083,4.406,1084,4.406,1085,3.7,1086,3.7,1087,3.7,1088,5.104,1089,3.7,1090,3.7,1091,5.104,1092,5.104,1093,5.104,1094,5.104,1095,5.104,1096,5.104,1097,3.102,1098,5.438,1099,5.104,1100,3.947,1101,5.104,1102,5.104,1103,5.104,1104,3.7]],["title/components/ManageUsersComponent.html",[0,0.242,241,0.832]],["body/components/ManageUsersComponent.html",[0,0.46,1,0.679,2,0.075,3,0.075,4,1.451,5,0.844,6,0.844,7,0.061,12,0.92,13,1.08,20,0.196,21,1.744,22,1.263,23,1.744,24,1.862,29,0.844,30,2.132,31,1.23,33,1.451,35,0.089,36,0.218,37,1.939,39,3.113,45,1.622,50,1.274,54,1.857,55,1.81,58,1.816,59,1.263,62,2.173,64,1.389,65,0.017,66,0.273,67,0.169,68,1.389,72,2.369,73,2.385,76,1.778,77,1.623,82,2.171,89,2.392,91,1.284,92,2.799,93,1.341,94,0.513,95,1.6,96,1.983,104,0.655,108,1.364,109,0.679,116,1.004,121,1.263,123,0.961,124,0.161,145,0.109,146,1.034,148,2.713,161,1.326,171,1.05,172,1.738,173,1.394,174,1.644,176,0.264,180,2.713,195,2.732,197,3.516,209,0.774,210,1.23,211,1.178,212,1.23,213,0.844,215,0.844,216,0.679,217,0.844,218,0.679,219,0.844,220,0.71,221,1.389,222,0.844,223,1.034,224,1.623,225,1.23,226,0.679,227,0.844,228,0.71,229,0.844,230,0.679,231,0.844,232,0.679,233,0.844,234,0.71,235,0.844,236,0.679,237,0.844,238,0.71,239,0.741,240,0.844,241,1.283,242,1.676,243,0.844,244,0.71,245,0.844,246,1.389,247,1.23,248,0.71,249,1.178,250,0.844,251,0.71,252,0.844,253,0.679,254,0.844,255,0.71,256,0.741,257,0.844,258,0.71,259,0.844,260,0.71,261,0.844,262,0.71,263,0.844,264,0.71,265,0.844,266,0.71,267,1.527,268,0.844,269,0.01,270,0.01,276,0.648,280,0.938,291,0.404,324,0.754,329,0.991,330,0.944,337,2.171,377,1.862,384,2.392,404,1.999,474,3.738,553,3.295,555,1.999,556,2.542,568,3.152,641,4.905,680,2.259,711,2.369,741,4.086,754,5.309,755,2.369,756,1.642,757,4.757,758,2.645,759,2.645,760,1.642,761,2.369,762,2.163,763,3.719,765,2.369,766,3.854,768,2.369,770,1.999,771,2.912,774,2.645,775,4.996,776,2.645,777,3.854,778,2.645,779,2.645,780,2.645,781,2.645,782,3.152,783,3.854,784,3.854,785,4.475,786,4.996,787,3.719,788,3.296,789,4.969,790,5.31,791,3.854,792,4.757,793,3.452,794,3.854,795,3.452,796,3.452,797,2.645,798,2.163,799,3.656,800,2.645,801,3.854,802,4.965,803,3.854,804,3.854,805,2.645,928,2.713,929,3.152,970,2.369,985,3.452,989,3.854,990,4.475,1036,2.259,1068,4.547,1070,3.295,1075,3.854,1076,3.854,1077,2.912,1078,3.854,1084,2.645,1100,3.452,1105,4.464,1106,5.266,1107,4.464,1108,5.266,1109,3.064,1110,4.464,1111,3.064,1112,3.064,1113,3.064,1114,3.064,1115,2.645,1116,3.064,1117,3.064,1118,3.064,1119,3.064,1120,3.064,1121,3.064,1122,3.064,1123,3.064,1124,3.064,1125,2.369,1126,3.064,1127,3.064,1128,3.064,1129,3.064,1130,3.064,1131,3.064,1132,3.064,1133,3.854,1134,4.464,1135,4.464,1136,4.464]],["title/interfaces/MenuItem.html",[124,0.197,283,0.575]],["body/interfaces/MenuItem.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.283,67,0.161,94,0.593,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.199,274,0.798,275,1.258,276,0.702,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.841,284,1.111,285,1.111,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/components/MiniSidebarItem.html",[0,0.242,244,0.869]],["body/components/MiniSidebarItem.html",[0,0.479,1,0.726,2,0.08,3,0.08,4,0.901,5,0.901,6,0.901,7,0.065,12,0.983,13,1.444,14,2.845,16,2.13,20,0.159,29,0.901,30,2.145,31,1.506,33,1.506,35,0.095,36,0.228,37,0.901,39,1.349,45,1.381,50,0.792,54,0.863,55,1.589,58,1.027,62,1.027,64,0.863,65,0.017,66,0.255,67,0.134,68,0.863,73,2.787,76,1.779,82,1.929,83,2.602,91,1.572,93,0.983,94,0.477,95,1.173,96,1.121,97,2.263,108,1.4,109,0.726,116,1.073,123,1.027,124,0.172,129,2.365,133,1.989,145,0.114,146,1.382,149,4.901,150,4.411,151,3.195,161,2.026,165,2.148,172,1.896,173,2.487,174,1.589,176,0.111,195,1.349,199,2.135,200,3.892,207,1.989,209,0.827,210,1.29,211,1.824,212,1.29,213,0.901,215,0.901,216,0.726,217,0.901,218,0.726,219,0.901,220,0.758,221,1.442,222,0.901,223,0.758,224,0.863,225,1.29,226,0.726,227,0.901,228,0.758,229,0.901,230,0.726,231,0.901,232,0.726,233,0.901,234,0.758,235,0.901,236,0.726,237,0.901,238,0.758,239,0.792,240,0.901,241,0.726,242,0.792,243,0.901,244,1.382,245,1.863,246,2.009,247,1.29,248,0.758,249,1.235,250,0.901,251,0.758,252,0.901,253,0.726,254,0.901,255,0.758,256,0.792,257,0.901,258,0.758,259,0.901,260,0.758,261,0.901,262,0.758,263,0.901,264,1.085,265,2.08,266,0.758,267,0.863,268,0.901,269,0.01,270,0.01,283,0.916,284,0.924,285,0.924,289,0.523,294,0.65,339,3.383,342,1.989,363,3.563,372,2.509,410,1.569,413,2.666,446,1.989,450,1.754,451,2.666,532,4.118,558,1.989,566,3.113,569,2.845,570,2.845,573,3.054,614,4.411,698,2.37,701,2.31,702,2.31,704,2.31,705,2.31,706,2.31,708,2.31,724,3.306,736,2.31,756,2.509,760,2.929,848,1.863,852,1.754,874,1.863,876,2.31,877,2.845,926,2.509,977,2.845,984,3.566,1000,3.626,1003,2.845,1007,2.135,1008,2.135,1018,3.306,1023,4.457,1036,2.767,1062,2.31,1077,2.135,1097,2.845,1137,4.774,1138,2.31,1139,3.62,1140,3.62,1141,4.227,1142,4.227,1143,4.614,1144,4.614,1145,4.227,1146,4.682,1147,3.272,1148,4.614,1149,4.682,1150,3.62,1151,3.272,1152,3.272,1153,3.62,1154,3.272,1155,3.272,1156,3.62,1157,3.306,1158,4.227,1159,3.272,1160,3.62,1161,4.213,1162,5.647,1163,3.62,1164,3.62,1165,3.272,1166,4.227,1167,2.531,1168,2.531,1169,3.62,1170,2.531,1171,2.531,1172,2.531,1173,2.531,1174,3.62,1175,5.078,1176,2.531,1177,2.531,1178,4.227,1179,4.227,1180,2.31,1181,2.531,1182,2.531,1183,2.531,1184,2.531,1185,3.054,1186,4.227,1187,4.227,1188,2.531,1189,2.531,1190,2.531,1191,2.31,1192,2.531,1193,2.531,1194,2.531,1195,4.682,1196,4.042]],["title/components/ModifyQuestionComponent.html",[0,0.242,248,0.869]],["body/components/ModifyQuestionComponent.html",[0,0.387,1,0.421,2,0.046,3,0.046,4,0.522,5,0.522,6,0.849,7,0.038,12,0.57,13,0.746,20,0.152,22,0.782,27,0.821,29,0.522,30,2.016,31,1.073,33,1.073,35,0.162,36,0.15,37,1.772,39,2.295,40,2.553,45,1.133,50,0.942,52,2.011,54,1.627,55,1.747,58,1.548,61,0.821,62,1.98,64,1.531,65,0.017,66,0.233,67,0.185,68,1.301,70,3.166,73,1.27,76,1.863,77,1.665,80,1.153,83,1.27,86,1.156,89,2.403,91,1.815,92,1.403,93,0.926,94,0.339,95,1.607,96,1.537,97,1.996,104,0.518,105,3.381,108,1.427,109,0.421,116,0.622,118,3.448,119,1.237,120,1.237,121,0.782,122,0.863,123,0.595,124,0.1,125,0.863,126,0.863,131,1.339,145,0.075,146,0.714,152,0.863,158,1.467,165,0.745,171,1.334,172,1.587,173,2.405,174,1.583,176,0.152,177,1.237,178,2.364,179,1.478,192,0.96,195,1.605,196,1.873,197,1.873,198,2.54,209,0.479,210,0.849,211,0.813,212,0.849,213,0.522,215,0.522,216,0.421,217,0.522,218,0.421,219,0.522,220,0.439,221,1.027,222,0.522,223,0.439,224,0.5,225,0.849,226,0.421,227,0.522,228,0.714,229,0.522,230,0.421,231,0.522,232,0.421,233,0.522,234,0.439,235,0.522,236,0.421,237,0.522,238,0.439,239,0.459,240,0.522,241,0.421,242,0.459,243,0.522,244,0.439,245,0.522,246,1.027,247,0.849,248,1.039,249,1.627,250,0.522,251,0.439,252,0.522,253,0.421,254,0.522,255,0.439,256,0.459,257,0.522,258,0.439,259,0.522,260,0.439,261,0.522,262,0.439,263,0.522,264,0.439,265,0.522,266,0.439,267,0.5,268,0.522,269,0.007,270,0.007,273,0.946,275,0.306,276,0.655,278,1.294,282,1.117,289,0.768,292,0.32,293,0.277,294,1.07,295,1.013,297,1.15,315,0.277,316,0.306,319,0.336,335,4.409,337,1.605,338,1.339,339,1.016,341,2.033,343,2.661,344,2.176,348,2.533,350,1.467,356,1.339,362,3.215,363,2.269,364,3.037,370,4.879,371,1.637,372,1.016,373,1.637,376,3.212,377,3.527,378,2.925,382,3.467,383,3.361,384,3.559,385,4.689,392,1.08,404,2.925,407,3.011,408,1.153,409,0.96,410,0.909,411,1.971,412,0.96,413,1.08,415,2.269,416,2.725,417,2.54,418,2.925,419,2.749,420,2.749,421,2.087,422,2.54,423,3.483,424,3.483,425,2.384,426,2.384,427,1.755,428,2.176,429,2.011,431,2.384,436,2.749,437,2.54,438,2.011,439,2.384,440,2.661,441,2.176,442,1.637,443,1.637,444,1.467,445,1.637,446,1.153,447,1.637,448,1.467,449,1.637,450,1.652,451,1.755,452,2.176,453,2.176,454,2.176,455,2.011,459,2.661,464,2.54,466,1.467,469,2.384,474,1.153,481,3.011,482,1.339,484,2.661,485,2.384,488,4.258,518,2.217,551,2.366,574,1.016,612,1.467,738,1.467,770,1.237,771,1.237,772,1.339,788,1.652,793,1.467,799,1.755,818,1.637,820,4.258,828,2.661,829,3.361,839,1.637,848,1.08,849,1.339,850,1.339,851,1.339,852,1.016,854,1.237,860,1.637,861,4.258,862,3.011,863,5.01,864,2.661,872,3.166,874,1.08,877,1.153,878,1.637,881,2.661,883,1.467,884,1.467,887,2.384,889,2.661,1015,2.661,1017,1.637,1053,1.637,1057,1.637,1070,1.08,1083,2.661,1185,1.237,1191,1.339,1197,1.637,1198,4.932,1199,3.082,1200,3.082,1201,4.932,1202,3.082,1203,3.082,1204,3.082,1205,4.484,1206,3.082,1207,3.082,1208,4.087,1209,6.434,1210,6.804,1211,3.082,1212,3.082,1213,4.932,1214,4.932,1215,3.082,1216,1.467,1217,3.082,1218,1.897,1219,1.897,1220,3.894,1221,1.897,1222,3.894,1223,1.897,1224,1.897,1225,1.897,1226,6.31,1227,3.894,1228,1.897,1229,1.897,1230,1.897,1231,1.897,1232,1.897,1233,1.897,1234,1.897,1235,1.897,1236,1.897,1237,1.897,1238,1.897,1239,1.897,1240,1.897,1241,1.897,1242,1.897,1243,1.897,1244,3.082,1245,3.894,1246,1.897,1247,3.082,1248,1.897,1249,1.897,1250,1.897,1251,1.897,1252,1.897,1253,1.897,1254,1.897,1255,1.897,1256,5.285,1257,1.897,1258,1.897,1259,3.082,1260,3.082,1261,3.082,1262,1.897,1263,1.897,1264,1.897,1265,5.285,1266,1.897,1267,1.897,1268,1.897,1269,3.082,1270,1.897,1271,3.082,1272,1.897,1273,1.897,1274,1.897,1275,3.082,1276,3.082,1277,1.897,1278,1.637,1279,1.637,1280,1.897,1281,4.932,1282,1.897,1283,3.894,1284,1.897,1285,1.897,1286,3.082,1287,1.897,1288,4.932,1289,4.484,1290,3.082,1291,3.894,1292,1.897,1293,1.897,1294,1.897,1295,1.897,1296,1.897,1297,1.897,1298,1.897,1299,1.897,1300,1.897,1301,1.897,1302,4.484,1303,3.082,1304,1.897,1305,1.897,1306,1.897,1307,1.897,1308,1.897,1309,3.082,1310,3.082,1311,1.897,1312,1.897,1313,1.897,1314,1.897,1315,1.897,1316,1.897,1317,1.897,1318,1.897,1319,1.897,1320,1.897,1321,1.637,1322,1.897,1323,1.897,1324,1.897,1325,1.897,1326,1.897,1327,1.897,1328,1.897,1329,1.897,1330,1.897,1331,1.897,1332,1.897,1333,1.897,1334,1.897,1335,3.467,1336,4.484,1337,3.082,1338,3.082,1339,3.082]],["title/components/ModifyRequestComponent.html",[0,0.242,251,0.869]],["body/components/ModifyRequestComponent.html",[0,0.411,1,0.665,2,0.073,3,0.073,4,0.826,5,0.826,6,0.826,7,0.114,8,3.67,13,1.887,16,1.365,20,0.248,22,1.236,27,1.298,28,2.356,29,0.826,30,2.123,31,1.211,33,1.211,35,0.087,36,0.214,37,2.043,39,2.627,40,2.503,41,1.518,45,1.315,50,1.064,52,2.868,53,3.303,55,1.738,58,1.798,59,2.144,61,1.902,62,1.798,64,1.373,65,0.017,66,0.222,67,0.176,68,1.16,70,4.045,73,1.236,76,1.874,77,1.512,82,1.236,83,1.236,86,1.125,91,2.086,92,1.365,93,1.32,94,0.227,97,2.36,101,0.686,104,0.409,105,2.356,106,0.795,108,1.46,109,0.665,116,0.983,118,3.979,119,1.957,120,1.957,121,1.236,122,1.365,124,0.158,125,1.365,126,1.365,129,2.252,132,0.675,145,0.073,146,0.695,147,1.708,152,2.368,160,1.708,161,1.298,162,1.708,163,1.708,164,1.708,165,2.045,171,1.963,172,1.721,173,1.365,174,1.667,176,0.194,177,1.957,178,1.438,179,1.438,193,2.118,195,1.236,196,1.823,198,1.957,209,0.758,210,1.211,211,1.16,212,1.211,213,0.826,215,0.826,216,0.665,217,0.826,218,0.665,219,0.826,220,0.695,221,1.373,222,0.826,223,0.695,224,0.791,225,1.211,226,0.665,227,0.826,228,0.695,229,0.826,230,0.665,231,0.826,232,0.665,233,0.826,234,0.695,235,0.826,236,0.665,237,0.826,238,0.695,239,0.726,240,0.826,241,0.665,242,0.726,243,0.826,244,0.695,245,0.826,246,1.373,247,1.211,248,0.695,249,1.782,250,0.826,251,1.206,252,0.826,253,0.665,254,0.826,255,1.018,256,0.726,257,0.826,258,0.695,259,0.826,260,0.695,261,0.826,262,0.695,263,0.826,264,0.695,265,0.826,266,0.695,267,0.791,268,0.826,269,0.009,270,0.009,276,0.531,311,1.141,313,0.968,314,0.968,337,1.236,341,1.236,348,2.107,411,2.634,412,1.518,415,1.518,427,2.963,438,1.957,441,2.118,451,1.708,452,2.118,453,2.118,454,2.118,455,2.868,517,1.957,518,1.708,550,1.608,658,4.407,659,4.407,661,5.12,680,2.634,762,2.118,772,2.118,788,2.788,799,1.708,899,2.32,905,2.32,906,2.32,942,2.868,983,2.32,1024,4.306,1036,1.518,1070,3.473,1125,2.32,1208,4.43,1216,2.32,1335,3.399,1340,2.32,1341,4.396,1342,3,1343,3,1344,4.492,1345,5.265,1346,4.946,1347,3.795,1348,4.946,1349,4.396,1350,3,1351,3.399,1352,3,1353,3,1354,3,1355,3,1356,3,1357,3,1358,3,1359,3,1360,3,1361,2.59,1362,3.795,1363,2.59,1364,2.118,1365,2.59,1366,2.59,1367,3.795,1368,2.59,1369,3.795,1370,2.59,1371,4.024,1372,3.795,1373,4.43,1374,3.795,1375,6.314,1376,4.716,1377,4.716,1378,5.222,1379,4.929,1380,2.59,1381,4.024,1382,2.32,1383,3.399,1384,2.32,1385,2.32,1386,2.59,1387,2.59,1388,4.492,1389,2.59,1390,2.59,1391,2.59,1392,2.59,1393,2.59,1394,2.59,1395,2.59,1396,2.59,1397,2.59,1398,2.59,1399,2.59,1400,2.59,1401,2.59,1402,3.795,1403,3.795,1404,3.795,1405,3.795,1406,4.396,1407,3.795]],["title/components/MyAbsencesComponent.html",[0,0.242,253,0.832]],["body/components/MyAbsencesComponent.html",[0,0.427,1,0.675,2,0.074,3,0.074,4,0.839,5,0.839,6,0.839,7,0.139,8,3.646,12,0.915,13,1.76,15,4.955,17,2.531,20,0.252,22,1.255,29,0.839,30,2.126,31,1.224,33,1.224,35,0.089,36,0.217,37,2.096,41,1.541,45,1.551,50,1.076,53,3.172,54,1.746,55,1.723,58,2.17,62,1.395,64,1.173,65,0.017,66,0.224,67,0.162,68,1.173,76,1.82,77,1.173,83,2.641,86,1.143,91,1.66,92,2.626,94,0.336,95,1.092,96,1.044,97,1.881,106,1.038,108,1.467,109,0.675,122,1.386,123,0.956,125,1.386,126,1.386,145,0.074,146,0.706,147,2.531,165,2.268,171,1.799,172,1.925,174,1.701,176,0.178,178,1.46,179,1.46,192,2.921,195,2.163,209,0.77,210,1.224,211,1.173,212,1.224,213,0.839,215,0.839,216,0.675,217,0.839,218,0.675,219,0.839,220,0.706,221,1.385,222,0.839,223,0.706,224,0.803,225,1.224,226,0.675,227,0.839,228,0.706,229,0.839,230,0.675,231,0.839,232,0.675,233,0.839,234,0.706,235,0.839,236,0.675,237,0.839,238,0.706,239,0.737,240,0.839,241,0.675,242,0.737,243,0.839,244,0.706,245,0.839,246,1.385,247,1.224,248,0.706,249,1.173,250,0.839,251,0.706,252,0.839,253,1.28,254,0.839,255,0.706,256,0.737,257,0.839,258,0.706,259,0.839,260,0.706,261,0.839,262,0.706,263,0.839,264,0.706,265,0.839,266,0.706,267,0.803,268,0.839,269,0.009,270,0.009,276,0.602,311,1.239,313,1.083,314,1.146,337,1.832,341,1.832,348,2.942,362,3.434,384,3.289,392,1.734,408,1.851,409,1.541,411,1.541,412,1.541,415,1.541,439,3.437,550,2.382,556,2.988,612,2.355,658,4.377,659,4.377,680,3.349,717,2.629,787,2.15,788,2.813,798,2.15,799,3.286,808,3.138,852,2.382,877,1.851,926,2.382,942,2.9,951,3.138,1016,2.629,1024,3.138,1036,2.25,1037,3.837,1038,4.982,1041,3.837,1042,3.837,1046,3.837,1070,3.648,1097,2.701,1100,3.437,1157,3.138,1279,5.298,1321,2.629,1344,4.982,1345,6.068,1347,3.837,1351,3.437,1364,3.138,1371,4.462,1373,4.955,1376,3.437,1377,3.437,1378,4.745,1379,4.462,1381,4.059,1382,2.355,1384,3.437,1385,3.437,1403,3.837,1404,3.837,1405,3.837,1408,2.629,1409,4.445,1410,4.445,1411,5.77,1412,5.77,1413,2.629,1414,4.445,1415,3.045,1416,4.445,1417,3.045,1418,4.445,1419,3.045,1420,4.982,1421,4.445,1422,4.445,1423,6.616,1424,3.045,1425,4.531,1426,4.445,1427,4.445,1428,3.045,1429,3.045,1430,3.045,1431,3.045,1432,3.045,1433,3.045,1434,3.045,1435,3.045,1436,3.045,1437,3.045,1438,3.045,1439,3.045,1440,3.045,1441,3.045,1442,2.355,1443,3.045,1444,3.045,1445,3.045,1446,3.045,1447,3.045,1448,4.445,1449,3.045,1450,3.045,1451,3.045,1452,2.629,1453,4.445,1454,4.445,1455,4.445,1456,4.445,1457,4.445,1458,4.445,1459,4.445,1460,4.445,1461,4.445,1462,4.445,1463,4.445,1464,4.445,1465,4.445,1466,4.445,1467,4.445]],["title/components/MyAbsencesListComponent.html",[0,0.242,255,0.869]],["body/components/MyAbsencesListComponent.html",[0,0.406,1,0.64,2,0.071,3,0.071,4,0.795,5,0.795,6,0.795,7,0.111,8,3.606,13,1.884,16,1.313,17,2.432,20,0.246,22,1.189,27,1.848,28,2.726,29,0.795,30,2.115,31,1.177,33,1.177,35,0.084,36,0.208,37,2.001,39,2.317,40,3.579,45,1.285,48,3.091,49,3.688,50,1.034,51,2.491,52,4.1,53,3.27,55,1.703,58,1.764,59,2.474,61,1.848,62,1.883,64,1.483,65,0.017,66,0.233,67,0.154,68,1.342,73,1.189,76,1.874,77,1.342,82,1.189,83,1.189,86,1.082,91,2.049,92,1.313,93,0.867,95,1.034,96,0.989,97,2.331,101,0.791,104,0.523,105,2.726,106,0.78,108,1.442,109,0.64,116,0.946,118,1.882,119,1.882,120,1.882,121,1.189,122,1.313,124,0.152,125,1.313,126,1.313,129,2.201,132,0.781,145,0.071,146,0.668,147,1.643,152,2.86,160,1.643,161,1.249,162,1.643,163,1.643,164,1.643,165,1.999,171,1.927,172,1.689,173,1.313,174,1.651,176,0.191,177,1.882,178,1.383,179,1.383,187,2.037,188,2.037,190,2.037,191,3.591,192,3.038,193,2.037,195,1.189,196,1.753,198,1.882,205,3.668,206,4.058,207,2.596,208,3.303,209,0.729,210,1.177,211,1.127,212,1.177,213,0.795,215,0.795,216,0.64,217,0.795,218,0.64,219,0.795,220,0.668,221,1.342,222,0.795,223,0.668,224,0.761,225,1.177,226,0.64,227,0.795,228,0.668,229,0.795,230,0.64,231,0.795,232,0.64,233,0.795,234,0.668,235,0.795,236,0.64,237,0.795,238,0.668,239,0.698,240,0.795,241,0.64,242,0.698,243,0.795,244,0.668,245,0.795,246,1.342,247,1.177,248,0.668,249,1.584,250,0.795,251,0.668,252,0.795,253,0.64,254,0.795,255,1.303,256,0.698,257,0.795,258,0.668,259,0.795,260,0.668,261,0.795,262,0.668,263,0.795,264,0.668,265,0.795,266,0.668,267,0.761,268,0.795,269,0.009,270,0.009,276,0.49,311,1.014,313,0.488,314,0.488,337,1.189,341,1.189,348,2.877,411,2.574,412,1.46,415,1.46,427,3.418,438,1.882,441,2.037,451,1.643,452,2.037,453,2.037,454,2.037,455,2.787,517,1.882,518,1.643,550,1.546,658,4.329,659,4.329,661,5.03,680,2.574,762,3.016,788,2.726,799,1.643,802,4.642,899,4.348,900,3.303,905,2.231,906,2.231,908,2.491,926,2.289,927,3.303,928,2.596,929,3.016,930,3.688,931,4.854,932,3.688,933,3.303,934,3.688,935,4.348,936,4.348,937,3.97,938,3.303,939,3.303,940,3.688,941,3.303,942,2.787,983,2.231,1024,3.591,1036,2.574,1070,2.432,1097,2.596,1125,2.231,1335,3.303,1340,2.231,1346,2.491,1348,2.491,1351,2.231,1361,3.688,1362,5.182,1363,4.854,1364,2.037,1365,2.491,1366,2.491,1367,3.688,1368,2.491,1369,3.688,1370,2.491,1371,3.933,1372,3.688,1373,4.348,1374,3.688,1375,6.27,1376,3.933,1377,3.933,1378,5.165,1379,4.86,1380,2.491,1381,3.933,1382,2.231,1383,3.303,1384,2.231,1385,2.231,1386,2.491,1387,2.491,1388,2.491,1389,2.491,1390,2.491,1391,2.491,1392,2.491,1393,2.491,1394,2.491,1395,2.491,1396,2.491,1397,2.491,1398,2.491,1399,2.491,1400,2.491,1401,2.491,1407,3.688,1468,4.272,1469,2.885,1470,2.885,1471,2.885,1472,2.885,1473,2.885,1474,2.885,1475,2.885,1476,2.885,1477,2.885,1478,2.885]],["title/interfaces/MySurveyType.html",[124,0.197,286,0.604]],["body/interfaces/MySurveyType.html",[2,0.102,3,0.102,7,0.083,20,0.141,35,0.121,36,0.27,65,0.017,66,0.267,67,0.135,94,0.594,101,0.728,104,0.736,106,0.767,124,0.42,132,0.639,145,0.195,176,0.233,269,0.012,270,0.012,271,0.737,272,0.772,273,1.2,274,0.808,275,1.26,276,0.7,277,0.67,278,1.048,279,0.703,280,0.608,281,0.703,282,0.737,283,0.639,284,0.703,285,0.703,286,1,287,1.335,288,0.703,289,0.768,290,0.703,291,0.907,292,0.703,293,0.608,294,0.861,295,0.906,296,1,297,1.048,298,0.703,299,1.025,300,0.979,301,1.056,302,0.808,303,0.808,304,0.808,305,0.772,306,0.772,307,0.808,308,0.703,309,0.737,310,1.218,311,0.703,312,0.808,313,0.703,314,0.703,315,0.608,316,0.67,317,0.703,318,0.934,319,0.737,320,0.703,321,0.703,322,0.772,323,0.934,324,0.703,325,0.703,326,0.67,327,0.703,328,0.979,329,0.89,330,0.848,331,0.737,332,0.808,333,0.67,334,0.737]],["title/interfaces/MySurveysResponseType.html",[124,0.197,288,0.634]],["body/interfaces/MySurveysResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,1.06,287,1.064,288,0.926,289,0.816,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/interfaces/PercentualAnswerResponseType.html",[124,0.197,298,0.634]],["body/interfaces/PercentualAnswerResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.735,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.926,299,1.271,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/interfaces/PercentualAnswerType.html",[124,0.197,300,0.664]],["body/interfaces/PercentualAnswerType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.151,94,0.593,101,0.725,104,0.736,106,0.764,124,0.419,132,0.635,145,0.195,176,0.233,269,0.012,270,0.012,271,0.732,272,0.767,273,1.2,274,0.803,275,1.259,276,0.701,277,0.666,278,1.193,279,0.699,280,0.604,281,0.699,282,0.732,283,0.635,284,0.699,285,0.699,286,0.887,287,1.068,288,0.699,289,0.767,290,0.699,291,0.905,292,0.699,293,0.604,294,0.858,295,0.903,296,0.996,297,1.045,298,0.699,299,1.273,300,1.095,301,1.054,302,0.803,303,0.803,304,0.803,305,0.767,306,0.767,307,0.803,308,0.699,309,0.732,310,1.216,311,0.699,312,0.803,313,0.699,314,0.699,315,0.604,316,0.666,317,0.699,318,0.93,319,0.732,320,0.699,321,0.699,322,0.767,323,0.93,324,0.699,325,0.699,326,0.666,327,0.699,328,0.975,329,0.887,330,0.845,331,0.732,332,0.803,333,0.666,334,0.732]],["title/interfaces/QuestionsResponseType.html",[124,0.197,293,0.548]],["body/interfaces/QuestionsResponseType.html",[2,0.099,3,0.099,7,0.081,20,0.138,35,0.118,36,0.265,65,0.017,66,0.265,67,0.172,94,0.595,101,0.717,104,0.732,106,0.755,124,0.419,132,0.624,145,0.194,176,0.232,269,0.012,270,0.012,271,0.72,272,0.754,273,1.206,274,0.789,275,1.266,276,0.7,277,0.655,278,1.036,279,0.687,280,0.594,281,0.687,282,0.72,283,0.624,284,0.687,285,0.687,286,0.877,287,1.056,288,0.687,289,0.814,290,0.687,291,0.9,292,0.687,293,0.795,294,0.975,295,0.997,296,1.1,297,1.187,298,0.687,299,1.009,300,0.964,301,1.048,302,0.789,303,0.789,304,0.789,305,0.754,306,0.754,307,0.789,308,0.687,309,0.72,310,1.209,311,0.687,312,0.789,313,0.687,314,0.687,315,0.594,316,0.655,317,0.687,318,0.919,319,0.72,320,0.687,321,0.687,322,0.754,323,0.919,324,0.687,325,0.687,326,0.655,327,0.687,328,0.964,329,0.877,330,0.835,331,0.72,332,0.789,333,0.655,334,0.72]],["title/interfaces/QuestionsType.html",[124,0.197,295,0.548]],["body/interfaces/QuestionsType.html",[2,0.095,3,0.095,7,0.077,20,0.132,35,0.113,36,0.258,65,0.017,66,0.261,67,0.188,94,0.595,101,0.696,104,0.737,106,0.733,124,0.418,132,0.597,145,0.194,176,0.228,269,0.011,270,0.011,271,0.689,272,0.722,273,1.192,274,0.755,275,1.251,276,0.702,277,0.627,278,1.172,279,0.657,280,0.568,281,0.657,282,0.689,283,0.597,284,0.657,285,0.657,286,0.851,287,1.305,288,0.657,289,0.751,290,0.657,291,0.886,292,0.657,293,0.568,294,0.963,295,0.939,296,0.966,297,1.172,298,0.657,299,0.98,300,1.139,301,1.108,302,1.248,303,1.248,304,1.248,305,1.193,306,1.193,307,1.248,308,0.657,309,0.689,310,1.191,311,0.657,312,0.755,313,0.657,314,0.657,315,0.568,316,0.627,317,0.657,318,0.893,319,0.689,320,0.657,321,0.657,322,0.722,323,0.893,324,0.657,325,0.657,326,0.627,327,0.657,328,0.935,329,0.851,330,0.811,331,0.689,332,0.755,333,0.627,334,0.689]],["title/interfaces/RegisterResponseType.html",[124,0.197,308,0.634]],["body/interfaces/RegisterResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.151,94,0.596,101,0.725,104,0.733,106,0.764,124,0.419,132,0.635,145,0.195,176,0.233,269,0.012,270,0.012,271,0.732,272,0.767,273,1.208,274,0.803,275,1.268,276,0.701,277,0.666,278,1.045,279,0.699,280,0.604,281,0.699,282,0.732,283,0.635,284,0.699,285,0.699,286,0.887,287,1.068,288,0.699,289,0.767,290,0.699,291,0.905,292,0.699,293,0.604,294,0.858,295,0.903,296,0.996,297,1.045,298,0.699,299,1.021,300,0.975,301,1.054,302,0.803,303,0.803,304,0.803,305,0.767,306,0.767,307,0.803,308,0.93,309,0.732,310,1.216,311,0.699,312,0.803,313,0.699,314,0.699,315,0.604,316,0.666,317,0.699,318,0.93,319,0.732,320,0.699,321,0.699,322,0.767,323,0.93,324,0.699,325,0.699,326,0.666,327,0.699,328,0.975,329,0.887,330,0.845,331,0.732,332,0.803,333,0.666,334,0.732]],["title/components/RequestDetailsComponent.html",[0,0.242,258,0.869]],["body/components/RequestDetailsComponent.html",[0,0.422,1,0.958,2,0.106,3,0.072,4,0.806,5,0.806,6,0.806,7,0.102,8,3.466,9,4.161,10,4.161,11,2.067,12,0.879,13,1.709,14,4.075,15,4.886,16,2.334,17,2.458,18,3.049,19,3.049,20,0.261,21,1.667,22,1.207,23,1.667,24,2.624,25,2.527,26,2.527,27,1.267,28,2.314,29,0.806,30,2.118,31,1.189,32,2.527,33,1.189,34,2.527,35,0.085,36,0.211,37,1.945,38,2.527,39,2.604,40,3.224,41,3.056,42,2.264,43,2.527,44,2.527,45,1.526,46,2.527,47,2.527,50,1.241,52,2.817,53,2.459,54,1.806,55,1.623,57,1.91,58,1.355,59,2.334,60,2.264,61,2.22,62,2.216,63,2.527,64,1.353,65,0.017,66,0.253,67,0.167,68,1.353,70,3.998,72,2.264,73,2.604,74,2.527,75,2.527,76,1.784,77,1.353,79,1.91,80,1.779,81,4.888,82,1.207,83,1.207,86,1.098,89,2.314,90,2.527,91,2.076,92,2.334,93,1.541,94,0.221,96,1.003,97,2.03,101,0.676,104,0.272,105,3.034,106,1.002,108,1.518,109,0.649,110,2.527,111,2.527,112,2.527,113,2.527,114,2.527,115,2.527,116,0.96,117,2.527,118,3.939,119,1.91,120,1.91,121,1.207,122,1.332,123,0.918,124,0.154,125,1.332,126,1.332,127,4.263,128,3.967,129,2.45,130,5.213,131,2.067,132,1.097,133,1.779,134,3.967,135,3.967,136,2.264,137,3.967,138,2.264,139,3.967,140,2.264,141,2.264,142,3.967,143,2.264,144,2.264,145,0.072,146,1.189,147,2.921,148,1.779,149,1.91,150,1.91,151,1.482,152,1.965,153,2.527,154,2.264,155,2.527,156,2.264,157,2.527,158,2.264,159,2.527,160,1.667,161,1.267,162,1.667,163,1.667,164,1.667,165,1.151,166,2.527,167,3.728,168,2.527,169,4.429,170,2.527,171,1.48,172,0.879,173,2.973,174,1.657,175,2.527,176,0.222,177,1.91,178,1.403,179,1.403,180,2.624,181,3.728,182,5.455,183,2.527,184,2.264,185,2.264,186,3.339,187,3.049,188,3.049,189,2.817,190,3.049,191,3.049,192,3.198,193,3.049,194,3.728,195,1.779,196,3.441,197,2.624,198,1.91,205,3.694,206,3.839,209,0.74,210,1.189,211,1.139,212,1.189,213,0.806,215,0.806,216,0.649,217,0.806,218,0.649,219,0.806,220,0.678,221,1.353,222,0.806,223,0.678,224,0.772,225,1.189,226,0.649,227,0.806,228,0.678,229,0.806,230,0.649,231,0.806,232,0.649,233,0.806,234,0.678,235,0.806,236,0.649,237,0.806,238,0.678,239,0.708,240,0.806,241,0.649,242,0.708,243,0.806,244,0.678,245,0.806,246,1.353,247,1.189,248,0.678,249,1.139,250,0.806,251,0.678,252,0.806,253,0.649,254,0.806,255,0.678,256,0.708,257,0.806,258,1.189,259,0.806,260,0.678,261,0.806,262,0.678,263,0.806,264,0.678,265,0.806,266,0.678,267,0.772,268,0.806,269,0.009,270,0.009,276,0.447,341,1.207,348,2.459,427,2.458,556,2.458,772,2.067,900,3.339,933,3.339,935,4.379,936,4.379,937,3.998,938,3.339,939,3.339,941,3.339,942,2.817,1208,4.379,1216,2.264,1402,3.728,1479,4.318,1480,2.927,1481,2.927,1482,4.318,1483,4.318,1484,2.927,1485,2.927,1486,2.927,1487,2.927,1488,2.927,1489,2.927,1490,4.318,1491,4.318,1492,4.318,1493,4.318,1494,4.318,1495,4.318]],["title/interfaces/RequestType.html",[101,0.494,124,0.197]],["body/interfaces/RequestType.html",[2,0.098,3,0.098,7,0.079,20,0.136,35,0.117,36,0.263,65,0.017,66,0.263,67,0.178,94,0.592,101,0.802,104,0.738,106,0.971,124,0.419,132,0.999,145,0.194,176,0.23,269,0.011,270,0.011,271,0.71,272,0.744,273,1.196,274,0.778,275,1.255,276,0.7,277,0.646,278,1.029,279,0.678,280,0.586,281,0.678,282,0.71,283,0.615,284,0.678,285,0.678,286,0.868,287,1.046,288,0.678,289,0.759,290,0.678,291,0.895,292,0.678,293,0.586,294,0.845,295,0.889,296,0.981,297,1.029,298,0.678,299,1,300,0.955,301,1.115,302,0.778,303,0.778,304,0.778,305,0.744,306,0.744,307,0.778,308,0.678,309,0.71,310,1.287,311,1.1,312,1.264,313,1.1,314,1.1,315,0.586,316,0.646,317,0.678,318,0.911,319,0.71,320,0.678,321,0.678,322,0.744,323,0.911,324,0.678,325,0.678,326,0.646,327,0.678,328,0.955,329,0.868,330,0.827,331,0.71,332,0.778,333,0.646,334,0.71]],["title/interfaces/RequestsResponseType.html",[124,0.197,309,0.664]],["body/interfaces/RequestsResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.223,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.867,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.97,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/injectables/RequestsSurveysService.html",[93,1.126,364,1.898]],["body/injectables/RequestsSurveysService.html",[0,0.183,2,0.069,3,0.069,7,0.056,12,0.852,20,0.234,22,1.169,23,3.935,35,0.083,36,0.206,37,1.932,39,2.575,45,1.679,50,1.349,54,1.893,55,1.718,57,3.638,58,2.346,59,2.298,61,3.159,62,2.085,64,1.792,65,0.017,66,0.231,67,0.162,68,1.573,76,1.857,77,1.648,79,2.752,80,1.724,82,1.739,86,1.583,91,1.861,93,1.675,95,1.512,96,2.519,97,1.512,104,0.468,108,1.474,109,0.629,116,0.93,123,0.89,124,0.149,125,1.291,126,1.291,129,2.876,131,2.003,145,0.069,146,0.657,152,1.291,160,3.175,162,2.402,163,3.175,164,2.402,165,1.658,172,1.267,174,1.442,176,0.171,178,3.255,179,1.36,189,2.752,195,2.298,249,1.113,269,0.009,270,0.009,273,1.02,275,0.457,276,0.602,286,0.457,288,0.479,289,0.821,292,0.942,293,0.414,294,1.005,295,0.414,296,0.457,315,0.414,316,0.457,320,0.479,333,0.811,334,1.224,335,4.36,341,2.298,348,2.857,350,3.263,362,3.348,364,2.135,368,3.642,370,4.312,372,2.261,376,2.564,378,2.752,384,2.699,385,4.693,408,1.724,409,1.436,411,1.436,412,1.436,415,3.017,416,4.4,417,4.336,418,4.632,419,4.693,420,4.693,421,3.562,422,3.638,423,3.937,424,3.937,429,3.638,436,3.937,437,3.638,444,2.194,450,1.521,464,3.638,482,2.979,505,4.831,517,2.752,680,3.162,770,4.336,771,4.075,848,1.616,849,4.208,850,3.556,851,2.003,862,3.263,872,2.979,874,2.402,883,2.194,884,2.194,1065,3.263,1278,4.814,1413,2.45,1496,2.45,1497,3.642,1498,4.219,1499,4.219,1500,5.577,1501,6.469,1502,5.577,1503,6.469,1504,4.219,1505,4.219,1506,5.577,1507,5.577,1508,4.219,1509,4.219,1510,4.219,1511,2.837,1512,2.837,1513,4.219,1514,2.837,1515,2.837,1516,2.837,1517,4.219,1518,2.837,1519,2.837,1520,2.837,1521,2.837,1522,2.837,1523,2.837,1524,4.219,1525,4.814,1526,2.837,1527,3.642,1528,4.219,1529,3.642,1530,4.814,1531,5.036,1532,3.642,1533,3.642,1534,2.837,1535,3.642,1536,2.837,1537,2.837,1538,5.036,1539,2.837,1540,4.219,1541,2.837,1542,4.219,1543,2.837]],["title/components/SidebarBodyComponent.html",[0,0.242,260,0.869]],["body/components/SidebarBodyComponent.html",[0,0.487,1,0.701,2,0.077,3,0.077,4,0.871,5,0.871,6,0.871,7,0.063,12,0.95,13,1.421,14,1.922,16,2.079,20,0.155,29,0.871,30,2.138,31,1.477,33,1.477,35,0.092,36,0.223,37,1.477,39,1.303,41,1.601,45,1.355,50,1.105,54,1.55,55,1.62,58,0.992,61,1.368,62,1.433,64,0.834,65,0.017,66,0.252,67,0.159,68,0.834,73,2.567,76,1.764,77,1.205,82,1.303,83,2.567,91,1.792,93,1.611,94,0.405,95,1.637,96,1.565,97,2.233,104,0.425,108,1.382,109,0.701,116,1.037,123,0.992,124,0.166,129,2.696,133,1.922,145,0.112,146,1.242,149,4.847,150,3.498,151,2.973,161,2.542,165,1.795,172,1.764,173,2.079,174,1.571,176,0.107,195,1.303,199,2.063,200,3.832,205,2.98,206,3.569,207,1.922,209,0.799,210,1.258,211,1.713,212,1.258,213,0.871,215,0.871,216,0.701,217,0.871,218,0.701,219,0.871,220,0.733,221,1.415,222,0.871,223,0.733,224,0.834,225,1.258,226,0.701,227,0.871,228,0.733,229,0.871,230,0.701,231,0.871,232,0.701,233,0.871,234,0.733,235,0.871,236,0.701,237,0.871,238,0.733,239,0.765,240,0.871,241,0.701,242,0.765,243,0.871,244,1.242,245,1.618,246,2.016,247,1.258,248,0.733,249,1.205,250,0.871,251,0.733,252,0.871,253,0.701,254,0.871,255,0.733,256,0.765,257,0.871,258,0.733,259,0.871,260,1.242,261,0.871,262,0.733,263,0.871,264,1.242,265,2.047,266,0.733,267,0.834,268,0.871,269,0.01,270,0.01,283,0.956,284,0.906,285,0.906,289,0.51,294,0.439,339,3.148,341,1.303,342,1.922,361,2.233,363,3.534,372,1.695,410,1.516,413,1.801,421,1.695,446,1.922,450,1.695,451,1.801,532,4.064,558,3.259,566,3.547,569,3.259,570,3.259,573,2.98,614,4.47,698,1.601,701,2.233,702,2.233,703,4.147,704,2.233,705,2.233,706,2.233,708,2.233,722,2.73,724,2.233,736,3.225,756,2.874,760,3.338,848,1.801,852,2.448,874,2.601,876,2.233,877,1.922,926,2.448,937,3.225,977,2.776,984,3.498,999,3.532,1000,4.164,1003,3.259,1007,2.063,1008,2.063,1011,3.944,1012,3.532,1018,3.225,1023,4.398,1036,2.714,1062,2.233,1077,2.063,1097,2.776,1137,4.838,1138,2.233,1139,2.445,1140,2.445,1141,3.532,1142,3.532,1143,2.445,1144,2.445,1145,2.445,1148,3.532,1150,2.445,1153,2.445,1156,2.445,1157,2.233,1158,3.532,1160,2.445,1161,3.786,1162,5.02,1163,2.445,1164,2.445,1166,4.147,1167,2.445,1168,2.445,1169,3.532,1170,2.445,1171,2.445,1172,2.445,1173,2.445,1174,3.532,1175,5.02,1176,2.445,1177,2.445,1178,4.147,1179,4.147,1180,2.233,1181,2.445,1182,2.445,1183,3.532,1184,3.532,1185,3.498,1186,4.147,1187,4.147,1188,2.445,1189,2.445,1190,2.445,1191,2.233,1192,3.532,1193,4.542,1194,4.542,1544,3.162,1545,3.162,1546,3.162,1547,6.982,1548,4.568,1549,4.568,1550,3.162,1551,3.162,1552,3.162,1553,3.162,1554,3.162,1555,3.162,1556,3.162,1557,3.162,1558,3.162,1559,3.162,1560,3.162,1561,3.162]],["title/components/SidebarComponent.html",[0,0.242,262,0.869]],["body/components/SidebarComponent.html",[0,0.487,1,1.062,2,0.117,3,0.117,4,1.319,5,1.319,6,1.319,7,0.095,13,1.465,20,0.205,29,1.319,30,2.204,31,1.667,33,1.667,35,0.139,41,2.424,45,1.529,50,1.606,55,1.687,58,1.502,65,0.017,66,0.235,67,0.148,76,1.21,77,1.263,83,2.964,94,0.362,108,1.062,109,1.062,129,2.872,145,0.117,146,1.109,161,2.619,174,1.687,176,0.162,209,1.21,210,1.667,211,1.597,212,1.667,213,1.319,215,1.319,216,1.062,217,1.319,218,1.062,219,1.319,220,1.402,221,1.751,222,1.319,223,1.109,224,1.263,225,1.667,226,1.062,227,1.319,228,1.109,229,1.319,230,1.062,231,1.319,232,1.062,233,1.319,234,1.109,235,1.319,236,1.062,237,1.319,238,1.109,239,1.159,240,1.319,241,1.062,242,1.159,243,1.319,244,1.109,245,1.319,246,2.009,247,1.667,248,1.109,249,1.597,250,1.319,251,1.109,252,1.319,253,1.062,254,1.319,255,1.109,256,1.159,257,1.319,258,1.109,259,1.319,260,1.109,261,1.319,262,1.615,263,1.319,264,1.109,265,1.319,266,1.109,267,1.263,268,1.319,269,0.013,270,0.013,542,4.68,544,5.392,558,4.033,560,4.134,566,3.97,756,2.566,760,3.556,1000,4.463,1003,4.033,1007,3.124,1008,3.124,1562,4.134,1563,6.052,1564,6.052,1565,6.052,1566,4.788,1567,4.788,1568,6.052,1569,4.788]],["title/components/SidebarMenuItem.html",[0,0.242,264,0.869]],["body/components/SidebarMenuItem.html",[0,0.48,1,0.74,2,0.082,3,0.082,4,0.92,5,0.92,6,0.92,7,0.066,12,1.003,13,1.457,14,2.029,16,2.161,20,0.161,29,0.92,30,2.149,31,1.523,33,1.523,35,0.097,36,0.232,37,0.92,39,1.376,41,1.69,45,1.521,50,0.808,54,0.881,55,1.6,58,1.048,62,1.048,64,0.881,65,0.017,66,0.256,67,0.147,68,0.881,73,2.725,76,1.787,77,0.881,82,1.376,83,2.622,91,1.59,93,1.003,94,0.481,95,1.197,96,1.144,97,2.28,108,1.411,109,0.74,116,1.095,123,1.048,124,0.176,129,2.392,133,2.029,145,0.116,146,1.281,149,4.915,150,4.437,151,3.048,161,2.055,165,2.172,172,1.911,173,2.161,174,1.6,176,0.113,195,1.957,199,2.178,200,3.928,207,2.029,209,0.844,210,1.308,211,1.794,212,1.308,213,0.92,215,0.92,216,0.74,217,0.92,218,0.74,219,0.92,220,0.774,221,1.458,222,0.92,223,0.774,224,0.881,225,1.308,226,0.74,227,0.92,228,0.774,229,0.92,230,0.74,231,0.92,232,0.74,233,0.92,234,0.774,235,0.92,236,0.74,237,0.92,238,0.774,239,0.808,240,0.92,241,0.74,242,0.808,243,0.92,244,1.1,245,1.659,246,2.022,247,1.308,248,0.774,249,1.253,250,0.92,251,0.774,252,0.92,253,0.74,254,0.92,255,0.774,256,0.808,257,0.92,258,0.774,259,0.92,260,0.774,261,0.92,262,0.774,263,0.92,264,1.395,265,2.086,266,0.774,267,0.881,268,0.92,269,0.01,270,0.01,283,0.924,284,0.934,285,0.934,289,0.53,294,0.463,339,3.409,342,2.886,363,3.519,372,2.545,410,1.6,413,2.704,446,2.029,450,1.789,451,1.901,532,4.15,558,3.359,566,3.147,569,3.359,570,3.359,573,3.098,614,4.437,698,2.404,701,2.357,702,2.357,704,2.357,705,2.357,706,2.357,708,2.357,724,2.357,736,2.357,756,2.545,760,2.962,848,1.901,852,1.789,874,1.901,876,2.357,877,2.029,901,2.882,926,2.545,977,2.886,984,3.606,1000,4.017,1003,3.359,1007,2.178,1008,2.178,1018,3.353,1023,4.492,1036,2.798,1062,2.357,1077,2.178,1097,2.886,1137,4.802,1138,2.357,1139,2.582,1140,2.582,1141,4.274,1142,4.274,1143,2.582,1144,4.656,1145,2.582,1148,3.673,1150,2.582,1153,2.582,1156,2.582,1157,2.357,1158,3.673,1160,2.582,1161,3.903,1162,5.112,1163,2.582,1164,2.582,1166,4.656,1167,2.582,1168,2.582,1169,3.673,1170,2.582,1171,2.582,1172,2.582,1173,2.582,1174,3.673,1175,5.112,1176,2.582,1177,2.582,1178,4.274,1179,4.274,1180,3.353,1181,4.656,1182,2.582,1183,2.582,1184,2.582,1185,3.098,1186,4.274,1187,4.274,1188,2.582,1189,2.582,1190,2.582,1191,2.357,1192,2.582,1193,2.582,1194,2.582,1196,4.1,1570,4.749,1571,3.339,1572,3.339,1573,3.339,1574,3.339,1575,4.749]],["title/interfaces/SuccessResponseType.html",[124,0.197,315,0.548]],["body/interfaces/SuccessResponseType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.151,94,0.596,101,0.725,104,0.733,106,0.764,124,0.419,132,0.635,145,0.195,176,0.233,269,0.012,270,0.012,271,0.732,272,0.767,273,1.208,274,0.803,275,1.268,276,0.701,277,0.666,278,1.045,279,0.699,280,0.604,281,0.699,282,0.732,283,0.635,284,0.699,285,0.699,286,0.887,287,1.068,288,0.699,289,0.767,290,0.699,291,0.905,292,0.699,293,0.604,294,0.858,295,0.903,296,0.996,297,1.045,298,0.699,299,1.021,300,0.975,301,1.054,302,0.803,303,0.803,304,0.803,305,0.767,306,0.767,307,0.803,308,0.699,309,0.732,310,1.216,311,0.699,312,0.803,313,0.699,314,0.699,315,0.804,316,0.666,317,0.699,318,0.93,319,0.732,320,0.699,321,0.699,322,0.767,323,0.93,324,0.699,325,0.699,326,0.666,327,0.699,328,0.975,329,0.887,330,0.845,331,0.732,332,0.803,333,0.666,334,0.732]],["title/interfaces/SupervisionType.html",[124,0.197,323,0.634]],["body/interfaces/SupervisionType.html",[2,0.101,3,0.101,7,0.082,20,0.14,35,0.12,36,0.268,65,0.017,66,0.266,67,0.151,94,0.593,101,0.725,104,0.738,106,0.764,124,0.419,132,0.635,145,0.195,176,0.233,269,0.012,270,0.012,271,0.732,272,0.767,273,1.2,274,0.803,275,1.259,276,0.7,277,0.666,278,1.045,279,0.699,280,0.604,281,0.699,282,0.732,283,0.635,284,0.699,285,0.699,286,0.887,287,1.068,288,0.699,289,0.767,290,0.699,291,0.905,292,0.699,293,0.604,294,0.858,295,0.903,296,0.996,297,1.045,298,0.699,299,1.021,300,0.975,301,1.054,302,0.803,303,0.803,304,0.803,305,0.767,306,0.767,307,0.803,308,0.699,309,0.732,310,1.296,311,0.699,312,0.803,313,0.699,314,0.699,315,0.604,316,0.666,317,0.699,318,0.93,319,0.732,320,0.699,321,0.699,322,0.767,323,1.045,324,1.114,325,0.699,326,0.666,327,0.699,328,0.975,329,0.887,330,0.845,331,0.732,332,0.803,333,0.666,334,0.732]],["title/interfaces/SupervisionsResponseType.html",[124,0.197,321,0.634]],["body/interfaces/SupervisionsResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.926,322,1.22,323,1.111,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/interfaces/SurveyAdminResponseType.html",[124,0.197,317,0.634]],["body/interfaces/SurveyAdminResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.816,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.926,318,1.111,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/interfaces/SurveyAdminType.html",[124,0.197,318,0.634]],["body/interfaces/SurveyAdminType.html",[2,0.098,3,0.098,7,0.079,20,0.136,35,0.117,36,0.263,65,0.017,66,0.282,67,0.178,94,0.592,101,0.71,104,0.74,106,0.748,124,0.419,132,0.615,145,0.194,176,0.246,269,0.011,270,0.011,271,0.71,272,0.744,273,1.196,274,0.778,275,1.255,276,0.7,277,0.646,278,1.029,279,0.678,280,0.586,281,0.678,282,0.71,283,0.615,284,0.678,285,0.678,286,0.868,287,1.046,288,0.678,289,0.759,290,0.678,291,0.942,292,0.678,293,0.586,294,0.971,295,0.992,296,0.981,297,1.182,298,0.678,299,1,300,0.955,301,1.115,302,0.778,303,0.778,304,0.778,305,0.744,306,0.744,307,0.778,308,0.678,309,0.71,310,1.287,311,0.678,312,0.778,313,0.678,314,0.678,315,0.586,316,0.646,317,0.678,318,1.029,319,1.153,320,0.678,321,0.678,322,0.744,323,0.911,324,0.678,325,0.678,326,0.646,327,0.678,328,0.955,329,0.868,330,0.827,331,0.71,332,0.778,333,0.646,334,0.71]],["title/interfaces/SurveyCreationResponseType.html",[124,0.197,316,0.604]],["body/interfaces/SurveyCreationResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.735,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.816,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.883,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/interfaces/SurveyType.html",[124,0.197,296,0.604]],["body/interfaces/SurveyType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.283,67,0.161,94,0.593,101,0.722,104,0.737,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.199,274,0.798,275,1.258,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,1.06,297,1.042,298,0.694,299,1.016,300,0.97,301,1.122,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.294,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/interfaces/SurveysResponseType.html",[124,0.197,320,0.634]],["body/interfaces/SurveysResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.816,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,1.104,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.926,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/interfaces/TableUserType.html",[124,0.197,331,0.664]],["body/interfaces/TableUserType.html",[2,0.1,3,0.1,7,0.081,20,0.138,35,0.119,36,0.266,65,0.017,66,0.283,67,0.167,94,0.593,101,0.719,104,0.735,106,0.758,124,0.419,132,0.627,145,0.194,176,0.232,269,0.012,270,0.012,271,0.723,272,0.757,273,1.198,274,0.793,275,1.258,276,0.701,277,0.658,278,1.039,279,0.69,280,0.596,281,0.69,282,0.723,283,0.627,284,0.69,285,0.69,286,0.879,287,1.059,288,0.69,289,0.764,290,0.69,291,0.901,292,0.69,293,0.596,294,0.853,295,0.898,296,0.99,297,1.039,298,0.69,299,1.012,300,0.966,301,1.049,302,0.793,303,0.793,304,0.793,305,0.757,306,0.757,307,0.793,308,0.69,309,0.723,310,1.211,311,0.69,312,0.793,313,0.69,314,0.69,315,0.596,316,0.658,317,0.69,318,0.922,319,0.723,320,0.69,321,0.69,322,0.757,323,0.922,324,0.69,325,0.69,326,0.658,327,0.69,328,0.966,329,1.102,330,1.049,331,0.966,332,1.273,333,0.658,334,0.723]],["title/interfaces/UserResponseType.html",[124,0.197,325,0.634]],["body/interfaces/UserResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.248,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.948,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.926,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/injectables/UserService.html",[54,0.989,93,1.126]],["body/injectables/UserService.html",[0,0.291,2,0.148,3,0.058,7,0.047,12,0.71,20,0.206,21,1.346,22,1.514,23,3.131,27,1.023,35,0.069,36,0.179,37,2.026,39,2.909,45,1.471,48,1.437,50,1.229,54,0.969,55,1.817,57,2.396,58,2.214,59,1.856,61,3.148,62,2.214,64,1.535,65,0.017,66,0.264,67,0.167,68,1.535,73,1.514,76,1.876,77,1.602,79,2.396,80,1.437,82,2.398,86,1.905,91,1.747,92,1.076,93,1.353,94,0.384,95,1.971,96,2.394,97,1.971,108,1.462,109,0.524,116,0.775,121,0.974,124,0.124,125,3.143,126,1.076,129,2.379,145,0.058,146,0.548,151,1.859,152,1.076,160,2.091,162,2.091,163,2.091,164,2.091,165,1.996,171,0.81,172,1.652,173,1.076,174,0.889,176,0.266,178,1.761,179,1.133,180,2.737,189,2.396,195,2.266,196,3.815,224,0.624,239,1.737,242,1.229,269,0.008,270,0.008,273,0.844,275,0.592,276,0.608,279,0.4,280,0.741,290,0.4,291,0.8,292,1.061,301,0.564,308,0.4,310,0.797,315,0.345,321,0.4,322,1.357,323,0.858,324,0.929,325,0.4,326,0.381,329,0.726,330,0.363,333,0.726,334,0.974,337,1.856,348,2.636,362,3.255,372,1.968,376,2.232,378,2.396,392,2.091,408,1.437,409,1.197,411,2.57,412,1.197,415,1.197,416,1.437,417,1.542,418,1.542,421,3.255,422,2.938,428,2.593,429,2.396,437,2.396,455,2.396,464,2.938,471,2.041,474,3.086,517,3.313,543,3.888,546,3.119,550,2.413,551,2.232,556,3.575,563,1.542,564,1.669,579,2.84,646,5.243,647,2.041,648,5.024,680,2.783,716,1.828,719,1.828,729,1.828,730,2.041,741,2.593,763,2.593,765,3.483,768,2.84,770,3.962,771,3.797,787,2.593,788,2.721,789,3.585,792,2.84,798,2.593,799,2.891,806,1.828,812,3.171,848,1.346,849,3.882,850,3.18,851,1.669,852,1.267,872,2.593,874,2.091,886,3.171,973,2.041,990,1.828,999,4.252,1065,2.84,1069,3.171,1070,2.091,1071,2.041,1081,3.171,1098,3.171,1115,2.041,1133,4.747,1161,2.593,1185,2.396,1383,1.828,1497,3.171,1525,2.041,1527,5.024,1529,3.171,1530,4.384,1532,3.171,1533,3.171,1535,3.171,1576,2.041,1577,5.078,1578,6.073,1579,5.078,1580,5.078,1581,3.673,1582,4.503,1583,4.503,1584,5.82,1585,3.673,1586,4.503,1587,5.078,1588,5.078,1589,5.82,1590,3.673,1591,3.673,1592,2.364,1593,3.673,1594,2.364,1595,3.673,1596,2.364,1597,2.364,1598,2.364,1599,2.364,1600,2.364,1601,2.364,1602,2.364,1603,2.364,1604,2.364,1605,2.364,1606,2.364,1607,2.364,1608,2.364,1609,2.364,1610,2.364,1611,3.673,1612,3.673,1613,4.503,1614,3.673,1615,2.364,1616,3.673,1617,2.364,1618,2.364,1619,2.364,1620,2.364,1621,2.364,1622,2.364,1623,2.364,1624,2.364,1625,2.364,1626,2.364,1627,6.073,1628,2.364,1629,2.364,1630,5.078,1631,3.673,1632,4.503,1633,2.364,1634,4.503,1635,3.673,1636,3.673,1637,3.673,1638,2.364,1639,3.673,1640,2.364,1641,2.364,1642,2.364,1643,2.364,1644,4.503,1645,3.673,1646,4.503,1647,6.073,1648,2.364,1649,5.078,1650,2.364,1651,5.82,1652,5.82,1653,5.82,1654,5.078,1655,3.673,1656,5.078,1657,2.364,1658,4.503,1659,3.673,1660,2.364,1661,2.364,1662,2.364,1663,2.364,1664,2.364,1665,2.364,1666,2.364,1667,2.364,1668,2.364,1669,2.364,1670,2.364,1671,2.364,1672,3.673,1673,2.364,1674,2.364,1675,2.364,1676,2.364,1677,3.673,1678,2.364,1679,2.364,1680,2.364,1681,2.364,1682,2.364,1683,2.364,1684,2.364]],["title/components/UserTableComponent.html",[0,0.242,266,0.869]],["body/components/UserTableComponent.html",[0,0.476,1,0.769,2,0.085,3,0.119,4,0.955,5,0.955,6,0.955,7,0.069,12,1.041,13,1.18,16,1.577,20,0.165,21,2.777,22,2.01,23,2.777,27,2.111,28,3.024,29,0.955,30,2.152,31,1.344,33,1.344,35,0.101,36,0.238,37,1.992,41,2.469,45,1.232,48,3.721,50,0.839,54,1.883,55,1.727,58,1.77,59,2.758,61,2.792,62,2.202,64,1.489,65,0.017,66,0.267,67,0.164,68,1.489,73,2.01,76,1.426,77,1.489,83,1.429,85,3.444,86,1.301,91,1.761,92,1.577,93,1.041,95,1.748,96,1.934,108,1.484,109,0.769,116,1.137,121,1.429,123,1.088,124,0.182,128,4.363,145,0.085,146,0.803,152,2.219,161,2.65,165,1.917,171,1.188,174,1.482,176,0.262,180,2.964,209,0.876,210,1.344,211,1.287,212,1.344,213,0.955,215,0.955,216,0.769,217,0.955,218,0.769,219,0.955,220,0.803,221,1.489,222,0.955,223,0.803,224,0.915,225,1.344,226,0.769,227,0.955,228,0.803,229,0.955,230,0.769,231,0.955,232,0.769,233,0.955,234,0.803,235,0.955,236,0.769,237,0.955,238,0.803,239,0.839,240,0.955,241,0.769,242,0.839,243,0.955,244,0.803,245,0.955,246,1.489,247,1.344,248,0.803,249,1.287,250,0.955,251,0.803,252,0.955,253,0.769,254,0.955,255,0.803,256,0.839,257,0.955,258,0.803,259,0.955,260,0.803,261,0.955,262,0.803,263,0.955,264,0.803,265,0.955,266,1.419,267,1.883,268,0.955,269,0.01,270,0.012,276,0.491,280,1.004,291,0.457,329,0.786,330,1.027,337,2.325,341,2.325,362,3.281,409,1.755,474,2.964,518,1.974,545,4.211,548,2.993,566,1.974,569,2.964,570,3.721,573,2.262,643,5.592,644,5.592,719,2.681,743,2.993,754,5.105,756,3.281,760,3.458,761,3.772,763,3.984,806,3.772,954,4.211,1000,4.265,1003,3.921,1180,3.444,1364,3.984,1420,4.211,1425,2.993,1685,2.993,1686,4.877,1687,4.877,1688,4.877,1689,4.877,1690,6.123,1691,6.123,1692,6.123,1693,4.877,1694,4.877,1695,6.452,1696,4.877,1697,4.877,1698,4.877,1699,4.877,1700,4.877,1701,4.877,1702,3.467,1703,3.467,1704,4.877,1705,3.467,1706,5.642,1707,6.123,1708,4.877,1709,3.467,1710,4.877,1711,4.877,1712,3.467,1713,4.877,1714,3.467,1715,3.467,1716,4.877,1717,3.467,1718,3.467,1719,3.467,1720,3.467,1721,3.467,1722,3.467,1723,3.467,1724,3.467,1725,3.467,1726,3.467,1727,3.467,1728,3.467,1729,3.467,1730,3.467,1731,3.467,1732,4.877,1733,4.877,1734,4.877,1735,4.877,1736,4.877,1737,6.123,1738,4.877]],["title/interfaces/UserType.html",[124,0.197,291,0.494]],["body/interfaces/UserType.html",[2,0.1,3,0.1,7,0.081,20,0.138,35,0.119,36,0.266,65,0.017,66,0.283,67,0.167,94,0.593,101,0.719,104,0.735,106,0.758,124,0.419,132,0.627,145,0.194,176,0.232,269,0.012,270,0.012,271,0.723,272,0.757,273,1.198,274,0.793,275,1.258,276,0.701,277,0.658,278,1.039,279,0.69,280,0.596,281,0.69,282,0.723,283,0.627,284,0.69,285,0.69,286,0.879,287,1.059,288,0.69,289,0.764,290,0.69,291,0.927,292,0.69,293,0.596,294,0.853,295,0.898,296,0.99,297,1.039,298,0.69,299,1.012,300,0.966,301,1.12,302,0.793,303,0.793,304,0.793,305,0.757,306,0.757,307,0.793,308,0.69,309,0.723,310,1.211,311,0.69,312,0.793,313,0.69,314,0.69,315,0.596,316,0.658,317,0.69,318,0.922,319,0.723,320,0.69,321,0.69,322,0.757,323,0.922,324,0.69,325,0.69,326,0.658,327,0.69,328,0.966,329,1.102,330,1.049,331,0.723,332,0.793,333,0.658,334,0.723]],["title/interfaces/UsersResponseType.html",[124,0.197,326,0.604]],["body/interfaces/UsersResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.248,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.948,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.883,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/interfaces/UsersSubmittedResponseType.html",[124,0.197,327,0.634]],["body/interfaces/UsersSubmittedResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.248,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.7,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.926,328,1.165,329,0.883,330,0.841,331,0.728,332,0.798,333,0.662,334,0.728]],["title/interfaces/UsersSubmittedType.html",[124,0.197,328,0.664]],["body/interfaces/UsersSubmittedType.html",[2,0.102,3,0.102,7,0.083,20,0.141,35,0.121,36,0.27,65,0.017,66,0.267,67,0.135,94,0.594,101,0.728,104,0.736,106,0.767,124,0.42,132,0.639,145,0.195,176,0.233,269,0.012,270,0.012,271,0.737,272,0.772,273,1.2,274,0.808,275,1.26,276,0.7,277,0.67,278,1.048,279,0.703,280,0.608,281,0.703,282,0.737,283,0.639,284,0.703,285,0.703,286,0.89,287,1.073,288,0.703,289,0.768,290,0.703,291,0.907,292,0.703,293,0.608,294,0.861,295,0.906,296,1,297,1.048,298,0.703,299,1.025,300,0.979,301,1.056,302,0.808,303,0.808,304,0.808,305,0.772,306,0.772,307,0.808,308,0.703,309,0.737,310,1.298,311,0.703,312,0.808,313,0.703,314,0.703,315,0.608,316,0.67,317,0.703,318,0.934,319,0.737,320,0.703,321,0.703,322,0.772,323,0.934,324,0.703,325,0.703,326,0.67,327,0.703,328,1.099,329,0.89,330,0.848,331,0.737,332,0.808,333,0.67,334,0.737]],["title/interfaces/VersionResponseType.html",[124,0.197,333,0.604]],["body/interfaces/VersionResponseType.html",[2,0.1,3,0.1,7,0.081,20,0.139,35,0.12,36,0.267,65,0.017,66,0.266,67,0.161,94,0.595,101,0.722,104,0.733,106,0.761,124,0.419,132,0.631,145,0.194,176,0.232,269,0.012,270,0.012,271,0.728,272,0.762,273,1.207,274,0.798,275,1.267,276,0.701,277,0.662,278,1.042,279,0.694,280,0.6,281,0.694,282,0.728,283,0.631,284,0.694,285,0.694,286,0.883,287,1.064,288,0.694,289,0.765,290,0.694,291,0.903,292,0.694,293,0.6,294,0.856,295,0.9,296,0.993,297,1.042,298,0.694,299,1.016,300,0.97,301,1.051,302,0.798,303,0.798,304,0.798,305,0.762,306,0.762,307,0.798,308,0.694,309,0.728,310,1.213,311,0.694,312,0.798,313,0.694,314,0.694,315,0.6,316,0.662,317,0.694,318,0.926,319,0.728,320,0.694,321,0.694,322,0.762,323,0.926,324,0.694,325,0.694,326,0.662,327,0.694,328,0.97,329,0.883,330,0.841,331,0.728,332,0.798,333,0.883,334,1.165]],["title/coverage.html",[1739,4.447]],["body/coverage.html",[0,0.507,1,0.871,7,0.078,8,3.752,9,3.662,10,3.662,11,4.255,13,1.563,53,1.883,54,1.036,58,1.232,65,0.017,67,0.096,93,1.94,101,0.517,124,0.418,127,2.773,171,2.737,216,0.871,218,0.871,220,0.91,223,0.91,226,0.871,228,0.91,230,0.871,232,0.871,234,0.91,236,0.871,238,0.91,241,0.871,244,0.91,248,0.91,251,0.91,253,0.871,255,0.91,256,0.95,258,0.91,260,0.91,262,0.91,264,0.91,266,0.91,267,1.036,269,0.011,270,0.011,271,0.695,272,1.471,277,0.633,279,0.664,281,0.664,283,0.603,286,0.633,288,0.664,290,0.664,291,0.517,293,0.574,295,0.574,296,0.633,298,0.664,300,0.695,308,0.664,309,0.695,315,0.574,316,0.633,317,0.664,318,0.664,320,0.664,321,0.664,323,0.664,325,0.664,326,0.633,327,0.664,328,0.695,331,0.695,333,0.633,335,4.227,336,3.391,364,1.988,490,3.391,538,3.391,546,2.105,614,3.931,641,3.468,643,3.037,644,3.037,649,3.037,658,3.662,659,3.662,661,3.753,664,3.391,665,3.391,714,3.391,715,3.391,754,4.255,755,4.111,811,3.391,854,4.402,891,3.391,952,3.391,994,3.391,1013,3.391,1063,3.391,1064,3.391,1137,4.255,1138,4.255,1197,4.589,1340,4.111,1408,3.391,1442,3.037,1496,4.589,1562,3.391,1576,3.391,1685,3.391,1739,3.391,1740,3.927,1741,3.927,1742,3.927,1743,3.927,1744,3.927,1745,5.316,1746,3.927,1747,6.747,1748,7.234,1749,5.316,1750,3.927,1751,3.927,1752,5.316,1753,3.927,1754,5.316,1755,3.927,1756,3.927,1757,3.927,1758,3.927,1759,5.316,1760,3.927,1761,3.927,1762,3.927,1763,5.316,1764,3.927,1765,7.726,1766,6.026,1767,5.316,1768,6.457,1769,3.927,1770,5.316,1771,3.927,1772,3.927,1773,3.927,1774,3.927,1775,3.927,1776,3.927,1777,5.316,1778,3.927,1779,3.927,1780,3.927,1781,3.927,1782,3.927,1783,5.316,1784,3.927,1785,3.927,1786,3.927,1787,3.927,1788,3.927,1789,3.927,1790,3.927,1791,3.391,1792,4.589,1793,3.391,1794,4.589,1795,3.391,1796,3.927]],["title/index.html",[35,0.109,892,2.9]],["body/index.html",[0,0.315,1,1.485,53,3.21,54,1.767,65,0.017,93,1.467,124,0.257,145,0.119,189,3.187,209,1.234,216,1.485,218,1.485,220,1.736,223,1.552,226,1.485,228,1.552,230,1.485,232,1.485,234,1.552,236,1.485,238,1.552,241,1.485,244,1.552,248,1.552,251,1.552,253,1.485,255,1.552,256,1.621,258,1.552,260,1.552,262,1.552,264,1.552,266,1.552,269,0.013,270,0.013,364,3.39,546,3.589,574,3.284,575,5.742,576,4.217,577,4.217,578,4.217,579,3.777,580,4.217,581,4.217,582,4.217,583,4.217,584,4.217,585,4.369,586,5.291,587,4.217,588,3.777,698,2.472,892,3.777,1452,4.217,1797,4.884,1798,4.884,1799,4.884]],["title/modules.html",[574,2.76]],["body/modules.html",[65,0.015,269,0.015,270,0.015,574,3.317,575,4.37,585,4.038,598,5.344,1800,6.189,1801,6.189,1802,7.063,1803,6.189,1804,6.189]],["title/routes.html",[698,2.607]],["body/routes.html",[65,0.015,269,0.015,270,0.015,698,3.171]],["title/miscellaneous/variables.html",[854,2.948,1805,2.69]],["body/miscellaneous/variables.html",[8,2.812,9,3.376,10,3.376,11,4.682,17,3.163,18,3.923,19,3.923,20,0.24,35,0.162,65,0.017,67,0.179,95,2.632,96,2.516,97,2.377,127,5.005,134,4.296,135,5.482,136,4.296,137,5.482,138,4.296,139,4.296,140,4.296,141,4.296,142,4.296,143,4.296,144,4.296,172,1.669,269,0.014,270,0.014,852,3.934,854,3.624,1442,5.482,1791,4.796,1792,6.573,1793,4.796,1794,6.12,1795,6.12,1805,4.796,1806,5.555,1807,5.555,1808,5.555,1809,5.555,1810,5.555,1811,6.631]]],"invertedIndex":[["",{"_index":65,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":171,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["0/1",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":105,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["1/2",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["10/17",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["10/25",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":527,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["1000",{"_index":1450,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["11",{"_index":1799,"title":{},"body":{"index.html":{}}}],["12/21",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["15/27",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["16/38",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":1423,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["2",{"_index":189,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["2.htm",{"_index":726,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["2/4",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":683,"title":{},"body":{"modules/AppModule.html":{}}}],["2000",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["21ad21",{"_index":143,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["24",{"_index":1452,"title":{},"body":{"components/MyAbsencesComponent.html":{},"index.html":{}}}],["24/36",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":687,"title":{},"body":{"modules/AppModule.html":{}}}],["3",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["3/6",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1798,"title":{},"body":{"index.html":{}}}],["300",{"_index":693,"title":{},"body":{"modules/AppModule.html":{}}}],["33",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":685,"title":{},"body":{"modules/AppModule.html":{}}}],["3600",{"_index":1451,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["4",{"_index":1797,"title":{},"body":{"index.html":{}}}],["4/10",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["41",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":725,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["5/10",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["5/12",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1439,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["6/10",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["6/13",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["66",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["7/17",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["78c000",{"_index":689,"title":{},"body":{"modules/AppModule.html":{}}}],["8/13",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["888888",{"_index":140,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["9/18",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["_elementref",{"_index":1150,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["_formbuild",{"_index":1264,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["aaaaaa",{"_index":141,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["absenc",{"_index":13,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["absences'},{'nam",{"_index":254,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["absences.compon",{"_index":660,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["absences.component.css",{"_index":1409,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.html",{"_index":1410,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.t",{"_index":1408,"title":{},"body":{"components/MyAbsencesComponent.html":{},"coverage.html":{}}}],["absences.component.ts:18",{"_index":1428,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:19",{"_index":1432,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:20",{"_index":1430,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:21",{"_index":1431,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:22",{"_index":1429,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:23",{"_index":1414,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:37",{"_index":1415,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:44",{"_index":1417,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:70",{"_index":1419,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences.component.ts:92",{"_index":1424,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["absences/calendar",{"_index":701,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["absences/employe",{"_index":702,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["absences/mi",{"_index":659,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"coverage.html":{}}}],["absences/myabs",{"_index":704,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["absencescalendarcompon",{"_index":1,"title":{"components/AbsencesCalendarComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["acceder",{"_index":1099,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["accedi",{"_index":1101,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["accord",{"_index":130,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["activ",{"_index":150,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["activatedrout",{"_index":821,"title":{},"body":{"components/CompileComponent.html":{},"components/EmployeeComponent.html":{}}}],["activedayisopen",{"_index":38,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["actual_compon",{"_index":268,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["ad",{"_index":738,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["ad2121",{"_index":136,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":741,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["add/upd",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["add_us",{"_index":792,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["add_user(us",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["addrequestresponsetyp",{"_index":271,"title":{"interfaces/AddRequestResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["admin",{"_index":345,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin'},{'nam",{"_index":217,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["admin.component.css",{"_index":346,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":347,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":216,"title":{"components/AdminComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["administr",{"_index":340,"title":{},"body":{"components/AdminComponent.html":{}}}],["again",{"_index":1078,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["aggiunger",{"_index":1103,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["aggiungi",{"_index":1337,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["ai",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["al",{"_index":449,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["all'interno",{"_index":1090,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["all\\'interno",{"_index":1104,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["all_survey",{"_index":1501,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["all_surveys_vers",{"_index":1500,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["alla",{"_index":1390,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["allow",{"_index":555,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["allsurvey",{"_index":491,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["allsurveys'},{'nam",{"_index":219,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["allsurveys.component.css",{"_index":492,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["allsurveys.component.html",{"_index":493,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["allsurveyscompon",{"_index":218,"title":{"components/AllsurveysComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["allsurveyssubscript",{"_index":494,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["alreadi",{"_index":383,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["altr",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["altri",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["altro",{"_index":1403,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["amministrator",{"_index":984,"title":{},"body":{"components/EmployeesComponent.html":{},"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["angula",{"_index":1687,"title":{},"body":{"components/UserTableComponent.html":{}}}],["angular",{"_index":24,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["angular/common",{"_index":655,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common/http",{"_index":409,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["angular/common/locales/it",{"_index":657,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cor",{"_index":109,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["angular/flex",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/form",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["angular/materi",{"_index":121,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["angular/platform",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/rout",{"_index":410,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["animationdur",{"_index":692,"title":{},"body":{"modules/AppModule.html":{}}}],["annulla",{"_index":1407,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["ano",{"_index":1550,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["anonima",{"_index":1095,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["answer",{"_index":278,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["answer_compil",{"_index":303,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["answer_of_us",{"_index":307,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["answerresponsetyp",{"_index":277,"title":{"interfaces/AnswerResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["answerslist",{"_index":816,"title":{},"body":{"components/CompileComponent.html":{}}}],["answerslist(quest",{"_index":823,"title":{},"body":{"components/CompileComponent.html":{}}}],["api",{"_index":348,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["app",{"_index":221,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["app.compon",{"_index":591,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["app/.../abs",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app/abs",{"_index":8,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app/app",{"_index":695,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/app.component.t",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["app/app.component.ts:13",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.component.ts:14",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.component.ts:25",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.component.ts:32",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.module.t",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["app/block",{"_index":714,"title":{},"body":{"injectables/BlockScrollService.html":{},"coverage.html":{}}}],["app/header/header.component.t",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["app/header/header.component.ts:13",{"_index":1002,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app/header/header.component.ts:14",{"_index":1001,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app/header/header.component.ts:20",{"_index":1005,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app/header/header.component.ts:27",{"_index":1004,"title":{},"body":{"components/HeaderComponent.html":{}}}],["app/home/home.component.t",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["app/home/home.component.ts:12",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{}}}],["app/interfaces.t",{"_index":272,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["app/login",{"_index":1063,"title":{},"body":{"components/LoginDialogComponent.html":{},"coverage.html":{}}}],["app/manag",{"_index":754,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["app/sidebar/sidebar",{"_index":1137,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"coverage.html":{}}}],["app/sidebar/sidebar.component.t",{"_index":1562,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["app/sidebar/sidebar.component.ts:10",{"_index":1565,"title":{},"body":{"components/SidebarComponent.html":{}}}],["app/sidebar/sidebar.component.ts:16",{"_index":1567,"title":{},"body":{"components/SidebarComponent.html":{}}}],["app/sidebar/sidebar.component.ts:9",{"_index":1566,"title":{},"body":{"components/SidebarComponent.html":{}}}],["app/survey",{"_index":335,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"coverage.html":{}}}],["app/user.service.t",{"_index":1576,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["app/user.service.ts:106",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:148",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:164",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:173",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:184",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:191",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:203",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:210",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:220",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:237",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:258",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:265",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:274",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:28",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:29",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:30",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:31",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:318",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:32",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:33",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:34",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:35",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:36",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:37",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["app/user.service.ts:46",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["appcompon",{"_index":220,"title":{"components/AppComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":745,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["appli",{"_index":972,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["applicazion",{"_index":1091,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["applyfilt",{"_index":1693,"title":{},"body":{"components/UserTableComponent.html":{}}}],["applyfilter(filtervalu",{"_index":1704,"title":{},"body":{"components/UserTableComponent.html":{}}}],["appmodul",{"_index":575,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apport",{"_index":1389,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["approut",{"_index":699,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":585,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["approv",{"_index":17,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["approva",{"_index":943,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["approvar",{"_index":988,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["approvata",{"_index":188,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["approvazion",{"_index":908,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["argument",{"_index":1152,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["array",{"_index":377,"title":{},"body":{"components/AdminComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["arraystep",{"_index":319,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["assenz",{"_index":200,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["assicurati",{"_index":1315,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["assig",{"_index":1710,"title":{},"body":{"components/UserTableComponent.html":{}}}],["attesa",{"_index":191,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["attribut",{"_index":1282,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["aul",{"_index":1175,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["aula",{"_index":1190,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["authent",{"_index":1527,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["author",{"_index":418,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["avail",{"_index":1804,"title":{},"body":{"modules.html":{}}}],["avanti",{"_index":203,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["aver",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["backend",{"_index":771,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["base",{"_index":22,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["basic",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["bearer",{"_index":419,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["befor",{"_index":1305,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["benvenuto",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["block",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["blockscrollservic",{"_index":546,"title":{"injectables/BlockScrollService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["bodi",{"_index":722,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/SidebarBodyComponent.html":{}}}],["body'},{'nam",{"_index":261,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["body.compon",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["body.component.css",{"_index":1545,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.html",{"_index":1546,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.t",{"_index":1138,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"coverage.html":{}}}],["body.component.ts:110",{"_index":1555,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:111",{"_index":1551,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:112",{"_index":1554,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:113",{"_index":1549,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:165",{"_index":1552,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:172",{"_index":1553,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["body.component.ts:23",{"_index":1151,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:24",{"_index":1149,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:32",{"_index":1155,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:44",{"_index":1159,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:53",{"_index":1165,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["body.component.ts:73",{"_index":1571,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body.component.ts:74",{"_index":1574,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body.component.ts:75",{"_index":1570,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body.component.ts:81",{"_index":1572,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body.component.ts:90",{"_index":1573,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["body/sidebar",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"coverage.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/HeaderComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["bootstrap",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["boss",{"_index":280,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["bossresponsetyp",{"_index":279,"title":{"interfaces/BossResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["both",{"_index":1202,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["bottom",{"_index":224,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["bottomlistcompon",{"_index":223,"title":{"components/BottomListComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["bottomsheet",{"_index":791,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["bottomsheetref",{"_index":765,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["bottomsheetref.dismiss",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["box",{"_index":1386,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["brows",{"_index":1802,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["browser/anim",{"_index":596,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":594,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa(email",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["build",{"_index":736,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["buildstyleel",{"_index":728,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["button",{"_index":197,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["c7e596",{"_index":691,"title":{},"body":{"modules/AppModule.html":{}}}],["calendar",{"_index":14,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["calendar'},{'nam",{"_index":215,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["calendar.compon",{"_index":668,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["calendar.component.css",{"_index":32,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendar.component.html",{"_index":34,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendar.component.t",{"_index":11,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calendar.component.ts:136",{"_index":84,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:143",{"_index":88,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:159",{"_index":1483,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:161",{"_index":1489,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:162",{"_index":1488,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:171",{"_index":1487,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:179",{"_index":1485,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:188",{"_index":1486,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:197",{"_index":1484,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["calendar.component.ts:52",{"_index":102,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:53",{"_index":103,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:54",{"_index":100,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:55",{"_index":107,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:56",{"_index":98,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:57",{"_index":56,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:63",{"_index":99,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:80",{"_index":71,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar.component.ts:97",{"_index":78,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["calendar/abs",{"_index":10,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calendar/doc",{"_index":26,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendarev",{"_index":81,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendareventact",{"_index":117,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["calendario",{"_index":199,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["calendarmodul",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["calendarmodule.forroot",{"_index":678,"title":{},"body":{"modules/AppModule.html":{}}}],["call",{"_index":195,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["can't",{"_index":1426,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["cancelclick",{"_index":1346,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["capo",{"_index":1737,"title":{},"body":{"components/UserTableComponent.html":{}}}],["card",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{}}}],["carica",{"_index":1405,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["case",{"_index":871,"title":{},"body":{"components/CompileComponent.html":{}}}],["chalkboard",{"_index":1163,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["chang",{"_index":129,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["chart",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["charts'},{'nam",{"_index":257,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["charts.compon",{"_index":666,"title":{},"body":{"modules/AppModule.html":{}}}],["charts.component.t",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["charts/request",{"_index":665,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["check",{"_index":165,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AppComponent.html":{},"components/EmployeesComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["checkbox",{"_index":1258,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["chiudi",{"_index":1339,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["choos",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["choosen",{"_index":1259,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["chose",{"_index":758,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["circl",{"_index":673,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":146,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["clear",{"_index":798,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/UserService.html":{}}}],["click",{"_index":73,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["clickedinsid",{"_index":1169,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["client",{"_index":548,"title":{},"body":{"components/AppComponent.html":{},"components/UserTableComponent.html":{}}}],["close",{"_index":173,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["cluster_appmodul",{"_index":580,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declar",{"_index":581,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_import",{"_index":582,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_provid",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["code",{"_index":23,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["cognom",{"_index":1734,"title":{},"body":{"components/UserTableComponent.html":{}}}],["coincidono",{"_index":1135,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["collaps",{"_index":567,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["collapse_if_mobil",{"_index":1181,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["collapsed/expand",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["collect",{"_index":1418,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["color",{"_index":127,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":1701,"title":{},"body":{"components/UserTableComponent.html":{}}}],["come",{"_index":1102,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["compani",{"_index":63,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["compil",{"_index":812,"title":{},"body":{"components/CompileComponent.html":{},"injectables/UserService.html":{}}}],["compilato",{"_index":885,"title":{},"body":{"components/CompileComponent.html":{}}}],["compile'},{'nam",{"_index":227,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["compile.component.css",{"_index":813,"title":{},"body":{"components/CompileComponent.html":{}}}],["compile.component.html",{"_index":814,"title":{},"body":{"components/CompileComponent.html":{}}}],["compilecompon",{"_index":226,"title":{"components/CompileComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["complet",{"_index":180,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["completata",{"_index":537,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["completato",{"_index":534,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":213,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["compresa",{"_index":939,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["con",{"_index":1319,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["condit",{"_index":282,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["condition_answ",{"_index":302,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["condition_confirm",{"_index":304,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["conditionresponsetyp",{"_index":281,"title":{"interfaces/ConditionResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["condizional",{"_index":1338,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["conferm",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["conferma",{"_index":193,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["config",{"_index":125,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["config).api",{"_index":179,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["config.dur",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["config.json",{"_index":126,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["confirm",{"_index":1383,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["consid",{"_index":905,"title":{},"body":{"components/EmployeeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["console.log(data.error",{"_index":429,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["console.log(err",{"_index":437,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["console.log(json.stringify(err",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":133,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["constructor(_elementref",{"_index":1147,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["constructor(blockscrollservic",{"_index":1071,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["constructor(bottomsheet",{"_index":1109,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["constructor(cli",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"components/UserTableComponent.html":{}}}],["constructor(data",{"_index":764,"title":{},"body":{"components/BottomListComponent.html":{}}}],["constructor(dialog",{"_index":51,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["constructor(dialogref",{"_index":1216,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["constructor(httpcli",{"_index":1413,"title":{},"body":{"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["constructor(priv",{"_index":977,"title":{},"body":{"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["constructor(requestsservic",{"_index":961,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["constructor(requestssurveysservic",{"_index":500,"title":{},"body":{"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{}}}],["constructor(rout",{"_index":901,"title":{},"body":{"components/EmployeeComponent.html":{},"components/SidebarMenuItem.html":{}}}],["constructor(userservic",{"_index":361,"title":{},"body":{"components/AdminComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["constructro",{"_index":1697,"title":{},"body":{"components/UserTableComponent.html":{}}}],["contain",{"_index":341,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/UserTableComponent.html":{}}}],["content",{"_index":1076,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["context",{"_index":1795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":1084,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["controllato",{"_index":1316,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["cooki",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["cookieservic",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["correttament",{"_index":886,"title":{},"body":{"components/CompileComponent.html":{},"injectables/UserService.html":{}}}],["count",{"_index":983,"title":{},"body":{"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["coupl",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["coverag",{"_index":1739,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["crear",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["creat",{"_index":376,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["createarraystep",{"_index":349,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["createarraystep(survey",{"_index":366,"title":{},"body":{"components/AdminComponent.html":{}}}],["createsurvey",{"_index":1249,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["createsurvey'},{'nam",{"_index":229,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["createsurvey.component.css",{"_index":1251,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["createsurvey.component.html",{"_index":1250,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["createsurveycompon",{"_index":228,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["creati",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["creation",{"_index":1201,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["creato",{"_index":1318,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["credenti",{"_index":1081,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["credenziali",{"_index":1098,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["current",{"_index":413,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["current_us",{"_index":306,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["custom",{"_index":1385,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["custom_reason",{"_index":1344,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["d",{"_index":936,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["da",{"_index":928,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["dai",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["dal",{"_index":1464,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["dangermod",{"_index":453,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["dashboard",{"_index":953,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["data",{"_index":91,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["data.answ",{"_index":479,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["data.condit",{"_index":867,"title":{},"body":{"components/CompileComponent.html":{}}}],["data.employee.nam",{"_index":809,"title":{},"body":{"components/BottomListComponent.html":{}}}],["data.employee.surnam",{"_index":810,"title":{},"body":{"components/BottomListComponent.html":{}}}],["data.error",{"_index":428,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/UserService.html":{}}}],["data.percentu",{"_index":462,"title":{},"body":{"components/AdminComponent.html":{}}}],["data.quest",{"_index":431,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["data.request.end_d",{"_index":1491,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["data.request.id",{"_index":1402,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["data.request.reason",{"_index":1492,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["data.request.start_d",{"_index":1490,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["data.step[0].step",{"_index":433,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["data.success",{"_index":422,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["data.supervis",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["data.survey",{"_index":482,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["data.token",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["data.us",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["data.users.filter(us",{"_index":472,"title":{},"body":{"components/AdminComponent.html":{}}}],["data.vers",{"_index":1530,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["databas",{"_index":385,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["database(with",{"_index":371,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["datasourc",{"_index":1690,"title":{},"body":{"components/UserTableComponent.html":{}}}],["datat",{"_index":1706,"title":{},"body":{"components/UserTableComponent.html":{}}}],["date",{"_index":106,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"modules/AppModule.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["date(this.data.request.end_d",{"_index":1374,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["date(this.data.request.start_d",{"_index":1372,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["date(this.end_d",{"_index":1444,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["date(this.start_d",{"_index":1443,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["date.now",{"_index":1183,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["date:'d",{"_index":1557,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:'eee",{"_index":1556,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:'h:mm:ss",{"_index":1558,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:'mmmm",{"_index":204,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["date:\\'d",{"_index":1560,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:\\'eee",{"_index":1559,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:\\'h:mm:ss",{"_index":1561,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["date:\\'mmmm",{"_index":214,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["datetim",{"_index":1184,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["day",{"_index":15,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["dayclick",{"_index":46,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["dayclicked(undefin",{"_index":69,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["dayli",{"_index":75,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["debug",{"_index":751,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["declar",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["decor",{"_index":772,"title":{},"body":{"components/BottomListComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["default",{"_index":95,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EmployeeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":55,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["dei",{"_index":950,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["del",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["delet",{"_index":370,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["deleteansw",{"_index":1211,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["deleteanswer(answ",{"_index":1220,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["deletebeforeinsert(quest",{"_index":1306,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["deletequest",{"_index":1504,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["deletequestion(quest",{"_index":1510,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["deletesurvey",{"_index":350,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["deletesurvey(survey",{"_index":368,"title":{},"body":{"components/AdminComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["dell",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["della",{"_index":426,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["depend",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["descript",{"_index":12,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["desktop",{"_index":1140,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["detail",{"_index":90,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["details'},{'nam",{"_index":259,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["details.component.css",{"_index":1480,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["details.component.html",{"_index":1481,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["details/request",{"_index":1479,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["devic",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["di",{"_index":192,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/EmployeeComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["dialog",{"_index":40,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["dialog'},{'nam",{"_index":240,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["dialog.compon",{"_index":650,"title":{},"body":{"modules/AppModule.html":{}}}],["dialog.component.css",{"_index":1066,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.html",{"_index":1067,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.t",{"_index":1064,"title":{},"body":{"components/LoginDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:14",{"_index":1086,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":1085,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1072,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":1074,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1079,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":1082,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["dialog/login",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"components/LoginDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":1208,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["diffday",{"_index":1448,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["dimens",{"_index":1700,"title":{},"body":{"components/UserTableComponent.html":{}}}],["dipendenti",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["diplay",{"_index":904,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["direct",{"_index":212,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["disabl",{"_index":729,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["discard",{"_index":1380,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["display",{"_index":16,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["displayed_request",{"_index":899,"title":{},"body":{"components/EmployeeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["displayedcolumn",{"_index":1691,"title":{},"body":{"components/UserTableComponent.html":{}}}],["disponibil",{"_index":1495,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["document",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["document.body.appendchild",{"_index":742,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["document.body.removechild",{"_index":744,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["document.createel",{"_index":747,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["document:click",{"_index":1146,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["document:click(targetel",{"_index":1154,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["domanda",{"_index":1336,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["done",{"_index":533,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["dovranno",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["drive",{"_index":1248,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["due",{"_index":1134,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["durant",{"_index":424,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["e",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["e3fae3",{"_index":144,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["ecc",{"_index":373,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["eeee",{"_index":935,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["effect",{"_index":906,"title":{},"body":{"components/EmployeeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["element",{"_index":211,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["element.email",{"_index":1736,"title":{},"body":{"components/UserTableComponent.html":{}}}],["element.nam",{"_index":1733,"title":{},"body":{"components/UserTableComponent.html":{}}}],["element.surnam",{"_index":1735,"title":{},"body":{"components/UserTableComponent.html":{}}}],["elementref",{"_index":1148,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["elimina",{"_index":484,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["eliminato",{"_index":444,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["email",{"_index":330,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["emiss",{"_index":1120,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["emit",{"_index":161,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["emit_employe",{"_index":1694,"title":{},"body":{"components/UserTableComponent.html":{}}}],["emit_employee(us",{"_index":1708,"title":{},"body":{"components/UserTableComponent.html":{}}}],["emit_toggl",{"_index":1193,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["emit_toggle_if_mobil",{"_index":1194,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["emitt",{"_index":1007,"title":{},"body":{"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{}}}],["employe",{"_index":148,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["employee'},{'nam",{"_index":231,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["employee.component.css",{"_index":895,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employee.component.html",{"_index":896,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employee.email",{"_index":925,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employee.nam",{"_index":924,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["employee.surnam",{"_index":923,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["employee/boss",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["employee_request",{"_index":897,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employee_requestssubscript",{"_index":898,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["employeecompon",{"_index":230,"title":{"components/EmployeeComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["employees'},{'nam",{"_index":233,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["employees.component.css",{"_index":955,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["employees.component.html",{"_index":956,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["employeescompon",{"_index":232,"title":{"components/EmployeesComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["employeessubscript",{"_index":957,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["empti",{"_index":1083,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["enabl",{"_index":730,"title":{},"body":{"injectables/BlockScrollService.html":{},"injectables/UserService.html":{}}}],["enabletrac",{"_index":713,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["encod",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["end",{"_index":1279,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["end_dat",{"_index":314,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["endofday",{"_index":111,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["endofmonth",{"_index":112,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["enter",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["entri",{"_index":1161,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["entrycompon",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":1792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/.../environment.prod.t",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/.../environment.t",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environment.prod.t",{"_index":1791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment.t",{"_index":1793,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":1125,"title":{},"body":{"components/ManageUsersComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["err",{"_index":464,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["error",{"_index":273,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["esser",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["esso",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["even",{"_index":163,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["event",{"_index":41,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/HeaderComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["event.target",{"_index":1153,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["event.target.fil",{"_index":1382,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["eventemitt",{"_index":1003,"title":{},"body":{"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["events.length",{"_index":170,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["execut",{"_index":1713,"title":{},"body":{"components/UserTableComponent.html":{}}}],["expand",{"_index":342,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["export",{"_index":145,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"index.html":{}}}],["extern",{"_index":1173,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["fa",{"_index":1162,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["fae3e3",{"_index":138,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["fail",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["fals",{"_index":172,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["federico",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["feri",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["field",{"_index":787,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/UserService.html":{}}}],["field'",{"_index":1075,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["filechang",{"_index":1347,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["filechange(ev",{"_index":1351,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["filelist",{"_index":1345,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["fill",{"_index":828,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["fillansw",{"_index":817,"title":{},"body":{"components/CompileComponent.html":{}}}],["fillanswer(quest",{"_index":826,"title":{},"body":{"components/CompileComponent.html":{}}}],["fillanswerpercentu",{"_index":351,"title":{},"body":{"components/AdminComponent.html":{}}}],["fillanswerpercentual(quest",{"_index":374,"title":{},"body":{"components/AdminComponent.html":{}}}],["fillanswerslist",{"_index":1212,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["fillanswerslist(quest",{"_index":1222,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["fillquest",{"_index":352,"title":{},"body":{"components/AdminComponent.html":{}}}],["fillquestions(survey",{"_index":380,"title":{},"body":{"components/AdminComponent.html":{}}}],["filluserlist",{"_index":353,"title":{},"body":{"components/AdminComponent.html":{}}}],["filluserlist(survey",{"_index":386,"title":{},"body":{"components/AdminComponent.html":{}}}],["filter",{"_index":152,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["filter((data",{"_index":1529,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["filtervalu",{"_index":1707,"title":{},"body":{"components/UserTableComponent.html":{}}}],["filtervalue.tolowercas",{"_index":1727,"title":{},"body":{"components/UserTableComponent.html":{}}}],["filtervalue.trim",{"_index":1725,"title":{},"body":{"components/UserTableComponent.html":{}}}],["final",{"_index":878,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["fine",{"_index":938,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["finish",{"_index":833,"title":{},"body":{"components/CompileComponent.html":{}}}],["finishcr",{"_index":1314,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["first",{"_index":876,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["firstctrl",{"_index":1270,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["firstformgroup",{"_index":1252,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["flag",{"_index":837,"title":{},"body":{"components/CompileComponent.html":{}}}],["flexlayoutmodul",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["flow",{"_index":973,"title":{},"body":{"components/EmployeesComponent.html":{},"injectables/UserService.html":{}}}],["fn",{"_index":115,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["forc",{"_index":160,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["form",{"_index":788,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["format",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["formbuild",{"_index":1244,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["formcontrol",{"_index":1433,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["formgroup",{"_index":1245,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["formsmodul",{"_index":610,"title":{},"body":{"modules/AppModule.html":{}}}],["forward",{"_index":1276,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["forwardstep",{"_index":818,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["forwardstep(stepp",{"_index":830,"title":{},"body":{"components/CompileComponent.html":{}}}],["found",{"_index":719,"title":{},"body":{"injectables/BlockScrollService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["frontend",{"_index":338,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["full",{"_index":711,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["function",{"_index":474,"title":{},"body":{"components/AdminComponent.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["funtion",{"_index":1497,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["gener",{"_index":158,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["generali",{"_index":991,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["gestion",{"_index":1011,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["gestir",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["gestor",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["get",{"_index":79,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["get(this.api",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["get_boss_nam",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{}}}],["get_boss_name(id_employe",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["get_icon",{"_index":1143,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["get_login_statu",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["get_nam",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["get_numb",{"_index":802,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["get_pending_requests_numb",{"_index":958,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_pending_requests_number(employee.id",{"_index":987,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_pending_requests_number(id",{"_index":963,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_requests_numb",{"_index":959,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_requests_number(employee.id",{"_index":986,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_requests_number(id",{"_index":965,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["get_section_act",{"_index":1144,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["get_state_label",{"_index":900,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["get_state_label(data.request.st",{"_index":1494,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["get_state_label(request.st",{"_index":932,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["get_state_label(st",{"_index":187,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["get_state_label_class",{"_index":1482,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["get_state_label_class(st",{"_index":194,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["get_token",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["get_us",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["get_user_by_id",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["get_user_by_id(id",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["get_user_nam",{"_index":182,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["giorni",{"_index":1462,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["giustificativo",{"_index":942,"title":{},"body":{"components/EmployeeComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["go",{"_index":535,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["goforward(stepp",{"_index":1277,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["goforwardend(stepp",{"_index":1298,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["graph",{"_index":1803,"title":{},"body":{"modules.html":{}}}],["grasso",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["greater",{"_index":393,"title":{},"body":{"components/AdminComponent.html":{}}}],["green",{"_index":142,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["grey",{"_index":139,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["ha",{"_index":948,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["handl",{"_index":1157,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/MyAbsencesComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["handler",{"_index":72,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["header",{"_index":416,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/HeaderComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["header'},{'nam",{"_index":235,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["header.component.css",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.compon",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["headercompon",{"_index":234,"title":{"components/HeaderComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["here",{"_index":681,"title":{},"body":{"modules/AppModule.html":{}}}],["hidden",{"_index":568,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["hide",{"_index":1180,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["hold",{"_index":1115,"title":{},"body":{"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["home",{"_index":703,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EmployeeComponent.html":{},"components/HomeComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["home'},{'nam",{"_index":237,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["home.component.css",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":603,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecompon",{"_index":236,"title":{"components/HomeComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["hostlisten",{"_index":1145,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["hostlistener(\"document:click",{"_index":1167,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["html",{"_index":210,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["htmlstyleel",{"_index":733,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["http",{"_index":1278,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["httpclient",{"_index":362,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["httpclientmodul",{"_index":604,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":408,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["httpheaders().set",{"_index":417,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["https://mattlewis92.github.io/angular",{"_index":25,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["https://www.bennadel.com/blog/3374",{"_index":720,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["icon",{"_index":451,"title":{},"body":{"components/AdminComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["id",{"_index":301,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["id_boss",{"_index":324,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["id_employe",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["id_survey",{"_index":287,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["id_us",{"_index":310,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["identifi",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["impiegati",{"_index":985,"title":{},"body":{"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/ManageUsersComponent.html":{}}}],["impiegato",{"_index":922,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["implement",{"_index":27,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["import",{"_index":108,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["inaspettato",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["includ",{"_index":1262,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["increas",{"_index":1295,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":128,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"components/UserTableComponent.html":{}}}],["indietro",{"_index":201,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["inform",{"_index":1247,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["inizio",{"_index":933,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["inject",{"_index":93,"title":{"injectables/BlockScrollService.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["inject(mat_bottom_sheet_data",{"_index":776,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["inject(mat_dialog_data",{"_index":177,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["injectpercentu",{"_index":354,"title":{},"body":{"components/AdminComponent.html":{}}}],["injectpercentual(id",{"_index":388,"title":{},"body":{"components/AdminComponent.html":{}}}],["inner",{"_index":1119,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["innerstrokecolor",{"_index":690,"title":{},"body":{"modules/AppModule.html":{}}}],["innerstrokewidth",{"_index":686,"title":{},"body":{"modules/AppModule.html":{}}}],["input",{"_index":83,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["inserimento",{"_index":1133,"title":{},"body":{"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["inserisci",{"_index":1096,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["insert",{"_index":378,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["insertansw",{"_index":1213,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["insertquest",{"_index":1280,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["instanc",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["interfac",{"_index":124,"title":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"index.html":{}}}],["interv",{"_index":848,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["interval(1000",{"_index":1267,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["interval(1000).pip",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["interval(2000).pip",{"_index":1524,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["invia",{"_index":1100,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["iscondit",{"_index":819,"title":{},"body":{"components/CompileComponent.html":{}}}],["isconditioned(quest",{"_index":835,"title":{},"body":{"components/CompileComponent.html":{}}}],["ismax",{"_index":355,"title":{},"body":{"components/AdminComponent.html":{}}}],["ismax(percentu",{"_index":390,"title":{},"body":{"components/AdminComponent.html":{}}}],["issameday",{"_index":113,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["issameday(this.viewd",{"_index":168,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["issamemonth",{"_index":114,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["issamemonth(d",{"_index":166,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["issubmit",{"_index":497,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["issubmitted(survey_id",{"_index":503,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["it'",{"_index":1065,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["item",{"_index":149,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["item'},{'nam",{"_index":247,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["item.component.css",{"_index":1141,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["item.component.html",{"_index":1142,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["item.nam",{"_index":1575,"title":{},"body":{"components/SidebarMenuItem.html":{}}}],["item.short_nam",{"_index":1195,"title":{},"body":{"components/MiniSidebarItem.html":{}}}],["item[0",{"_index":1196,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarMenuItem.html":{}}}],["iter",{"_index":1533,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["json.stringify(quest",{"_index":1541,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["json.stringify(this.us",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["justif",{"_index":1434,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["justification_fil",{"_index":312,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["l'invio",{"_index":425,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["l'operazion",{"_index":436,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["la",{"_index":1093,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["label",{"_index":186,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["last",{"_index":164,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["layout",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["le",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["legend",{"_index":209,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"index.html":{}}}],["length",{"_index":1425,"title":{},"body":{"components/MyAbsencesComponent.html":{},"components/UserTableComponent.html":{}}}],["less",{"_index":1422,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["list",{"_index":62,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["list'},{'nam",{"_index":225,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["list.compon",{"_index":662,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.css",{"_index":1361,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["list.component.html",{"_index":762,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["list.component.t",{"_index":1340,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"coverage.html":{}}}],["list.component.ts:101",{"_index":1360,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:102",{"_index":1358,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:103",{"_index":1359,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:104",{"_index":1355,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:105",{"_index":1349,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:108",{"_index":1357,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:109",{"_index":1356,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:130",{"_index":1350,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:135",{"_index":1352,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:140",{"_index":1353,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:167",{"_index":1354,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["list.component.ts:23",{"_index":1475,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:24",{"_index":1478,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:25",{"_index":1477,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:26",{"_index":1468,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:29",{"_index":1476,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:46",{"_index":1469,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:59",{"_index":1470,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:66",{"_index":1471,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:78",{"_index":1472,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list.component.ts:84",{"_index":1474,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["list/mi",{"_index":661,"title":{},"body":{"modules/AppModule.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"coverage.html":{}}}],["lista",{"_index":1136,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["listen",{"_index":1156,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["liter",{"_index":70,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["load",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["load_cooki",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["local",{"_index":651,"title":{},"body":{"modules/AppModule.html":{}}}],["locale_id",{"_index":605,"title":{},"body":{"modules/AppModule.html":{}}}],["localeit",{"_index":656,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["logged_in",{"_index":1577,"title":{},"body":{"injectables/UserService.html":{}}}],["logic",{"_index":1204,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["login",{"_index":239,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["logindialogcompon",{"_index":238,"title":{"components/LoginDialogComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["logo",{"_index":1006,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logout",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarBodyComponent.html":{},"injectables/UserService.html":{}}}],["logresponsetyp",{"_index":290,"title":{"interfaces/LogResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["lowercas",{"_index":1728,"title":{},"body":{"components/UserTableComponent.html":{}}}],["made",{"_index":147,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["maggiori",{"_index":1460,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["make",{"_index":757,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["make_event_list",{"_index":47,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["malattia",{"_index":1376,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["manag",{"_index":242,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["manageuserscompon",{"_index":241,"title":{"components/ManageUsersComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["map",{"_index":80,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["map(data",{"_index":1535,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["mat_bottom_sheet_data",{"_index":774,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["mat_dialog_data",{"_index":120,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["matbadgemodul",{"_index":616,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheet",{"_index":775,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["matbottomsheetmodul",{"_index":617,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheetref",{"_index":766,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["matbuttonmodul",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodul",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":270,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodul",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":52,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["matdialogconfig",{"_index":119,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["matdialogmodul",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":118,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["matdividermodul",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["materi",{"_index":761,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/UserTableComponent.html":{}}}],["matexpansionmodul",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodul",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["math.abs(end.gettim",{"_index":1446,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["math.ceil(timediff",{"_index":1449,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["maticonmodul",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodul",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodul",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodul",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodul",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodul",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["matsnackbarconfig",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["matsnackbarmodul",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["matstepp",{"_index":407,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["matsteppermodul",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasourc",{"_index":1716,"title":{},"body":{"components/UserTableComponent.html":{}}}],["mattabledatasource(us",{"_index":1719,"title":{},"body":{"components/UserTableComponent.html":{}}}],["mattablemodul",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1438,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["mean",{"_index":153,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["menu",{"_index":265,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["menuitem",{"_index":283,"title":{"interfaces/MenuItem.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["mesi",{"_index":1461,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["messag",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["metadata",{"_index":29,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["method",{"_index":45,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["mini",{"_index":245,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["minisidebaritem",{"_index":244,"title":{"components/MiniSidebarItem.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["miscellan",{"_index":1805,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmmm",{"_index":937,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["mobil",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["modal",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/UserService.html":{}}}],["mode",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["modif",{"_index":1198,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["modifi",{"_index":249,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["modifica",{"_index":1335,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["modifich",{"_index":1388,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["modifyquest",{"_index":1505,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["modifyquestion(quest",{"_index":1513,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["modifyquestioncompon",{"_index":248,"title":{"components/ModifyQuestionComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["modifyrequestcompon",{"_index":251,"title":{"components/ModifyRequestComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["modul",{"_index":574,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModifyQuestionComponent.html":{},"index.html":{},"modules.html":{}}}],["month",{"_index":1440,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["more",{"_index":1427,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["mostrar",{"_index":929,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["motivazion",{"_index":941,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["move",{"_index":1296,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["multipl",{"_index":1226,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["multiplequest",{"_index":1214,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["my_survey",{"_index":1503,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["my_surveys_vers",{"_index":1502,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["myabsencescompon",{"_index":253,"title":{"components/MyAbsencesComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["myabsenceslistcompon",{"_index":255,"title":{"components/MyAbsencesListComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["myrequest",{"_index":1362,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["myrequestssubscript",{"_index":1363,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["mysurvey",{"_index":495,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["mysurveysresponsetyp",{"_index":288,"title":{"interfaces/MySurveysResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["mysurveyssubscript",{"_index":496,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["mysurveytyp",{"_index":286,"title":{"interfaces/MySurveyType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["name",{"_index":66,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["name,surname,email",{"_index":1686,"title":{},"body":{"components/UserTableComponent.html":{}}}],["navbar",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigazion",{"_index":1094,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["nb",{"_index":1463,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["need",{"_index":717,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/MyAbsencesComponent.html":{}}}],["nel",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["nessun",{"_index":989,"title":{},"body":{"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{}}}],["nessuna",{"_index":927,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["nessuno",{"_index":992,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["new",{"_index":58,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/HeaderComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["next",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":672,"title":{},"body":{"modules/AppModule.html":{}}}],["ngcircleprogressmodul",{"_index":671,"title":{},"body":{"modules/AppModule.html":{}}}],["ngcircleprogressmodule.forroot",{"_index":679,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodel",{"_index":1256,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["ngmodul",{"_index":606,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":48,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["ngoninit",{"_index":356,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["ngx",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["ngxchartsmodul",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["nome",{"_index":1732,"title":{},"body":{"components/UserTableComponent.html":{}}}],["nomina",{"_index":806,"title":{},"body":{"components/BottomListComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["non",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{}}}],["none",{"_index":488,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["nota",{"_index":1457,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["note",{"_index":21,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["now",{"_index":1261,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["null",{"_index":799,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":104,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["nuovi",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{}}}],["nuovo",{"_index":1455,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["o",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["obj",{"_index":1186,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["object",{"_index":852,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":61,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["observa",{"_index":1717,"title":{},"body":{"components/UserTableComponent.html":{}}}],["oggi",{"_index":202,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["ogni",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["ok",{"_index":196,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{}}}],["old_end_d",{"_index":1395,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["old_end_date.gettim",{"_index":1397,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["old_start_d",{"_index":1394,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["old_start_date.gettim",{"_index":1399,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["on",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["onclick(targetel",{"_index":1168,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["ondestroy",{"_index":28,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/UserTableComponent.html":{}}}],["oninit",{"_index":344,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["oop",{"_index":873,"title":{},"body":{"components/CompileComponent.html":{}}}],["oorder",{"_index":1192,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["open",{"_index":89,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["openbottomsheet",{"_index":1105,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["openbottomsheet(employe",{"_index":804,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["opendialog",{"_index":49,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["opendialog(ev",{"_index":87,"title":{},"body":{"components/AbsencesCalendarComponent.html":{}}}],["opendialog(quest",{"_index":1311,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["opendialog(request",{"_index":1473,"title":{},"body":{"components/MyAbsencesListComponent.html":{}}}],["opens/clos",{"_index":74,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["opensurvey",{"_index":498,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["opensurvey(survey",{"_index":508,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["oper",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"components/LoginDialogComponent.html":{}}}],["option",{"_index":68,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["orazio",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["order",{"_index":756,"title":{},"body":{"components/BottomListComponent.html":{},"components/HeaderComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["ordrd",{"_index":1568,"title":{},"body":{"components/SidebarComponent.html":{}}}],["other",{"_index":394,"title":{},"body":{"components/AdminComponent.html":{}}}],["otherwis",{"_index":1436,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["out",{"_index":588,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["outer",{"_index":760,"title":{},"body":{"components/BottomListComponent.html":{},"components/HeaderComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["outerstrokecolor",{"_index":688,"title":{},"body":{"modules/AppModule.html":{}}}],["outerstrokewidth",{"_index":684,"title":{},"body":{"modules/AppModule.html":{}}}],["output",{"_index":1000,"title":{},"body":{"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["over",{"_index":552,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{}}}],["overflow",{"_index":753,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["overflow:hidden",{"_index":737,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["overview",{"_index":892,"title":{"index.html":{}},"body":{"components/EmployeeComponent.html":{},"index.html":{}}}],["pa",{"_index":1274,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["page",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["param",{"_index":914,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["paramet",{"_index":64,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["params[\"employe",{"_index":916,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["part",{"_index":1176,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["parts[1",{"_index":1178,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["pass",{"_index":404,"title":{},"body":{"components/AdminComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["password",{"_index":789,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["password2",{"_index":790,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["password_confirm",{"_index":1106,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["path",{"_index":700,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":710,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pend",{"_index":19,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":808,"title":{},"body":{"components/BottomListComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["percentag",{"_index":379,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{}}}],["percentagesurveyssubmit",{"_index":499,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["percentu",{"_index":299,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["percentual",{"_index":536,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["percentual.answ",{"_index":486,"title":{},"body":{"components/AdminComponent.html":{}}}],["percentual.percentu",{"_index":461,"title":{},"body":{"components/AdminComponent.html":{}}}],["percentual.percentual}}%{{percentual.percentu",{"_index":487,"title":{},"body":{"components/AdminComponent.html":{}}}],["percentual_answ",{"_index":305,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["percentual_answers.push(percentu",{"_index":463,"title":{},"body":{"components/AdminComponent.html":{}}}],["percentualanswerresponsetyp",{"_index":298,"title":{"interfaces/PercentualAnswerResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["percentualanswertyp",{"_index":300,"title":{"interfaces/PercentualAnswerType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["perderai",{"_index":445,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["period",{"_index":1421,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["periodi",{"_index":1459,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["permessi",{"_index":951,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["permesso",{"_index":1456,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["phase",{"_index":879,"title":{},"body":{"components/CompileComponent.html":{}}}],["pipe",{"_index":652,"title":{},"body":{"modules/AppModule.html":{}}}],["posit",{"_index":332,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["possibil",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["possibl",{"_index":1254,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["possono",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["post",{"_index":872,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["post(this.api",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["post.answ",{"_index":1330,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["post.condit",{"_index":1331,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["post.previous_answ",{"_index":1333,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["post.previous_quest",{"_index":1332,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["potr",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["pq",{"_index":1273,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["prenota",{"_index":1189,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["prenotazioni",{"_index":1188,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["prevent",{"_index":721,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["previou",{"_index":829,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["previous",{"_index":759,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["previous_answ",{"_index":1209,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["previous_quest",{"_index":1210,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["prevista",{"_index":1092,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["prima",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["primari",{"_index":135,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["privat",{"_index":37,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["procedur",{"_index":1711,"title":{},"body":{"components/UserTableComponent.html":{}}}],["product",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":674,"title":{},"body":{"modules/AppModule.html":{}}}],["progressi",{"_index":447,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["properti",{"_index":36,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["propr",{"_index":1498,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["propri",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["prosegui",{"_index":890,"title":{},"body":{"components/CompileComponent.html":{}}}],["provid",{"_index":579,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["pull",{"_index":382,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["push",{"_index":398,"title":{},"body":{"components/AdminComponent.html":{}}}],["put",{"_index":1416,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["queri",{"_index":1721,"title":{},"body":{"components/UserTableComponent.html":{}}}],["queryparam",{"_index":893,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["questa",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{}}}],["questin",{"_index":875,"title":{},"body":{"components/CompileComponent.html":{}}}],["question",{"_index":294,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["question'},{'nam",{"_index":250,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["question.answ",{"_index":1289,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.answer.split",{"_index":1302,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.answer_compil",{"_index":870,"title":{},"body":{"components/CompileComponent.html":{}}}],["question.answer_of_us",{"_index":478,"title":{},"body":{"components/AdminComponent.html":{}}}],["question.component.css",{"_index":1206,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.component.html",{"_index":1207,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.condit",{"_index":1284,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.condition_confirm",{"_index":868,"title":{},"body":{"components/CompileComponent.html":{}}}],["question.current_us",{"_index":475,"title":{},"body":{"components/AdminComponent.html":{}}}],["question.id",{"_index":477,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["question.percentual_answ",{"_index":460,"title":{},"body":{"components/AdminComponent.html":{}}}],["question.previous_answ",{"_index":1287,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.previous_quest",{"_index":1285,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["question.quest",{"_index":485,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["question.step",{"_index":466,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["question.typ",{"_index":459,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["question/modifi",{"_index":1205,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["questionansw",{"_index":1215,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["questionanswers(quest",{"_index":1227,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["questionsresponsetyp",{"_index":293,"title":{"interfaces/QuestionsResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["questionstyp",{"_index":295,"title":{"interfaces/QuestionsType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["questo",{"_index":947,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["radio",{"_index":1257,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["radiu",{"_index":682,"title":{},"body":{"modules/AppModule.html":{}}}],["re",{"_index":175,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["reactiveformsmodul",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["readi",{"_index":1695,"title":{},"body":{"components/UserTableComponent.html":{}}}],["reason",{"_index":311,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["receiv",{"_index":518,"title":{},"body":{"components/AllsurveysComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/UserTableComponent.html":{}}}],["recompil",{"_index":815,"title":{},"body":{"components/CompileComponent.html":{}}}],["record",{"_index":881,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["red",{"_index":134,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["redirect",{"_index":917,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["redirectto",{"_index":709,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":778,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["refresh",{"_index":874,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["refus",{"_index":18,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["regist",{"_index":57,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["registerlocaledata",{"_index":654,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localeit",{"_index":677,"title":{},"body":{"modules/AppModule.html":{}}}],["registerresponsetyp",{"_index":308,"title":{"interfaces/RegisterResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["rel",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["relat",{"_index":372,"title":{},"body":{"components/AdminComponent.html":{},"components/EmployeeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["relativi",{"_index":448,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["remov",{"_index":743,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/UserTableComponent.html":{}}}],["request",{"_index":20,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"miscellaneous/variables.html":{}}}],["request'",{"_index":131,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["request'},{'nam",{"_index":252,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["request.component.css",{"_index":1342,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["request.component.html",{"_index":1343,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["request.end_d",{"_index":940,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["request.id",{"_index":930,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["request.reason",{"_index":931,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["request.start_d",{"_index":934,"title":{},"body":{"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["request/modifi",{"_index":1341,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["request_id",{"_index":274,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["requestallus",{"_index":357,"title":{},"body":{"components/AdminComponent.html":{}}}],["requestallusers(us",{"_index":396,"title":{},"body":{"components/AdminComponent.html":{}}}],["requestchartscompon",{"_index":256,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["requestdetailscompon",{"_index":258,"title":{"components/RequestDetailsComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["requests.servic",{"_index":122,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["requestsresponsetyp",{"_index":309,"title":{"interfaces/RequestsResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["requestsservic",{"_index":53,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"index.html":{}}}],["requestsservice'",{"_index":60,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["requestssubscript",{"_index":42,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["requestssurveysservic",{"_index":364,"title":{"injectables/RequestsSurveysService.html":{}},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"modules/AppModule.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"coverage.html":{},"index.html":{}}}],["requesttyp",{"_index":101,"title":{"interfaces/RequestType.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["requir",{"_index":1442,"title":{},"body":{"components/MyAbsencesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.id",{"_index":857,"title":{},"body":{"components/CompileComponent.html":{}}}],["res.recompil",{"_index":859,"title":{},"body":{"components/CompileComponent.html":{}}}],["reset",{"_index":587,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["reset_all_surveys_vers",{"_index":1506,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["reset_my_surveys_vers",{"_index":1507,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["reset_vers",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["respons",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["responsabili",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["restrict",{"_index":1139,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["result",{"_index":269,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":76,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["richieder",{"_index":1458,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["richiedi",{"_index":1453,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["richiest",{"_index":926,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["richiesta",{"_index":427,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["richiesto",{"_index":949,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["ricompilato",{"_index":888,"title":{},"body":{"components/CompileComponent.html":{}}}],["riepilogo",{"_index":1317,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["rifiut",{"_index":208,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["rifiuta",{"_index":944,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["rifiutata",{"_index":190,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["risponder",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["riuscita",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["riuscito",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["room",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["root",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":222,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["rout",{"_index":698,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"index.html":{},"routes.html":{}}}],["router",{"_index":363,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["routermodul",{"_index":697,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":712,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":593,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":696,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rxj",{"_index":116,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["rxjs/oper",{"_index":851,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["salva",{"_index":1406,"title":{},"body":{"components/ModifyRequestComponent.html":{}}}],["salvar",{"_index":1387,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["salvata",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["salvato",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["same",{"_index":1116,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["save",{"_index":517,"title":{},"body":{"components/AllsurveysComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["save_chang",{"_index":1348,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["save_cooki",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["scavo",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{}}}],["screen",{"_index":1699,"title":{},"body":{"components/UserTableComponent.html":{}}}],["scroll",{"_index":716,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["scroll.servic",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["scroll.service.t",{"_index":715,"title":{},"body":{"injectables/BlockScrollService.html":{},"coverage.html":{}}}],["scroll.service.ts:11",{"_index":731,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["scroll.service.ts:20",{"_index":734,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["scroll.service.ts:28",{"_index":735,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["scroll.service.ts:34",{"_index":732,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["search",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["second",{"_index":1185,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["secondari",{"_index":137,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["secondformgroup",{"_index":1253,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section",{"_index":339,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["section/abs",{"_index":9,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RequestDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["section/admin/admin.compon",{"_index":676,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/admin/admin.component.t",{"_index":336,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["section/admin/admin.component.ts:113",{"_index":375,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:133",{"_index":389,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:166",{"_index":391,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:178",{"_index":403,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:186",{"_index":387,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:221",{"_index":397,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:254",{"_index":401,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:287",{"_index":399,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:30",{"_index":406,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:31",{"_index":405,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:317",{"_index":395,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:32",{"_index":365,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:44",{"_index":367,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:54",{"_index":381,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/admin/admin.component.ts:91",{"_index":369,"title":{},"body":{"components/AdminComponent.html":{}}}],["section/allsurveys/allsurveys.compon",{"_index":670,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/allsurveys/allsurveys.component.t",{"_index":490,"title":{},"body":{"components/AllsurveysComponent.html":{},"coverage.html":{}}}],["section/allsurveys/allsurveys.component.ts:16",{"_index":511,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:17",{"_index":512,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:18",{"_index":513,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:19",{"_index":501,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:49",{"_index":504,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:61",{"_index":510,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:70",{"_index":509,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/allsurveys/allsurveys.component.ts:77",{"_index":507,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["section/compile/compile.compon",{"_index":675,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/compile/compile.component.t",{"_index":811,"title":{},"body":{"components/CompileComponent.html":{},"coverage.html":{}}}],["section/compile/compile.component.ts:103",{"_index":840,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:107",{"_index":825,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:118",{"_index":824,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:126",{"_index":836,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:165",{"_index":827,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:196",{"_index":831,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:29",{"_index":847,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:30",{"_index":843,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:31",{"_index":845,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:322",{"_index":838,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:33",{"_index":846,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:35",{"_index":844,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:37",{"_index":842,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:39",{"_index":822,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/compile/compile.component.ts:63",{"_index":841,"title":{},"body":{"components/CompileComponent.html":{}}}],["section/createsurvey/createsurvey.compon",{"_index":669,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/createsurvey/createsurvey.component.t",{"_index":1197,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"coverage.html":{}}}],["section/createsurvey/createsurvey.component.ts:336",{"_index":1243,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:338",{"_index":1240,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:339",{"_index":1231,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:340",{"_index":1242,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:341",{"_index":1241,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:342",{"_index":1233,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:344",{"_index":1238,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:345",{"_index":1236,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:347",{"_index":1232,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:348",{"_index":1239,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:349",{"_index":1237,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:351",{"_index":1217,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:353",{"_index":1235,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:355",{"_index":1234,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:376",{"_index":1224,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:385",{"_index":1223,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:396",{"_index":1230,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:427",{"_index":1225,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:437",{"_index":1228,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:445",{"_index":1221,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:455",{"_index":1218,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:463",{"_index":1219,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/createsurvey/createsurvey.component.ts:473",{"_index":1229,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["section/employee/employee.compon",{"_index":667,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/employee/employee.component.t",{"_index":891,"title":{},"body":{"components/EmployeeComponent.html":{},"coverage.html":{}}}],["section/employee/employee.component.ts:19",{"_index":913,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:20",{"_index":910,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:21",{"_index":911,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:22",{"_index":912,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:23",{"_index":902,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:62",{"_index":903,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:77",{"_index":907,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employee/employee.component.ts:92",{"_index":909,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["section/employees/employees.compon",{"_index":663,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["section/employees/employees.component.t",{"_index":952,"title":{},"body":{"components/EmployeesComponent.html":{},"coverage.html":{}}}],["section/employees/employees.component.ts:16",{"_index":974,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:17",{"_index":976,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:18",{"_index":975,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:19",{"_index":962,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:45",{"_index":966,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:57",{"_index":964,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:70",{"_index":967,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/employees/employees.component.ts:78",{"_index":969,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["section/mi",{"_index":658,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"coverage.html":{}}}],["section/request",{"_index":664,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["section/requests.servic",{"_index":639,"title":{},"body":{"modules/AppModule.html":{}}}],["section/requests.service.t",{"_index":1496,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"coverage.html":{}}}],["section/requests.service.ts:120",{"_index":1512,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:147",{"_index":1518,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:177",{"_index":1514,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:203",{"_index":1511,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:229",{"_index":1515,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:237",{"_index":1516,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:25",{"_index":1521,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:26",{"_index":1520,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:27",{"_index":1519,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:28",{"_index":1522,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["section/requests.service.ts:29",{"_index":1509,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["see",{"_index":782,"title":{},"body":{"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{}}}],["sei",{"_index":439,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["select",{"_index":92,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["selector",{"_index":30,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["send",{"_index":770,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["send_request",{"_index":1411,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["sendquest",{"_index":1508,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["sendquestions(survey",{"_index":1517,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["sent",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["server",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["servic",{"_index":86,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"modules/AppModule.html":{},"injectables/BlockScrollService.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["service'",{"_index":1364,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/UserTableComponent.html":{}}}],["set",{"_index":680,"title":{},"body":{"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["set_boss",{"_index":763,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["set_boss(id_us",{"_index":768,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["set_numb",{"_index":1107,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["set_number(v",{"_index":1117,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["setup",{"_index":358,"title":{},"body":{"components/AdminComponent.html":{}}}],["sezion",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["share",{"_index":850,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["sheet",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["short_nam",{"_index":284,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["show",{"_index":337,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["showansw",{"_index":359,"title":{},"body":{"components/AdminComponent.html":{}}}],["showanswer(quest",{"_index":400,"title":{},"body":{"components/AdminComponent.html":{}}}],["shown",{"_index":151,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["showpassword",{"_index":785,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["showpassword2",{"_index":786,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["sicuro",{"_index":440,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["side_expand",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["side_expanded:boolean",{"_index":1569,"title":{},"body":{"components/SidebarComponent.html":{}}}],["side_extend",{"_index":1548,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["sidebar",{"_index":246,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["sidebar'},{'nam",{"_index":263,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["sidebar.component.css",{"_index":1563,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1564,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar/sidebar.compon",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarbodycompon",{"_index":260,"title":{"components/SidebarBodyComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["sidebarcompon",{"_index":262,"title":{"components/SidebarComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["sidebarmenuitem",{"_index":264,"title":{"components/SidebarMenuItem.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["similar",{"_index":1200,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["simpl",{"_index":970,"title":{},"body":{"components/EmployeesComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["singl",{"_index":1255,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["snackbar",{"_index":1578,"title":{},"body":{"injectables/UserService.html":{}}}],["solut",{"_index":718,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["sondaggi",{"_index":532,"title":{},"body":{"components/AllsurveysComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["sondaggio",{"_index":450,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["sort",{"_index":971,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["sort_employe",{"_index":960,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["sort_employees(employe",{"_index":968,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["spec\\.t",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":505,"title":{},"body":{"components/AllsurveysComponent.html":{},"components/EmployeeComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["specifi",{"_index":392,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/UserService.html":{}}}],["specifica",{"_index":1404,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["spinner",{"_index":502,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["standard",{"_index":1384,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["start",{"_index":1420,"title":{},"body":{"components/MyAbsencesComponent.html":{},"components/UserTableComponent.html":{}}}],["start.gettim",{"_index":1447,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["start_dat",{"_index":313,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["startofday",{"_index":110,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["state",{"_index":132,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["state_filt",{"_index":43,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["statement",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["statist",{"_index":894,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["statistica",{"_index":946,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["statistich",{"_index":945,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HomeComponent.html":{}}}],["stato",{"_index":1493,"title":{},"body":{"components/RequestDetailsComponent.html":{}}}],["statu",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["step",{"_index":297,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["stepper",{"_index":834,"title":{},"body":{"components/CompileComponent.html":{}}}],["stepper(first",{"_index":1246,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["stepper.next",{"_index":889,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["stepquest",{"_index":360,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{}}}],["stepquestions(step",{"_index":839,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["stepquestions(survey",{"_index":402,"title":{},"body":{"components/AdminComponent.html":{}}}],["stop",{"_index":1532,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["stream",{"_index":162,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["string",{"_index":276,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["structur",{"_index":1203,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["studio",{"_index":1377,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["style",{"_index":746,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["style.setattribut",{"_index":750,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["style.textcont",{"_index":752,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["style.typ",{"_index":748,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["styletag",{"_index":727,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["styleurl",{"_index":31,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["sub",{"_index":1158,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["sub_menu",{"_index":285,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["submenu",{"_index":1166,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["submiss",{"_index":779,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["submit",{"_index":384,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["submitted.length",{"_index":526,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["subscrib",{"_index":421,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"injectables/UserService.html":{}}}],["subscript",{"_index":59,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["subsrib",{"_index":1698,"title":{},"body":{"components/UserTableComponent.html":{}}}],["succesfulli",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["success",{"_index":275,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["successo",{"_index":1320,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["successresponsetyp",{"_index":315,"title":{"interfaces/SuccessResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["summari",{"_index":343,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["superior",{"_index":1466,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["supervis",{"_index":322,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["supervision",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["supervisions/fals",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["supervisions/tru",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["supervisions_vers",{"_index":1579,"title":{},"body":{"injectables/UserService.html":{}}}],["supervisionsresponsetyp",{"_index":321,"title":{"interfaces/SupervisionsResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["supervisiontyp",{"_index":323,"title":{"interfaces/SupervisionType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["supervisor",{"_index":807,"title":{},"body":{"components/BottomListComponent.html":{}}}],["support",{"_index":1800,"title":{},"body":{"modules.html":{}}}],["surnam",{"_index":329,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["survey",{"_index":289,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/BossResponseType.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["survey(ultim",{"_index":1297,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["survey.arraystep",{"_index":434,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.id",{"_index":468,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.id_survey",{"_index":525,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["survey.nam",{"_index":483,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{}}}],["survey.quest",{"_index":430,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.questions.filter(quest",{"_index":465,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.step",{"_index":432,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey.us",{"_index":470,"title":{},"body":{"components/AdminComponent.html":{}}}],["survey_id",{"_index":506,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["surveyadminresponsetyp",{"_index":317,"title":{"interfaces/SurveyAdminResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["surveyadmintyp",{"_index":318,"title":{"interfaces/SurveyAdminType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["surveycreationresponsetyp",{"_index":316,"title":{"interfaces/SurveyCreationResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["surveys//quest",{"_index":1542,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/admin",{"_index":708,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["surveys/allsurvey",{"_index":706,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["surveys/allsurveys/fals",{"_index":1534,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/allsurveys/tru",{"_index":1526,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/allsurveyssubmitted/fals",{"_index":1539,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/allsurveyssubmitted/tru",{"_index":1537,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["surveys/answ",{"_index":869,"title":{},"body":{"components/CompileComponent.html":{}}}],["surveys/answersubmit",{"_index":476,"title":{},"body":{"components/AdminComponent.html":{}}}],["surveys/compile/:id/:recompil",{"_index":707,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["surveys/createsurvey",{"_index":705,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["surveys/mysurvey",{"_index":480,"title":{},"body":{"components/AdminComponent.html":{}}}],["surveys/submitsurvey",{"_index":882,"title":{},"body":{"components/CompileComponent.html":{}}}],["surveys/survey",{"_index":862,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["surveys/usersubmit",{"_index":467,"title":{},"body":{"components/AdminComponent.html":{}}}],["surveysresponsetyp",{"_index":320,"title":{"interfaces/SurveysResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["surveytyp",{"_index":296,"title":{"interfaces/SurveyType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["svg",{"_index":1801,"title":{},"body":{"modules.html":{}}}],["sviluppata",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{}}}],["swal",{"_index":411,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["swal(\"fatto",{"_index":884,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["swal(\"oop",{"_index":423,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["sweetalert",{"_index":412,"title":{},"body":{"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["swimlane/ngx",{"_index":608,"title":{},"body":{"modules/AppModule.html":{}}}],["switchmap",{"_index":849,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["tabl",{"_index":267,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["table.compon",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.css",{"_index":1688,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.html",{"_index":1689,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.t",{"_index":1685,"title":{},"body":{"components/UserTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:25",{"_index":1702,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:26",{"_index":1703,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:27",{"_index":1715,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:28",{"_index":1714,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:29",{"_index":1696,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:54",{"_index":1705,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:63",{"_index":1709,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table.component.ts:70",{"_index":1712,"title":{},"body":{"components/UserTableComponent.html":{}}}],["table/us",{"_index":644,"title":{},"body":{"modules/AppModule.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["tableusertyp",{"_index":331,"title":{"interfaces/TableUserType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["targetel",{"_index":1171,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["teacher",{"_index":1164,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["test",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["test.t",{"_index":1794,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":441,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["text/css",{"_index":749,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["th",{"_index":853,"title":{},"body":{"components/CompileComponent.html":{}}}],["tha",{"_index":1160,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["then(willdelet",{"_index":454,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["thet",{"_index":181,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["third",{"_index":1191,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this._elementref.nativeelement.contain",{"_index":1170,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this._formbuilder.group",{"_index":1269,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.act",{"_index":1172,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.activedayisopen",{"_index":169,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.all_survey",{"_index":1523,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.all_surveys_vers",{"_index":1531,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.allsurvey",{"_index":516,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.allsurveys.length",{"_index":528,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.allsurveyssubscript",{"_index":514,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.answ",{"_index":1265,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.answers.indexof(answ",{"_index":1309,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.answers.push(this.answ",{"_index":1275,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.answers.splice(index",{"_index":1310,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.answers.tostr",{"_index":1290,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.api",{"_index":178,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["this.arraystep",{"_index":860,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.arraystep.push(this.step",{"_index":1294,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.arraystep[this.arraystep.length",{"_index":880,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.blockscrollservice.dis",{"_index":1087,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["this.blockscrollservice.en",{"_index":1683,"title":{},"body":{"injectables/UserService.html":{}}}],["this.bottomsheetref",{"_index":781,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.buildstyleel",{"_index":740,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["this.condit",{"_index":1283,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.cookieservice.deleteal",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookieservice.set(\"logged_in",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookieservice.set(\"token",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookieservice.set(\"us",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createarraystep",{"_index":865,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.createarraystep(survey",{"_index":435,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.custom_reason",{"_index":1379,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.data.question.answer.length",{"_index":1322,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.question.condition_answ",{"_index":1327,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.question.quest",{"_index":1324,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.question.step",{"_index":1326,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.question.typ",{"_index":1325,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.data.request.id",{"_index":1392,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.data.request.reason",{"_index":1375,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.data.survey",{"_index":1328,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.datasourc",{"_index":1718,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.datasource.filt",{"_index":1729,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.dialog.open(modifyquestioncompon",{"_index":1312,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.dialogref",{"_index":1393,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.dialogref.clos",{"_index":198,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.email",{"_index":795,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.employe",{"_index":920,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["this.employee_requestssubscript",{"_index":918,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["this.employeessubscript",{"_index":978,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.end_d",{"_index":1373,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.end_date.gettim",{"_index":1396,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.filelist",{"_index":1381,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.filelist.length",{"_index":1400,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.filt",{"_index":1369,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.firstformgroup",{"_index":1268,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.forwardstep",{"_index":1300,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.httpclient",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.delete(url",{"_index":1540,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.httpclient.get",{"_index":1525,"title":{},"body":{"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.get(this.api",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(url",{"_index":469,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.httpclient.post(url",{"_index":883,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["this.httpclient.put(url",{"_index":1543,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.id",{"_index":856,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.issubmitted(survey",{"_index":530,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.item.nam",{"_index":1174,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.item.short_nam",{"_index":1179,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.items.push(obj",{"_index":1187,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.load_cooki",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logged_in",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["this.make_event_list",{"_index":157,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.my_survey",{"_index":1536,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.my_surveys_vers",{"_index":1538,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["this.myrequest",{"_index":1367,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.myrequests.length",{"_index":1370,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.myrequestssubscript",{"_index":1365,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.mysurvey",{"_index":521,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.mysurveys.filt",{"_index":524,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.mysurveys.length",{"_index":529,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.mysurveyssubscript",{"_index":519,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.nam",{"_index":793,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.numb",{"_index":803,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.password",{"_index":796,"title":{},"body":{"components/BottomListComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.password2",{"_index":800,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.previous_answ",{"_index":1288,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.previous_quest",{"_index":1291,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.previous_question.id",{"_index":1286,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.previous_questions.filt",{"_index":1303,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.previous_questions.filter(quest",{"_index":1304,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.quest",{"_index":863,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.questionanswers(this.data.quest",{"_index":1323,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.questions.filter(quest",{"_index":866,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.questions.indexof(quest",{"_index":1307,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.questions.length",{"_index":1299,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.questions.push(quest",{"_index":1292,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.questions.splice(index",{"_index":1308,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.ready.emit(0",{"_index":1722,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.ready.emit(users.length",{"_index":1723,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.reason",{"_index":1378,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.recompil",{"_index":858,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.request",{"_index":156,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.requestsservice.all_requests$.subscrib",{"_index":155,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.requestsservice.employees$.subscrib",{"_index":979,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.requestsservice.employees_requests$.subscrib",{"_index":919,"title":{},"body":{"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{}}}],["this.requestsservice.modify_request",{"_index":1391,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.requestsservice.myrequests$.subscrib",{"_index":1366,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.requestsservice.reset_all_requests_vers",{"_index":159,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.requestsservice.reset_employees_requests_vers",{"_index":982,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.requestsservice.reset_employees_vers",{"_index":981,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.requestsservice.reset_myrequests_vers",{"_index":1368,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.requestsservice.send_request",{"_index":1437,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["this.requestssubscript",{"_index":154,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeesComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.requestssurveysservice.all_surveys$.subscrib",{"_index":515,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.requestssurveysservice.deletequestion(this.data.question.id",{"_index":1329,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.requestssurveysservice.deletesurvey(survey.id",{"_index":456,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.requestssurveysservice.deletesurvey(this.survey",{"_index":1313,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.requestssurveysservice.modifyquestion(this.data.question.id",{"_index":1334,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.requestssurveysservice.my_surveys$.subscrib",{"_index":520,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.requestssurveysservice.reset_all_surveys_vers",{"_index":522,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.requestssurveysservice.reset_my_surveys_vers",{"_index":523,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.requestssurveysservice.sendquestions(this.survey",{"_index":1293,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.route.params.subscribe(r",{"_index":855,"title":{},"body":{"components/CompileComponent.html":{}}}],["this.route.queryparams.subscribe(param",{"_index":915,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["this.router.navigate([\"/hom",{"_index":887,"title":{},"body":{"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.router.navigate([\"/surveys/compil",{"_index":531,"title":{},"body":{"components/AllsurveysComponent.html":{}}}],["this.router.url.split",{"_index":1177,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.save_cooki",{"_index":1682,"title":{},"body":{"injectables/UserService.html":{}}}],["this.secondformgroup",{"_index":1272,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.set_boss.emit(us",{"_index":1730,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.setup",{"_index":414,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.showpassword",{"_index":1088,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["this.side_expand",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.open",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["this.sort_employees(data",{"_index":980,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["this.start_d",{"_index":1371,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.start_date.gettim",{"_index":1398,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["this.start_date.sethours(0",{"_index":1435,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["this.step",{"_index":864,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.styletag",{"_index":739,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["this.supervis",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["this.supervisions$.subscribe(supervis",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["this.supervisions_vers",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["this.surnam",{"_index":794,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.survey",{"_index":481,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.surveys.indexof(survey",{"_index":457,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.surveys.splice(index",{"_index":458,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.tim",{"_index":1266,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.timer.subscribe(x",{"_index":1301,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.today",{"_index":1182,"title":{},"body":{"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.toggle.emit",{"_index":1008,"title":{},"body":{"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{}}}],["this.token",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["this.typ",{"_index":1281,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["this.upgradequestionslist",{"_index":861,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["this.us",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users$.subscribe(us",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users_vers",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.add_user(us",{"_index":797,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.userservice.get_login_statu",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.get_token",{"_index":420,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"injectables/RequestsSurveysService.html":{}}}],["this.userservice.get_us",{"_index":805,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.userservice.get_user_by_id(params[\"employe",{"_index":921,"title":{},"body":{"components/EmployeeComponent.html":{}}}],["this.userservice.get_user_by_id(this.data.request.id_us",{"_index":183,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["this.userservice.logout",{"_index":1009,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.userservice.reset_vers",{"_index":1724,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.userservice.set_boss(id_us",{"_index":780,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["this.userservice.try_login(this.email",{"_index":1089,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["this.userssubscription.unsubscrib",{"_index":1731,"title":{},"body":{"components/UserTableComponent.html":{}}}],["this.validate_period_len",{"_index":1441,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["this.viewd",{"_index":167,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["thoken",{"_index":1528,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["through",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":877,"title":{},"body":{"components/CompileComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["timediff",{"_index":1445,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["timer",{"_index":1263,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["titl",{"_index":438,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["titlecas",{"_index":206,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["today",{"_index":1547,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["toggl",{"_index":558,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{}}}],["toggle_show_password",{"_index":1068,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{}}}],["toggle_show_password2",{"_index":1108,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["toggle_sidebar",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["token",{"_index":292,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"components/ModifyQuestionComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["top",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{}}}],["total",{"_index":801,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["track",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["tri",{"_index":1080,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["true",{"_index":97,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/CompileComponent.html":{},"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try_login",{"_index":1069,"title":{},"body":{"components/LoginDialogComponent.html":{},"injectables/UserService.html":{}}}],["try_login(email",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["tue",{"_index":1097,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/MiniSidebarItem.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["tuo",{"_index":1465,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["tuoi",{"_index":993,"title":{},"body":{"components/EmployeesComponent.html":{}}}],["tutt",{"_index":207,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MiniSidebarItem.html":{},"components/MyAbsencesListComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["tutti",{"_index":446,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["type",{"_index":67,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ultim",{"_index":832,"title":{},"body":{"components/CompileComponent.html":{}}}],["un",{"_index":1454,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["una",{"_index":442,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["unsubscrib",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["unsubscript",{"_index":85,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/UserTableComponent.html":{}}}],["until",{"_index":1260,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["unvalid",{"_index":1401,"title":{},"body":{"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["updat",{"_index":1499,"title":{},"body":{"injectables/RequestsSurveysService.html":{}}}],["upgradequestionslist",{"_index":820,"title":{},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["upload",{"_index":1321,"title":{},"body":{"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{}}}],["url",{"_index":415,"title":{},"body":{"components/AdminComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/RequestsSurveysService.html":{},"injectables/UserService.html":{}}}],["us",{"_index":82,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{}}}],["user",{"_index":176,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"interfaces/AnswerResponseType.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogResponseType.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"components/RequestDetailsComponent.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["user.email",{"_index":489,"title":{},"body":{"components/AdminComponent.html":{},"components/BottomListComponent.html":{}}}],["user.nam",{"_index":185,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["user.servic",{"_index":123,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["user.surnam",{"_index":184,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/BottomListComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["userresponsetyp",{"_index":325,"title":{"interfaces/UserResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["users'},{'nam",{"_index":243,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["users.compon",{"_index":642,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["users.component.css",{"_index":784,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["users.component.html",{"_index":783,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["users.component.t",{"_index":755,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:113",{"_index":1114,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:130",{"_index":1118,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:137",{"_index":1122,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:144",{"_index":1123,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:151",{"_index":1124,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:20",{"_index":767,"title":{},"body":{"components/BottomListComponent.html":{}}}],["users.component.ts:22",{"_index":773,"title":{},"body":{"components/BottomListComponent.html":{}}}],["users.component.ts:30",{"_index":769,"title":{},"body":{"components/BottomListComponent.html":{}}}],["users.component.ts:45",{"_index":1130,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:46",{"_index":1131,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:49",{"_index":1128,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:50",{"_index":1127,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:51",{"_index":1132,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:52",{"_index":1126,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:53",{"_index":1129,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:54",{"_index":1110,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:64",{"_index":1111,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:85",{"_index":1112,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.component.ts:94",{"_index":1113,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["users.includes(user.id",{"_index":473,"title":{},"body":{"components/AdminComponent.html":{}}}],["users.length",{"_index":1720,"title":{},"body":{"components/UserTableComponent.html":{}}}],["users/fals",{"_index":471,"title":{},"body":{"components/AdminComponent.html":{},"injectables/UserService.html":{}}}],["users/manag",{"_index":641,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{},"coverage.html":{}}}],["users/set_boss",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["users/tru",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["users/us",{"_index":643,"title":{},"body":{"modules/AppModule.html":{},"components/UserTableComponent.html":{},"coverage.html":{}}}],["users_vers",{"_index":1580,"title":{},"body":{"injectables/UserService.html":{}}}],["userservic",{"_index":54,"title":{"injectables/UserService.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["userservice'",{"_index":777,"title":{},"body":{"components/BottomListComponent.html":{},"components/ManageUsersComponent.html":{}}}],["userservice.get_boss_name(element.id",{"_index":1738,"title":{},"body":{"components/UserTableComponent.html":{}}}],["userservice.get_boss_name(userservice.get_user().id",{"_index":1467,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["userservice.get_nam",{"_index":1010,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["usersresponsetyp",{"_index":326,"title":{"interfaces/UsersResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["userssubmittedresponsetyp",{"_index":327,"title":{"interfaces/UsersSubmittedResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"components/AdminComponent.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["userssubmittedtyp",{"_index":328,"title":{"interfaces/UsersSubmittedType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["userssubscript",{"_index":1692,"title":{},"body":{"components/UserTableComponent.html":{}}}],["usertablecompon",{"_index":266,"title":{"components/UserTableComponent.html":{}},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["usertyp",{"_index":291,"title":{"interfaces/UserType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"components/BottomListComponent.html":{},"interfaces/ConditionResponseType.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"interfaces/LogResponseType.html":{},"components/ManageUsersComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["usevalu",{"_index":694,"title":{},"body":{"modules/AppModule.html":{}}}],["utent",{"_index":990,"title":{},"body":{"components/EmployeesComponent.html":{},"components/ManageUsersComponent.html":{},"injectables/UserService.html":{}}}],["utenti",{"_index":1012,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["val",{"_index":1121,"title":{},"body":{"components/ManageUsersComponent.html":{}}}],["valid",{"_index":1070,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["validate_period_len",{"_index":1412,"title":{},"body":{"components/MyAbsencesComponent.html":{}}}],["validators.requir",{"_index":1271,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["valu",{"_index":96,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AppComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["variabl",{"_index":854,"title":{"miscellaneous/variables.html":{}},"body":{"components/CompileComponent.html":{},"components/ModifyQuestionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":1199,"title":{},"body":{"components/ModifyQuestionComponent.html":{}}}],["version",{"_index":334,"title":{},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{}}}],["versionresponsetyp",{"_index":333,"title":{"interfaces/VersionResponseType.html":{}},"body":{"interfaces/AddRequestResponseType.html":{},"interfaces/AnswerResponseType.html":{},"interfaces/BossResponseType.html":{},"interfaces/ConditionResponseType.html":{},"interfaces/LogResponseType.html":{},"interfaces/MenuItem.html":{},"interfaces/MySurveyType.html":{},"interfaces/MySurveysResponseType.html":{},"interfaces/PercentualAnswerResponseType.html":{},"interfaces/PercentualAnswerType.html":{},"interfaces/QuestionsResponseType.html":{},"interfaces/QuestionsType.html":{},"interfaces/RegisterResponseType.html":{},"interfaces/RequestType.html":{},"interfaces/RequestsResponseType.html":{},"injectables/RequestsSurveysService.html":{},"interfaces/SuccessResponseType.html":{},"interfaces/SupervisionType.html":{},"interfaces/SupervisionsResponseType.html":{},"interfaces/SurveyAdminResponseType.html":{},"interfaces/SurveyAdminType.html":{},"interfaces/SurveyCreationResponseType.html":{},"interfaces/SurveyType.html":{},"interfaces/SurveysResponseType.html":{},"interfaces/TableUserType.html":{},"interfaces/UserResponseType.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"interfaces/UsersResponseType.html":{},"interfaces/UsersSubmittedResponseType.html":{},"interfaces/UsersSubmittedType.html":{},"interfaces/VersionResponseType.html":{},"coverage.html":{}}}],["viewdat",{"_index":44,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/RequestDetailsComponent.html":{}}}],["visibl",{"_index":1077,"title":{},"body":{"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["vision",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":77,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/AdminComponent.html":{},"components/AllsurveysComponent.html":{},"components/AppComponent.html":{},"injectables/BlockScrollService.html":{},"components/BottomListComponent.html":{},"components/CompileComponent.html":{},"components/EmployeeComponent.html":{},"components/EmployeesComponent.html":{},"components/HeaderComponent.html":{},"components/LoginDialogComponent.html":{},"components/ManageUsersComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"injectables/RequestsSurveysService.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarMenuItem.html":{},"injectables/UserService.html":{},"components/UserTableComponent.html":{}}}],["volta",{"_index":443,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{}}}],["warn",{"_index":452,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{}}}],["way",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["whand",{"_index":1073,"title":{},"body":{"components/LoginDialogComponent.html":{}}}],["whitespac",{"_index":1726,"title":{},"body":{"components/UserTableComponent.html":{}}}],["whole",{"_index":1544,"title":{},"body":{"components/SidebarBodyComponent.html":{}}}],["wich",{"_index":954,"title":{},"body":{"components/EmployeesComponent.html":{},"components/UserTableComponent.html":{}}}],["willdelet",{"_index":455,"title":{},"body":{"components/AdminComponent.html":{},"components/ModifyQuestionComponent.html":{},"components/ModifyRequestComponent.html":{},"components/MyAbsencesListComponent.html":{},"injectables/UserService.html":{}}}],["window",{"_index":724,"title":{},"body":{"injectables/BlockScrollService.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{}}}],["window.screen.width",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/MiniSidebarItem.html":{},"components/SidebarBodyComponent.html":{},"components/SidebarMenuItem.html":{},"components/UserTableComponent.html":{}}}],["windowscrol",{"_index":723,"title":{},"body":{"injectables/BlockScrollService.html":{}}}],["wonderfulcompani",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":205,"title":{},"body":{"components/AbsencesCalendarComponent.html":{},"components/EmployeeComponent.html":{},"components/MyAbsencesListComponent.html":{},"components/RequestDetailsComponent.html":{},"components/SidebarBodyComponent.html":{}}}],["zoom",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AbsencesCalendarComponent.html":{"url":"components/AbsencesCalendarComponent.html","title":"component - AbsencesCalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AbsencesCalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/absences-calendar/absences-calendar.component.ts\n\n\n    \n        Description\n    \n    \n        Absences calendar, for every day are displayed all the approved, refused and pending requests for absences\nNOTE: Component base code got from angular-calendar: https://mattlewis92.github.io/angular-calendar/docs/\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                absences-calendar\n            \n\n            \n                styleUrls\n                absences-calendar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./absences-calendar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeDayIsOpen\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                events\n                            \n                            \n                                    Private\n                                requests\n                            \n                            \n                                    Private\n                                requestsSubscription\n                            \n                            \n                                    Private\n                                state_filter\n                            \n                            \n                                    Private\n                                viewDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dayClicked\n                            \n                            \n                                make_event_list\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, RequestsService: RequestsService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:57\n                            \n                        \n\n                \n                    \n                            The constructor registers a new subscription to RequestsService's observable to get the list of all the absence requests in the company\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \ndayClicked(undefined: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Handler for clicks on a day of the calendar, if opens/closes dayly-absence list for the clicked day\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make_event_list\n                            \n                            \n                        \n                    \n                \n                \n                    \nmake_event_list()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            This method gets a list of requests and maps it into an CalendarEvent List that can be used as input for the calendar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Unsubscription from requests-service observable\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            This opens request-details dialog, data of the selected request are injected into it\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeDayIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeDayIsOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     CalendarEvent[]\n\n                    \n                \n                    \n                        \n                            Type :     CalendarEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requests:     RequestType[]\n\n                    \n                \n                    \n                        \n                            Type :     RequestType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requestsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestsSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            state_filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state_filter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewDate:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy } from \"@angular/core\";\nimport {\n  startOfDay,\n  endOfDay,\n  endOfMonth,\n  isSameDay,\n  isSameMonth\n} from \"date-fns\";\nimport { Subscription } from \"rxjs\";\nimport { CalendarEvent, CalendarEventAction } from \"angular-calendar\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA\n} from \"@angular/material\";\nimport { RequestsService } from \"../requests.service\";\nimport { UserService } from \"../../user.service\";\nimport { RequestType } from \"../../interfaces\";\nimport * as config from \"../../config.json\";\n\n//colors for absence indicators, it changes according to request's state\nconst colors: any = {\n  red: {\n    //refused requests\n    primary: \"#ad2121\",\n    secondary: \"#FAE3E3\"\n  },\n  grey: {\n    //pending requests\n    primary: \"#888888\",\n    secondary: \"#aaaaaa\"\n  },\n  green: {\n    //approved requests\n    primary: \"#21ad21\",\n    secondary: \"#e3fae3\"\n  }\n};\n\n/**\n * Absences calendar, for every day are displayed all the approved, refused and pending requests for absences\n *\n * NOTE: Component base code got from angular-calendar: https://mattlewis92.github.io/angular-calendar/docs/\n */\n@Component({\n  selector: \"absences-calendar\",\n  templateUrl: \"./absences-calendar.component.html\",\n  styleUrls: [\"./absences-calendar.component.css\"]\n})\nexport class AbsencesCalendarComponent implements OnDestroy {\n  private requests: RequestType[]; //list of all request made by any of the employees\n  private requestsSubscription: Subscription;\n  private events: CalendarEvent[]; //Type of event-item to be injected in the calendar\n  private viewDate: Date = new Date(); //selected date\n  private activeDayIsOpen: boolean = true; //If true the list of absences for the active day is shown\n  private state_filter: number = -1; //value of the state filter (-1 means no filter)\n\n  /**\n   * The constructor registers a new subscription to RequestsService's observable to get the list of all the absence requests in the company\n   */\n  constructor(\n    public dialog: MatDialog,\n    private RequestsService: RequestsService,\n    private UserService: UserService\n  ) {\n    //subscription to observable to get requests list from requests-service\n    this.requestsSubscription = this.RequestsService.all_requests$.subscribe(\n      data => {\n        this.requests = data;\n        this.make_event_list(); //Generate the list for the calendar for requests list\n      }\n    );\n    this.RequestsService.reset_all_requests_version(); //force observable to emit data in the stream even if it has not changed from last check\n  }\n\n  /**\n   * Handler for clicks on a day of the calendar, if opens/closes dayly-absence list for the clicked day\n   */\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false; //close event list if it was opened for the clicked day\n      } else {\n        this.activeDayIsOpen = true; //open the list\n        this.viewDate = date; //select the clicked day\n      }\n    }\n  }\n\n  /**\n   * This method gets a list of requests and maps it into an CalendarEvent List that can be used as input for the calendar\n   */\n  make_event_list() {\n    var res = [];\n    var user;\n    var color;\n    for (var i = 0; i ,\n    @Inject(MAT_DIALOG_DATA) public data: { request: RequestType },\n    private UserService: UserService\n  ) {\n    this.api = (config).api;\n  }\n\n  /**\n   * Get the complete name of the user thet made the request\n   */\n  get_user_name() {\n    var user = this.UserService.get_user_by_id(this.data.request.id_user);\n    return user.surname + \" \" + user.name;\n  }\n\n  /**\n   * Get the label to be displayed according to the request state\n   */\n  get_state_label(state) {\n    if (state == 1) return \"Approvata\";\n    if (state == 2) return \"Rifiutata\";\n    return \"In Attesa di Conferma\";\n  }\n\n  /**\n   * Get the class to change the color of request indicator according to the request state\n   */\n  get_state_label_class(state) {\n    if (state == 1) return \"green\";\n    if (state == 2) return \"red\";\n    return \"grey\";\n  }\n\n  /**\n   * Method called when user clicks 'ok' button, just closes the dialog\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    Calendario Assenze\n  \n  \n    \n      \n        \n          \n            Indietro\n          \n          \n            Oggi\n          \n          \n            Avanti\n          \n        \n      \n      \n        {{viewDate | date:'MMMM y' | titlecase}}\n      \n      \n        \n            \n              Tutte\n              In Attesa\n              Approvate\n              Rifiutate\n            \n        \n        \n         Approvate\n         Rifiutate\n         In attesa\n      \n    \n    \n    \n        \n    \n    \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Calendario Assenze                                            Indietro                                Oggi                                Avanti                                      {{viewDate | date:\\'MMMM y\\' | titlecase}}                                              Tutte              In Attesa              Approvate              Rifiutate                                     Approvate         Rifiutate         In attesa                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AbsencesCalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddRequestResponseType.html":{"url":"interfaces/AddRequestResponseType.html","title":"interface - AddRequestResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddRequestResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        request_id\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request_id\n                                    \n                                \n                                \n                                    \n                                        request_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/surveys-section/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows frontend section for survey administration, and contains an expandible list for every survey and a summary with answers of all users\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                current_user\n                            \n                            \n                                surveys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createArrayStep\n                            \n                            \n                                deleteSurvey\n                            \n                            \n                                fillAnswerPercentual\n                            \n                            \n                                fillQuestions\n                            \n                            \n                                fillUserList\n                            \n                            \n                                injectPercentual\n                            \n                            \n                                isMax\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                RequestallUsers\n                            \n                            \n                                Setup\n                            \n                            \n                                showAnswer\n                            \n                            \n                                stepQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(UserService: UserService, HttpClient: HttpClient, router: Router, RequestsSurveysService: RequestsSurveysService)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/admin/admin.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsSurveysService\n                                                  \n                                                        \n                                                                    RequestsSurveysService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createArrayStep\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateArrayStep(survey: SurveyAdminType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                        \n                                                                    SurveyAdminType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSurvey\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSurvey(survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Delete survey from database(with related questions ecc...)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillAnswerPercentual\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillAnswerPercentual(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Create array with all answers of question and insert percentage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillQuestions(survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Pull questions already submitted from database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillUserList\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillUserList(survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:186\n                            \n                        \n\n\n                \n                    \n                            Pull from database all users that submitted survey\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            injectPercentual\n                            \n                            \n                        \n                    \n                \n                \n                    \ninjectPercentual(id: , percentual_answers: , percentual: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            Pull from database percentages of answers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        percentual_answers\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        percentual\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMax\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMax(percentual: , percentual_answers: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:166\n                            \n                        \n\n\n                \n                    \n                            Return true if specified percentual is greater of all others answer percentages of the question\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        percentual\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        percentual_answers\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:317\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RequestallUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \nRequestallUsers(users: , survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:221\n                            \n                        \n\n\n                \n                    \n                            Pull all users from database and push only users that submitted survey\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Setup\n                            \n                            \n                        \n                    \n                \n                \n                    \nSetup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:287\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAnswer(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:254\n                            \n                        \n\n\n                \n                    \n                            Pull from database answer submitted by specified user in specified question\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepQuestions(survey: SurveyAdminType, step: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:178\n                            \n                        \n\n\n                \n                    \n                            Return only questions of specified step passed by parameter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                        \n                                                                    SurveyAdminType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        step\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QuestionsType[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current_user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current_user:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            surveys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        surveys:     SurveyAdminType[]\n\n                    \n                \n                    \n                        \n                            Type :     SurveyAdminType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/admin/admin.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\nimport { RequestsSurveysService } from \"../requests.service\";\nimport {\n  SurveyAdminType,\n  SurveyAdminResponseType,\n  QuestionsResponseType,\n  QuestionsType,\n  PercentualAnswerResponseType,\n  UsersResponseType,\n  UsersSubmittedResponseType,\n  AnswerResponseType\n} from \"../../interfaces\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport swal from \"sweetalert\";\nimport { UserService } from \"../../user.service\";\nimport * as config from \"../../config.json\";\n\n/**\n * This component shows frontend section for survey administration, and contains an expandible list for every survey and a summary with answers of all users\n */\n\n@Component({\n  selector: \"admin\",\n  templateUrl: \"./admin.component.html\",\n  styleUrls: [\"./admin.component.css\"]\n})\nexport class AdminComponent implements OnInit {\n  surveys: SurveyAdminType[]; //list of all surveys\n  api: string;\n  current_user: string; //current user\n\n  constructor(\n    private UserService: UserService,\n    private HttpClient: HttpClient,\n    private router: Router,\n    private RequestsSurveysService: RequestsSurveysService\n  ) {\n    this.api = (config).api;\n    this.Setup();\n  }\n\n  createArrayStep(survey: SurveyAdminType) {\n    for (var i = 1; i (url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        survey.questions = data.questions;\n        survey.step = data.step[0].step;\n        survey.ArrayStep = [];\n        this.createArrayStep(survey);\n        for (var i = 0; i  {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Delete survey from database(with related questions ecc...)\n   */\n\n  deleteSurvey(survey) {\n    swal({\n      title: \"Sei sicuro?\",\n      text:\n        \"Una volta eliminato perderai tutti i progressi relativi al sondaggio\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        this.RequestsSurveysService.deleteSurvey(survey.id);\n        var index = this.surveys.indexOf(survey);\n        if (index > -1) {\n          this.surveys.splice(index, 1);\n        }\n      }\n    });\n  }\n\n  /**\n   * Create array with all answers of question and insert percentage\n   */\n\n  fillAnswerPercentual(question) {\n    if (question.type == \"Open\") return;\n    question.percentual_answers = [];\n    for (var i = 0; i (url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        percentual.percentual = data.percentual; //Pull percentual\n        percentual_answers.push(percentual); //Push answer in array\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Return true if specified percentual is greater of all others answer percentages of the question\n   */\n\n  isMax(percentual, percentual_answers) {\n    var ismax = true;\n    for (var i = 0; i  percentual) ismax = false;\n    }\n    return ismax;\n  }\n\n  /**\n   * Return only questions of specified step passed by parameter\n   */\n\n  stepQuestions(survey: SurveyAdminType, step: number): QuestionsType[] {\n    return survey.questions.filter(question => question.step == step);\n  }\n\n  /**\n   * Pull from database all users that submitted survey\n   */\n\n  fillUserList(survey) {\n    var url = this.api + \"surveys/usersubmitted/\" + survey.id;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        var users = [];\n        for (var i = 0; i  {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Pull all users from database and push only users that submitted survey\n   */\n\n  RequestallUsers(users, survey) {\n    survey.users = [];\n    var url = this.api + \"users/false\";\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        survey.users = [];\n        survey.users = data.users.filter(user => users.includes(user.id)); //Filter function\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Pull from database answer submitted by specified user in specified question\n   */\n\n  showAnswer(question) {\n    if (!question.current_user) return;\n    var url =\n      this.api +\n      \"surveys/answersubmitted/\" +\n      question.id +\n      \"/\" +\n      question.current_user;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        question.answer_of_user = data.answer; //Pull answer\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  Setup(){\n    var url = this.api + \"surveys/mysurveys\";\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        this.surveys = data.surveys;\n        for (var i = 0; i  {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{survey.name}}\n        \n      \n      Elimina\n      \n        \n          \n            {{question.question}}\n            \n              {{percentual.answer}} {{percentual.percentual}}%{{percentual.percentual}}%\n            \n            \n              \n                \n                  None\n                  \n                    {{user.email}}\n                  \n                \n              \n            \n            \n              {{question.answer_of_user}}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{survey.name}}                    Elimina                                    {{question.question}}                          {{percentual.answer}} {{percentual.percentual}}%{{percentual.percentual}}%                                                                        None                                      {{user.email}}                                                                                      {{question.answer_of_user}}                                          '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AllsurveysComponent.html":{"url":"components/AllsurveysComponent.html","title":"component - AllsurveysComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AllsurveysComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/surveys-section/allsurveys/allsurveys.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                allsurveys\n            \n\n            \n                styleUrls\n                allsurveys.component.css\n            \n\n\n\n            \n                templateUrl\n                ./allsurveys.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allsurveys\n                            \n                            \n                                    Private\n                                allsurveysSubscription\n                            \n                            \n                                    Private\n                                mysurveys\n                            \n                            \n                                    Private\n                                mysurveysSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSubmitted\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSurvey\n                            \n                            \n                                percentageSurveysSubmitted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(RequestsSurveysService: RequestsSurveysService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/allsurveys/allsurveys.component.ts:19\n                            \n                        \n\n                \n                    \n                            This component shows frontend section for surveys list, and contains  a list of all surveys and a percentage spinner of submitted surveys\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        RequestsSurveysService\n                                                  \n                                                        \n                                                                    RequestsSurveysService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSubmitted\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSubmitted(survey_id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Return true if specific survey was submitted by user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey_id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSurvey\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSurvey(survey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Open Survey clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percentageSurveysSubmitted\n                            \n                            \n                        \n                    \n                \n                \n                    \npercentageSurveysSubmitted()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Return percentage of surveys submitted by user\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            allsurveys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allsurveys:     SurveyType[]\n\n                    \n                \n                    \n                        \n                            Type :     SurveyType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            allsurveysSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allsurveysSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mysurveys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mysurveys:     MySurveyType[]\n\n                    \n                \n                    \n                        \n                            Type :     MySurveyType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mysurveysSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mysurveysSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/allsurveys/allsurveys.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { RequestsSurveysService } from \"../requests.service\";\nimport { Subscription } from \"rxjs\";\nimport {} from \"@angular/material\";\nimport { SurveyType, MySurveyType } from \"../../interfaces\";\nimport * as config from \"../../config.json\";\nimport swal from \"sweetalert\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"allsurveys\",\n  templateUrl: \"./allsurveys.component.html\",\n  styleUrls: [\"./allsurveys.component.css\"]\n})\nexport class AllsurveysComponent implements OnInit {\n  private allsurveys: SurveyType[]; //list of the surveys\n  private allsurveysSubscription: Subscription;\n  private mysurveys: MySurveyType[]; //list of my surveys\n  private mysurveysSubscription: Subscription;\n\n  /**\n   * This component shows frontend section for surveys list, and contains  a list of all surveys and a percentage spinner of submitted surveys\n   */\n\n  constructor(\n    private RequestsSurveysService: RequestsSurveysService,\n    private router: Router\n  ) {\n    this.allsurveysSubscription = this.RequestsSurveysService.all_surveys$.subscribe(\n      surveys => {\n        this.allsurveys = surveys; //save received data\n      }\n    );\n\n    this.mysurveysSubscription = this.RequestsSurveysService.my_surveys$.subscribe(\n      surveys => {\n        this.mysurveys = surveys; //save received data\n      }\n    );\n\n    this.RequestsSurveysService.reset_all_surveys_version();\n    this.RequestsSurveysService.reset_my_surveys_version();\n  }\n\n  /**\n   * Return true if specific survey was submitted by user\n   */\n\n  isSubmitted(survey_id: number) {\n    var submitted = this.mysurveys.filter(\n      survey => survey.id_survey == survey_id\n    );\n    if (submitted.length > 0) return true;\n    return false;\n  }\n\n  /**\n   * Return percentage of surveys submitted by user\n   */\n\n  percentageSurveysSubmitted() {\n    var percentage = 100 / this.allsurveys.length;\n    return percentage * this.mysurveys.length;\n  }\n\n  /**\n   * Open Survey clicked\n   */\n\n  openSurvey(survey) {\n    if (!this.isSubmitted(survey))\n      this.router.navigate([\"/surveys/compile/\" + survey + \"/false\"]);\n    if (this.isSubmitted(survey))\n      this.router.navigate([\"/surveys/compile/\" + survey + \"/true\"]);\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n          \n  \n    \n      \n        \n      \n      \n        \n          Sondaggi\n          \n            create\n            done\n            {{survey.name}}\n             Completato \n            Go\n          \n        \n      \n    \n    \n      \n        Percentuale completata di sondaggi\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Sondaggi                      create            done            {{survey.name}}             Completato             Go                                              Percentuale completata di sondaggi                    '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AllsurveysComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerResponseType.html":{"url":"interfaces/AnswerResponseType.html","title":"interface - AnswerResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnswerResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        answer\n                                \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answer\n                                    \n                                \n                                \n                                    \n                                        answer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                side_expanded\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get_login_status\n                            \n                            \n                                toggle_sidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(client: HttpClient, BlockScrollService: BlockScrollService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        BlockScrollService\n                                                  \n                                                        \n                                                                    BlockScrollService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_login_status\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_login_status()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/app.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Checks if user is logged in, if not, login modal will be shown over the page (no operation is allowed to a non-logged user)\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_sidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_sidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Toggle sidebar mode (collapsed/expanded)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            side_expanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        side_expanded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"wonderfulcompany\"\n                        \n                    \n                        \n                            \n                                    Defined in app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserService } from \"./user.service\";\nimport { BlockScrollService } from \"./block-scroll.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"wonderfulcompany\";\n  side_expanded: boolean = false; //track sidebar status, it can be expanded or collapsed (hidden on mobile devices)\n\n  constructor(\n    client: HttpClient,\n    private BlockScrollService: BlockScrollService,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * Checks if user is logged in, if not, login modal will be shown over the page (no operation is allowed to a non-logged user)\n   */\n  get_login_status() {\n    return this.UserService.get_login_status();\n  }\n\n  /**\n   * Toggle sidebar mode (collapsed/expanded)\n   */\n  toggle_sidebar() {\n    this.side_expanded = !this.side_expanded;\n\n    if (window.screen.width \n    \n\n    \n        \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbsencesCalendarComponent\n\nAbsencesCalendarComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbsencesCalendarComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAllsurveysComponent\n\nAllsurveysComponent\n\nAppModule -->\n\nAllsurveysComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBottomListComponent\n\nBottomListComponent\n\nAppModule -->\n\nBottomListComponent->AppModule\n\n\n\n\n\nCompileComponent\n\nCompileComponent\n\nAppModule -->\n\nCompileComponent->AppModule\n\n\n\n\n\nCreatesurveyComponent\n\nCreatesurveyComponent\n\nAppModule -->\n\nCreatesurveyComponent->AppModule\n\n\n\n\n\nEmployeeComponent\n\nEmployeeComponent\n\nAppModule -->\n\nEmployeeComponent->AppModule\n\n\n\n\n\nEmployeesComponent\n\nEmployeesComponent\n\nAppModule -->\n\nEmployeesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginDialogComponent\n\nLoginDialogComponent\n\nAppModule -->\n\nLoginDialogComponent->AppModule\n\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\nAppModule -->\n\nManageUsersComponent->AppModule\n\n\n\n\n\nMiniSidebarItem\n\nMiniSidebarItem\n\nAppModule -->\n\nMiniSidebarItem->AppModule\n\n\n\n\n\nModifyQuestionComponent\n\nModifyQuestionComponent\n\nAppModule -->\n\nModifyQuestionComponent->AppModule\n\n\n\n\n\nModifyRequestComponent\n\nModifyRequestComponent\n\nAppModule -->\n\nModifyRequestComponent->AppModule\n\n\n\n\n\nMyAbsencesComponent\n\nMyAbsencesComponent\n\nAppModule -->\n\nMyAbsencesComponent->AppModule\n\n\n\n\n\nMyAbsencesListComponent\n\nMyAbsencesListComponent\n\nAppModule -->\n\nMyAbsencesListComponent->AppModule\n\n\n\n\n\nRequestChartsComponent\n\nRequestChartsComponent\n\nAppModule -->\n\nRequestChartsComponent->AppModule\n\n\n\n\n\nRequestDetailsComponent\n\nRequestDetailsComponent\n\nAppModule -->\n\nRequestDetailsComponent->AppModule\n\n\n\n\n\nSidebarBodyComponent\n\nSidebarBodyComponent\n\nAppModule -->\n\nSidebarBodyComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSidebarMenuItem\n\nSidebarMenuItem\n\nAppModule -->\n\nSidebarMenuItem->AppModule\n\n\n\n\n\nUserTableComponent\n\nUserTableComponent\n\nAppModule -->\n\nUserTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBlockScrollService\n\nBlockScrollService\n\nAppModule -->\n\nBlockScrollService->AppModule\n\n\n\n\n\nRequestsService\n\nRequestsService\n\nAppModule -->\n\nRequestsService->AppModule\n\n\n\n\n\nRequestsSurveysService\n\nRequestsSurveysService\n\nAppModule -->\n\nRequestsSurveysService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AbsencesCalendarComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                AllsurveysComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                BottomListComponent\n                            \n                            \n                                CompileComponent\n                            \n                            \n                                CreatesurveyComponent\n                            \n                            \n                                EmployeeComponent\n                            \n                            \n                                EmployeesComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                LoginDialogComponent\n                            \n                            \n                                ManageUsersComponent\n                            \n                            \n                                MiniSidebarItem\n                            \n                            \n                                ModifyQuestionComponent\n                            \n                            \n                                ModifyRequestComponent\n                            \n                            \n                                MyAbsencesComponent\n                            \n                            \n                                MyAbsencesListComponent\n                            \n                            \n                                RequestChartsComponent\n                            \n                            \n                                RequestDetailsComponent\n                            \n                            \n                                SidebarBodyComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                SidebarMenuItem\n                            \n                            \n                                UserTableComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                BottomListComponent\n                            \n                            \n                                ModifyQuestionComponent\n                            \n                            \n                                ModifyRequestComponent\n                            \n                            \n                                RequestDetailsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     BlockScrollService\n                            \n                            \n                                     RequestsService\n                            \n                            \n                                     RequestsSurveysService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AppComponent } from \"./app.component\";\nimport { AppRoutingModule } from \"./app-routing/app-routing.module\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { CalendarModule } from \"angular-calendar\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { LOCALE_ID, NgModule } from \"@angular/core\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport {\n  MiniSidebarItem,\n  SidebarBodyComponent,\n  SidebarMenuItem\n} from \"./sidebar/sidebar-body/sidebar-body.component\";\nimport {\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule\n} from \"@angular/material\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { RequestsService } from \"./absences-section/requests.service\";\nimport { RequestsSurveysService } from \"./surveys-section/requests.service\";\nimport { SidebarComponent } from \"./sidebar/sidebar.component\";\nimport { UserService } from \"./user.service\";\nimport { BlockScrollService } from \"./block-scroll.service\";\nimport {\n  BottomListComponent,\n  ManageUsersComponent\n} from \"./manage-users/manage-users.component\";\nimport { UserTableComponent } from \"./manage-users/user-table/user-table.component\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { LoginDialogComponent } from \"./login-dialog/login-dialog.component\";\n\n//Registers locale data to 'it' for date pipe format\nimport { registerLocaleData } from \"@angular/common\";\nimport localeIt from \"@angular/common/locales/it\";\nimport { MyAbsencesComponent } from \"./absences-section/my-absences/my-absences.component\";\nimport {\n  ModifyRequestComponent,\n  MyAbsencesListComponent\n} from \"./absences-section/my-absences/my-absences-list/my-absences-list.component\";\nimport { EmployeesComponent } from \"./absences-section/employees/employees.component\";\nimport { RequestChartsComponent } from \"./absences-section/request-charts/request-charts.component\";\nimport { EmployeeComponent } from \"./absences-section/employee/employee.component\";\nimport {\n  AbsencesCalendarComponent,\n  RequestDetailsComponent\n} from \"./absences-section/absences-calendar/absences-calendar.component\";\nimport {\n  CreatesurveyComponent,\n  ModifyQuestionComponent\n} from \"./surveys-section/createsurvey/createsurvey.component\";\nimport { AllsurveysComponent } from \"./surveys-section/allsurveys/allsurveys.component\";\nimport { NgCircleProgressModule } from \"ng-circle-progress\";\nimport { CompileComponent } from \"./surveys-section/compile/compile.component\";\nimport { AdminComponent } from './surveys-section/admin/admin.component';\nregisterLocaleData(localeIt, \"it\");\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BottomListComponent,\n    HomeComponent,\n    MiniSidebarItem,\n    SidebarBodyComponent,\n    SidebarMenuItem,\n    HeaderComponent,\n    SidebarComponent,\n    ManageUsersComponent,\n    UserTableComponent,\n    LoginDialogComponent,\n    ModifyQuestionComponent,\n    ModifyRequestComponent,\n    MyAbsencesComponent,\n    MyAbsencesListComponent,\n    EmployeesComponent,\n    RequestChartsComponent,\n    RequestDetailsComponent,\n    EmployeeComponent,\n    AbsencesCalendarComponent,\n    CreatesurveyComponent,\n    AllsurveysComponent,\n    CompileComponent,\n    AdminComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CalendarModule.forRoot(),\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatTableModule,\n    MatDialogModule,\n    NgxChartsModule,\n    NgCircleProgressModule.forRoot({\n      // set defaults here\n      radius: 200,\n      outerStrokeWidth: 35,\n      innerStrokeWidth: 26,\n      outerStrokeColor: \"#78C000\",\n      innerStrokeColor: \"#C7E596\",\n      animationDuration: 300\n    })\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: \"it\" },\n    BlockScrollService,\n    CookieService,\n    RequestsService,\n    RequestsSurveysService,\n    UserService\n  ],\n  entryComponents: [\n    BottomListComponent,\n    ModifyRequestComponent,\n    ModifyQuestionComponent,\n    RequestDetailsComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HomeComponent } from \"../home/home.component\";\nimport { ManageUsersComponent } from \"../manage-users/manage-users.component\";\nimport { MyAbsencesComponent } from \"../absences-section/my-absences/my-absences.component\";\nimport { EmployeesComponent } from \"../absences-section/employees/employees.component\";\nimport { EmployeeComponent } from \"../absences-section/employee/employee.component\";\nimport { AbsencesCalendarComponent } from \"../absences-section/absences-calendar/absences-calendar.component\";\nimport { CreatesurveyComponent } from \"../surveys-section/createsurvey/createsurvey.component\";\nimport { AllsurveysComponent } from \"../surveys-section/allsurveys/allsurveys.component\";\nimport { CompileComponent } from \"../surveys-section/compile/compile.component\";\nimport { AdminComponent } from \"../surveys-section/admin/admin.component\";\n\nconst appRoutes: Routes = [\n  { path: \"absences/calendar\", component: AbsencesCalendarComponent },\n  { path: \"absences/employees\", component: EmployeesComponent },\n  { path: \"absences/employee\", component: EmployeeComponent },\n  { path: \"home\", component: HomeComponent },\n  { path: \"absences/myabsences\", component: MyAbsencesComponent },\n  { path: \"surveys/createsurvey\", component: CreatesurveyComponent },\n  { path: \"surveys/allsurveys\", component: AllsurveysComponent },\n  { path: \"surveys/compile/:id/:recompile\", component: CompileComponent },\n  { path: \"surveys/admin\", component: AdminComponent },\n  { path: \"users\", component: ManageUsersComponent },\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, {\n      enableTracing: false // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockScrollService.html":{"url":"injectables/BlockScrollService.html","title":"injectable - BlockScrollService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BlockScrollService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/block-scroll.service.ts\n        \n\n            \n                Description\n            \n            \n                This service allow to block page scrolling (we need this when login dialog is open or sidebar is expanded on mobile devices)\nNOTE: Solution found at https://www.bennadel.com/blog/3374-prevent-body-scrolling-with-a-windowscrolling-service-when-showing-a-modal-window-in-angular-5-0-2.htm\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                styleTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildStyleElement\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in app/block-scroll.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildStyleElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildStyleElement()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/block-scroll.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     HTMLStyleElement\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/block-scroll.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Disable window scroll\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        enable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/block-scroll.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Enable window scroll\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            styleTag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styleTag:     HTMLStyleElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLStyleElement\n\n                        \n                    \n                        \n                            \n                                    Defined in app/block-scroll.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * This service allow to block page scrolling (we need this when login dialog is open or sidebar is expanded on mobile devices)\n *\n * NOTE: Solution found at https://www.bennadel.com/blog/3374-prevent-body-scrolling-with-a-windowscrolling-service-when-showing-a-modal-window-in-angular-5-0-2.htm\n */\n@Injectable()\nexport class BlockScrollService {\n\n    private styleTag: HTMLStyleElement;\n    constructor() {\n        //builds overflow:hidden property, it can be added to body element to disable scroll\n        this.styleTag = this.buildStyleElement();\n    }\n\n    /**\n     * Disable window scroll\n     */\n    public disable() : void {\n        //add property to body\n        document.body.appendChild( this.styleTag );\n    }\n\n    /**\n     * Enable window scroll\n     */\n    public enable() : void {\n        //remove property from body\n        document.body.removeChild( this.styleTag );\n    }\n\n    //build property to be appended to body element to disable scroll\n    private buildStyleElement() : HTMLStyleElement {\n        var style = document.createElement( \"style\" );\n        style.type = \"text/css\";\n        style.setAttribute( \"data-debug\", \"Injected by WindowScrolling service.\" );\n        style.textContent = `\n            body {\n                overflow: hidden !important ;\n            }\n        `;\n        return( style );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BossResponseType.html":{"url":"interfaces/BossResponseType.html","title":"interface - BossResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BossResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        boss\n                                \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        boss\n                                    \n                                \n                                \n                                    \n                                        boss:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BottomListComponent.html":{"url":"components/BottomListComponent.html","title":"component - BottomListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BottomListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/manage-users/manage-users.component.ts\n\n\n    \n        Description\n    \n    \n        This component is used to show a list of users in order to make user chose new boss for previously selected user (data of the selected user (employee) are injected from outer component)\nNOTE: base component code got from Angular Material\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bottom-list\n            \n\n\n\n\n            \n                templateUrl\n                ./bottom-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set_boss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, bottomSheetRef: MatBottomSheetRef, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/manage-users/manage-users.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        bottomSheetRef\n                                                  \n                                                        \n                                                                    MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_boss\n                            \n                            \n                        \n                    \n                \n                \n                    \nset_boss(id_user: , id_boss: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            When user selects new boss from the list this function is called to send a request to backend\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id_user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id_boss\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\nimport {\n  MAT_BOTTOM_SHEET_DATA,\n  MatBottomSheet,\n  MatBottomSheetRef\n} from \"@angular/material\";\nimport { UserType } from \"../interfaces\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * This component is used to show a list of users in order to make user chose new boss for previously selected user (data of the selected user (employee) are injected from outer component)\n *\n * NOTE: base component code got from Angular Material\n */\n@Component({\n  selector: \"bottom-list\",\n  templateUrl: \"./bottom-list.component.html\"\n})\nexport class BottomListComponent {\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private bottomSheetRef: MatBottomSheetRef,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * When user selects new boss from the list this function is called to send a request to backend\n   */\n  set_boss(id_user, id_boss) {\n    //UserService's set_boss method is called, component ref is passed to allow to close this list after the submission of the request to the backend\n    this.UserService.set_boss(id_user, id_boss, this.bottomSheetRef);\n  }\n}\n\n/**\n * Users Management page, in this page the user can add new users, set boss for any user and see a complete list of users\n */\n@Component({\n  selector: \"manage-users\",\n  templateUrl: \"./manage-users.component.html\",\n  styleUrls: [\"./manage-users.component.css\"]\n})\nexport class ManageUsersComponent {\n  private showPassword: boolean = false;\n  private showPassword2: boolean = false;\n\n  //fields of add-user form\n  public number: number;\n  public name: string;\n  public surname: string;\n  public email: string;\n  public password: string;\n  public password2: string;\n\n  constructor(\n    private bottomSheet: MatBottomSheet,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * This function is called when submit button of the form is clicked\n   */\n  add_user() {\n    var user = {\n      name: this.name,\n      surname: this.surname,\n      email: this.email,\n      password: this.password\n    };\n    //UserService's add_user method is called\n    this.UserService.add_user(user);\n\n    //clear form\n    this.name = null;\n    this.surname = null;\n    this.email = null;\n    this.password = null;\n    this.password2 = null;\n  }\n\n  /**\n   * Method used in the template to show the total number of users\n   */\n  get_number() {\n    if (this.number) {\n      return \"(\" + this.number + \")\";\n    } else return \"\";\n  }\n\n  /**\n   * This function is called when set_boss button is clicked for some user in the table, it opens the bottom-list for boss selection\n   */\n  openBottomSheet(employee) {\n    var array = this.UserService.get_users(); //full list of users got from UserService\n    var users = [];\n    for (var i = 0; i \n    \n\n    \n        Nomina supervisore per {{data.employee.name}} {{data.employee.surname}}\n\n  \n    {{user.name}} {{user.surname}}\n    {{user.email}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nomina supervisore per {{data.employee.name}} {{data.employee.surname}}      {{user.name}} {{user.surname}}    {{user.email}}  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BottomListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompileComponent.html":{"url":"components/CompileComponent.html","title":"component - CompileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/surveys-section/compile/compile.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows frontend section for survey compilation\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                compile\n            \n\n            \n                styleUrls\n                compile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./compile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                ArrayStep\n                            \n                            \n                                id\n                            \n                            \n                                questions\n                            \n                            \n                                recompile\n                            \n                            \n                                step\n                            \n                            \n                                survey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AnswersList\n                            \n                            \n                                createArrayStep\n                            \n                            \n                                fillAnswer\n                            \n                            \n                                forwardStep\n                            \n                            \n                                isConditioned\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepQuestions\n                            \n                            \n                                upgradeQuestionsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(RequestsSurveysService: RequestsSurveysService, UserService: UserService, HttpClient: HttpClient, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/compile/compile.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        RequestsSurveysService\n                                                  \n                                                        \n                                                                    RequestsSurveysService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AnswersList\n                            \n                            \n                        \n                    \n                \n                \n                    \nAnswersList(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            return answer list of question passed by parameter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createArrayStep\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateArrayStep()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillAnswer(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:165\n                            \n                        \n\n\n                \n                    \n                            Fill previous answer submitted for specified question by user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forwardStep\n                            \n                            \n                        \n                    \n                \n                \n                    \nforwardStep(stepper: MatStepper, step: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:196\n                            \n                        \n\n\n                \n                    \n                            Submit questions of current step and, if is the ultimate step, finish compilation or recompilation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stepper\n                                                        \n                                                                    MatStepper\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        step\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isConditioned\n                            \n                            \n                        \n                    \n                \n                \n                    \nisConditioned(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Fill condition flag of specified question\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:322\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepQuestions(step: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Return only questions of specified step passed by parameter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        step\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QuestionsType[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upgradeQuestionsList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupgradeQuestionsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Pull questions from database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ArrayStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ArrayStep:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     QuestionsType[]\n\n                    \n                \n                    \n                        \n                            Type :     QuestionsType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recompile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        recompile:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            step\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        step:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            survey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        survey:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/compile/compile.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\nimport { RequestsSurveysService } from \"../requests.service\";\nimport {\n  AnswerResponseType,\n  QuestionsType,\n  QuestionsResponseType,\n  SuccessResponseType,\n  ConditionResponseType\n} from \"../../interfaces\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, interval } from \"rxjs\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport swal from \"sweetalert\";\nimport { switchMap, map, share, filter } from \"rxjs/operators\";\nimport { UserService } from \"../../user.service\";\nimport * as config from \"../../config.json\";\n\n/**\n * This component shows frontend section for survey compilation\n */\n\n@Component({\n  selector: \"compile\",\n  templateUrl: \"./compile.component.html\",\n  styleUrls: [\"./compile.component.css\"]\n})\nexport class CompileComponent implements OnInit {\n  survey: any; //survey object\n  id: number; //id of survey\n  recompile: string; //flag for recompiling\n\n  step: number; //number of step of the survey\n\n  questions: QuestionsType[]; //questions of th survey\n\n  ArrayStep: number[];\n\n  private api: string;\n\n  constructor(\n    private RequestsSurveysService: RequestsSurveysService,\n    private UserService: UserService,\n    private HttpClient: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.api = (config).api;\n\n    //Set variables from url parameters\n    this.route.params.subscribe(res => (this.id = res.id));\n    this.route.params.subscribe(res => (this.recompile = res.recompile));\n\n    this.ArrayStep = [];\n\n    this.upgradeQuestionsList(); //Pull questions from database\n  }\n\n  /**\n   * Pull questions from database\n   */\n\n  upgradeQuestionsList() {\n    var url = this.api + \"surveys/surveys/\" + this.id;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        this.questions = data.questions;\n        this.step = data.step[0].step;\n        this.survey = data.survey;\n        this.createArrayStep();\n        //For every question fills condition answer\n        for (var i = 0; i  {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Return only questions of specified step passed by parameter\n   */\n\n  stepQuestions(step: number): QuestionsType[] {\n    return this.questions.filter(question => question.step == step);\n  }\n\n  createArrayStep() {\n    for (var i = 1; i (url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        if (data.condition == \"true\") {\n          question.condition_confirmed = true;\n        } else {\n          question.condition_confirmed = false;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Fill previous answer submitted for specified question by user\n   */\n\n  fillAnswer(question) {\n    var url = this.api + \"surveys/answers/\" + question.id;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        question.answer_compile = data.answer;\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Submit questions of current step and, if is the ultimate step, finish compilation or recompilation\n   */\n\n  forwardStep(stepper: MatStepper, step) {\n    //case of recompilation\n    if (this.recompile == \"true\") {\n      //for every question submit new answer\n      for (var i = 0; i (url, post, {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            )\n          }).subscribe(\n            data => {\n              if (!data.success) {\n                swal(\n                  \"Oops!\",\n                  \"Errore durante l'invio della richiesta!\",\n                  \"error\"\n                );\n                if (data.error) {\n                  console.log(data.error);\n                }\n                return;\n              }\n              //Refresh questins array with new values\n              for (var i = 0; i  {\n              swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n              console.log(err);\n              return;\n            }\n          );\n        }\n      }\n    } else {\n      //case of compilation for first time\n      for (var i = 0; i (url, post, {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            )\n          }).subscribe(\n            data => {\n              if (!data.success) {\n                swal(\n                  \"Oops!\",\n                  \"Errore durante l'invio della richiesta!\",\n                  \"error\"\n                );\n                if (data.error) {\n                  console.log(data.error);\n                }\n                return;\n              }\n              for (var i = 0; i  {\n              swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n              console.log(err);\n              return;\n            }\n          );\n        }\n      }\n    }\n    //Final Phase\n    if (\n      step == this.ArrayStep[this.ArrayStep.length - 1] &&\n      this.recompile == \"false\"\n    ) {\n      //Create record for compilation\n      var url = this.api + \"surveys/submitsurvey/\" + this.id;\n      var post = {\n        answer: \"answer\"\n      };\n      this.HttpClient.post(url, post, {\n        headers: new HttpHeaders().set(\n          \"Authorization\",\n          \"bearer \" + this.UserService.get_token()\n        )\n      }).subscribe(\n        data => {\n          if (!data.success) {\n            swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n            if (data.error) {\n              console.log(data.error);\n            }\n            return;\n          }\n          swal(\"Fatto!\", \"Sondaggio compilato correttamente!\", \"success\");\n          this.router.navigate([\"/home\"]);\n        },\n        err => {\n          swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n          console.log(err);\n          return;\n        }\n      );\n      return;\n    } else if (\n      step == this.ArrayStep[this.ArrayStep.length - 1] &&\n      this.recompile == \"true\"\n    ) {\n      swal(\"Fatto!\", \"Sondaggio ricompilato correttamente!\", \"success\");\n    } else {\n      stepper.next();\n    }\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        \n          {{question.question}}\n          \n            \n              \n                {{answer}}\n              \n            \n          \n          \n            \n          \n        \n      \n      \n      Prosegui\n    \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{question.question}}                                                    {{answer}}                                                                                              Prosegui          '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConditionResponseType.html":{"url":"interfaces/ConditionResponseType.html","title":"interface - ConditionResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConditionResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        condition\n                                \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                    \n                                \n                                \n                                    \n                                        condition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmployeeComponent.html":{"url":"components/EmployeeComponent.html","title":"component - EmployeeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmployeeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/employee/employee.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the overview of the data related to a specific user.\nIn this page the boss of the user specified in the queryparams can approve or refuse his absence-requests and see some statistics about this employee\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-employee\n            \n\n            \n                styleUrls\n                employee.component.css\n            \n\n\n\n            \n                templateUrl\n                ./employee.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Private\n                                employee\n                            \n                            \n                                    Private\n                                employee_requests\n                            \n                            \n                                    Private\n                                employee_requestsSubscription\n                            \n                            \n                                    Private\n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayed_requests\n                            \n                            \n                                get_state_label\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, RequestsService: RequestsService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/employee/employee.component.ts:23\n                            \n                        \n\n                \n                    \n                            The constructor gets the info of the selected employee from UserService and subscribe to RequestsService observable to get all employees requests, when data is received, filters it to get just the requests of the selected employee\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayed_requests\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayed_requests()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Get the number of requests currently diplayed requests considering the effect of state filter\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_state_label\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_state_label(state: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Get the label to be displayed to show the state of the request in the template\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"Approvata\" | \"Rifiutata\" | \"In attesa di approvazione\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Unsubscription from requests-service observable to get employees requests\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employee\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employee:     UserType\n\n                    \n                \n                    \n                        \n                            Type :     UserType\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employee_requests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employee_requests:     RequestType[]\n\n                    \n                \n                    \n                        \n                            Type :     RequestType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employee_requestsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employee_requestsSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employee/employee.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { RequestsService } from \"../requests.service\";\nimport { RequestType, UserType } from \"../../interfaces\";\nimport { UserService } from \"../../user.service\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * This component is the overview of the data related to a specific user.\n *\n * In this page the boss of the user specified in the queryparams can approve or refuse his absence-requests and see some statistics about this employee\n */\n@Component({\n  selector: \"app-employee\",\n  templateUrl: \"./employee.component.html\",\n  styleUrls: [\"./employee.component.css\"]\n})\nexport class EmployeeComponent implements OnDestroy {\n  private employee_requestsSubscription: Subscription; //subscription to requests-service observable to get the list of the requests made by any of the employees of the logged-in user\n  private api: string; //api base url\n  private employee: UserType; //info of the employee\n  private employee_requests: RequestType[]; //requests of the specific employee\n  private filter: number = -1; //parameter to filter requests by the state\n\n  /**\n   * The constructor gets the info of the selected employee from UserService and subscribe to RequestsService observable to get all employees requests, when data is received, filters it to get just the requests of the selected employee\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private RequestsService: RequestsService,\n    private UserService: UserService\n  ) {\n    this.route.queryParams.subscribe(params => {\n      //get the id of the employee from route queryparams\n      if (!params[\"employee\"]) {\n        this.router.navigate([\"/home\"]); //no user to display, redirect to home\n      } else {\n        //subscription to requests-service observable to get requests list and filter it to get the requests of the specific employee\n        this.employee_requestsSubscription = this.RequestsService.employees_requests$.subscribe(\n          data => {\n            //get info of the employee from UserService\n            this.employee = this.UserService.get_user_by_id(params[\"employee\"]);\n            var array = [];\n            for (var i = 0; i \n    \n\n    \n        \n    \n        Impiegato: {{employee.surname}} {{employee.name}}\n        {{employee.email}}\n    \n    \n        \n            \n                \n                    Richieste\n                \n                \n                     0\">\n                    \n                      \n                          Tutte\n                          Approvate\n                          In Attesa\n                          Rifiutate\n                      \n                    \n                  \n                    \n                        Nessuna richiesta da mostrare...\n                    \n                    \n                        \n                    \n                \n                 0\">\n                    \n                      \n                        \n                          \n                            \n                              Richiesta #{{request.id}} ({{request.reason | titlecase}})\n                            \n                            \n                              {{get_state_label(request.state)}}\n                            \n                          \n                          \n                            \n                          \n                          \n                            \n                              \n                                \n                                  Data di inizio: {{request.start_date | date : 'EEEE, d MMMM y' | titlecase}}\n                                \n                                \n                                  Data di fine (compresa): {{request.end_date | date : 'EEEE, d MMMM y' | titlecase}}\n                                \n                                \n                                  Motivazione: {{request.reason | titlecase}}\n                                \n                              \n                            \n                            \n                              \n                                File giustificativo:\n                                \n                                  \n                                \n                                \n                                  \n                                \n                              \n                            \n                          \n                          \n                          Approva\n                          Rifiuta\n                        \n                        \n                      \n                    \n                \n            \n            \n                \n                    \n                        Statistiche Impiegato\n                    \n                    \n                        \n                    \n                    \n                        Nessuna Statistica da mostrare\n                        Questo impiegato non ha richiesto dei permessi...\n                    \n                \n                \n                   0\">\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Impiegato: {{employee.surname}} {{employee.name}}        {{employee.email}}                                                                Richieste                                                     0\">                                                                    Tutte                          Approvate                          In Attesa                          Rifiutate                                                                                                        Nessuna richiesta da mostrare...                                                                                                                     0\">                                                                                                                                                      Richiesta #{{request.id}} ({{request.reason | titlecase}})                                                                                      {{get_state_label(request.state)}}                                                                                                                                                                                                                                                                                            Data di inizio: {{request.start_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                                                                                  Data di fine (compresa): {{request.end_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                                                                                  Motivazione: {{request.reason | titlecase}}                                                                                                                                                                                    File giustificativo:                                                                                                                                                                                                                                                                                                                                            Approva                          Rifiuta                                                                                                                                                                                              Statistiche Impiegato                                                                                                                                Nessuna Statistica da mostrare                        Questo impiegato non ha richiesto dei permessi...                                                                       0\">                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmployeeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmployeesComponent.html":{"url":"components/EmployeesComponent.html","title":"component - EmployeesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmployeesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/employees/employees.component.ts\n\n\n    \n        Description\n    \n    \n        This component contains the dashboard for bosses in wich they can see some statistic based on all the requests made by their employees and see a list of their own employees\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                employees\n            \n\n            \n                styleUrls\n                employees.component.css\n            \n\n\n\n            \n                templateUrl\n                ./employees.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                employees\n                            \n                            \n                                    Private\n                                employeesSubscription\n                            \n                            \n                                    Private\n                                requests\n                            \n                            \n                                    Private\n                                requestsSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get_pending_requests_number\n                            \n                            \n                                get_requests_number\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                sort_employees\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(RequestsService: RequestsService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/employees/employees.component.ts:19\n                            \n                        \n\n                \n                    \n                            The constructor subscribes to RequestsService Observables to get employees list and the list of all their requests\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_pending_requests_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_pending_requests_number(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Get the number of pending requests made by specified employee (displayed in the user list)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_requests_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_requests_number(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Get the number of requests made by specified employee (displayed in the user list)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Unsubscription from requests-service observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort_employees\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort_employees(employees: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Simple name sorting applied to Employees List when received from RequestsService's observable flow\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employees\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employees\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employees:     UserType[]\n\n                    \n                \n                    \n                        \n                            Type :     UserType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employeesSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        employeesSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requests:     RequestType[]\n\n                    \n                \n                    \n                        \n                            Type :     RequestType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requestsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestsSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/employees/employees.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from \"@angular/core\";\nimport { RequestsService } from \"../requests.service\";\nimport { RequestType, UserType } from \"../../interfaces\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * This component contains the dashboard for bosses in wich they can see some statistic based on all the requests made by their employees and see a list of their own employees\n */\n@Component({\n  selector: \"employees\",\n  templateUrl: \"./employees.component.html\",\n  styleUrls: [\"./employees.component.css\"]\n})\nexport class EmployeesComponent implements OnDestroy {\n  private employees: UserType[]; //list of employees\n  private requests: RequestType[]; //list of all request made by any of the employees\n  private employeesSubscription: Subscription; //subscription to observable to get employees list from requests-service\n  private requestsSubscription: Subscription; //subscription to observable to get requests list from requests-service\n\n  /**\n   * The constructor subscribes to RequestsService Observables to get employees list and the list of all their requests\n   */\n  constructor(private RequestsService: RequestsService) {\n    //subscription to observable to get employees list from requests-service\n    this.employeesSubscription = this.RequestsService.employees$.subscribe(\n      data => {\n        this.employees = this.sort_employees(data);\n      }\n    );\n    this.RequestsService.reset_employees_version(); //force observable to emit data in the stream even if it has not changed from last check\n\n    //subscription to observable to get requests list from requests-service\n    this.requestsSubscription = this.RequestsService.employees_requests$.subscribe(\n      data => {\n        this.requests = data;\n      }\n    );\n    this.RequestsService.reset_employees_requests_version(); //force observable to emit data in the stream even if it has not changed from last check\n  }\n\n  /**\n   * Get the number of requests made by specified employee (displayed in the user list)\n   */\n  get_requests_number(id) {\n    if (!this.requests) return 0;\n    var count = 0;\n    for (var i = 0; i \n    \n\n    \n        \n    \n        Richieste (Amministratore)\n    \n    \n        \n            \n                \n                    Impiegati\n                \n                \n                    \n                      \n                        \n                        {{employee.surname | titlecase}} {{employee.name | titlecase}}\n                        \n                          {{get_requests_number(employee.id)}} Richieste\n                          \n                          ({{get_pending_requests_number(employee.id)}} da approvare)\n                        \n                        \n                      \n                    \n                    \n                        Nessun Utente da mostrare...\n                    \n                    \n                        \n                    \n                \n            \n            \n                \n                    Statistiche Generali\n                    \n                        \n                    \n                    \n                        Nessuna Statistica da mostrare\n                        Nessuno dei tuoi impiegati ha richiesto dei permessi...\n                    \n                \n                \n                   0\">\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Richieste (Amministratore)                                                                Impiegati                                                                                                                          {{employee.surname | titlecase}} {{employee.name | titlecase}}                                                  {{get_requests_number(employee.id)}} Richieste                                                    ({{get_pending_requests_number(employee.id)}} da approvare)                                                                                                                                      Nessun Utente da mostrare...                                                                                                                                                                Statistiche Generali                                                                                                            Nessuna Statistica da mostrare                        Nessuno dei tuoi impiegati ha richiesto dei permessi...                                                                       0\">                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmployeesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the top navbar of the page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                toggle_sidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side_expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/header/header.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side_expanded\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/header/header.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/header/header.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/header/header.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Uses login service to logout, login modal will be displayed over the page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_sidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_sidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/header/header.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            Emits output to outer component in order to change sidebar status\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\n\n/**\n * This component is the top navbar of the page\n */\n@Component({\n  selector: \"header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"]\n})\nexport class HeaderComponent {\n  @Input() side_expanded: boolean; //track sidebar status, logo is shown when sidebar is collapsed\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor(private UserService: UserService) {}\n\n  /**\n   * Emits output to outer component in order to change sidebar status\n   */\n  toggle_sidebar() {\n    this.toggle.emit();\n  }\n\n  /**\n   * Uses login service to logout, login modal will be displayed over the page\n   */\n  logout() {\n    this.UserService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n      \n        \n          \n             {{UserService.get_name()}}\n            \n          \n          \n            \n              \n                Gestione Utenti\n              \n            \n            \n              \n                Log Out\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                     {{UserService.get_name()}}                                                                          Gestione Utenti                                                                    Log Out                                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        This component just contains the cards to enter one of the 3 sections of the app (absences, rooms, surveys)\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/home/home.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\n\n/**\n * This component just contains the cards to enter one of the 3 sections of the app (absences, rooms, surveys)\n */\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent {\n  constructor(private UserService: UserService) {}\n}\n\n    \n\n    \n        \n  \n    Benvenuto, {{UserService.get_name()}}\n  \n\n  \n\n    \n      \n        \n          Sezione Ferie e Assenze\n          Sviluppata da Orazio Scavo\n        \n        \n        \n          \n            In questa sezione tutti i dipendenti possono gestire i propri permessi per ferie o altre assenze. Le richieste dovranno essere approvate dai relativi responsabili prima di essere confermate.\n          \n        \n        \n          CALENDARIO\n          PERMESSI\n        \n      \n    \n\n    \n      \n        \n          Sezione Test e Sondaggi\n          Sviluppata da Federico Grasso\n        \n        \n        \n          \n            In questa sezione è possibile creare nuovi sondaggi e rispondere ai sondaggi creati da altri impiegati. Il gestore di ogni sondaggio potrà avere visione delle statistiche ad esso relative.\n          \n        \n        \n          CREA SONDAGGIO\n          TUTTI I SONDAGGI\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Benvenuto, {{UserService.get_name()}}                                Sezione Ferie e Assenze          Sviluppata da Orazio Scavo                                              In questa sezione tutti i dipendenti possono gestire i propri permessi per ferie o altre assenze. Le richieste dovranno essere approvate dai relativi responsabili prima di essere confermate.                                    CALENDARIO          PERMESSI                                              Sezione Test e Sondaggi          Sviluppata da Federico Grasso                                              In questa sezione è possibile creare nuovi sondaggi e rispondere ai sondaggi creati da altri impiegati. Il gestore di ogni sondaggio potrà avere visione delle statistiche ad esso relative.                                    CREA SONDAGGIO          TUTTI I SONDAGGI                    '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogResponseType.html":{"url":"interfaces/LogResponseType.html","title":"interface - LogResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LogResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginDialogComponent.html":{"url":"components/LoginDialogComponent.html","title":"component - LoginDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/login-dialog/login-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the modal containing the login form, it's shown over the page when user is not logged-in (no operation is allowed to a non-logged-in user)\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                login-dialog\n            \n\n            \n                styleUrls\n                login-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-dialog.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                email\n                            \n                            \n                                    Private\n                                password\n                            \n                            \n                                    Private\n                                showPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle_show_password\n                            \n                            \n                                try_login\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(BlockScrollService: BlockScrollService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/login-dialog/login-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            The constructor just uses the BlockScrollService to disable scroll whand login dialog is shown\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        BlockScrollService\n                                                  \n                                                        \n                                                                    BlockScrollService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_show_password\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_show_password()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            makes password field's content visible or make it hidden again\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            try_login\n                            \n                            \n                        \n                    \n                \n                \n                    \ntry_login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Uses login service to try log in with the credentials inserted by the user in the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Simple validation of email and password values: they must not be empty, this control is used to disable button in login form\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showPassword:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/login-dialog/login-dialog.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { BlockScrollService } from \"../block-scroll.service\";\nimport { UserService } from \"../user.service\";\n\n/**\n * This component is the modal containing the login form, it's shown over the page when user is not logged-in (no operation is allowed to a non-logged-in user)\n */\n@Component({\n  selector: \"login-dialog\",\n  templateUrl: \"./login-dialog.component.html\",\n  styleUrls: [\"./login-dialog.component.css\"]\n})\nexport class LoginDialogComponent {\n  private showPassword: boolean = false;\n\n  //login form inputs\n  private email: string;\n  private password: string;\n\n  /**\n   * The constructor just uses the BlockScrollService to disable scroll whand login dialog is shown\n   */\n  constructor(\n    private BlockScrollService: BlockScrollService,\n    private UserService: UserService\n  ) {\n    this.BlockScrollService.disable(); //scroll is disabled when this modal is shown over the page\n  }\n\n  /**\n   * makes password field's content visible or make it hidden again\n   */\n  toggle_show_password() {\n    this.showPassword = !this.showPassword;\n  }\n\n  /**\n   * Uses login service to try log in with the credentials inserted by the user in the form\n   */\n  try_login() {\n    this.UserService.try_login(this.email, this.password);\n  }\n\n  /**\n   * Simple validation of email and password values: they must not be empty, this control is used to disable button in login form\n   */\n  validate() {\n    if (this.email && this.password) {\n      if (this.email != \"\" && this.password != \"\") {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n    \n        \n\n  LOGIN\n  All'interno di questa applicazione non è prevista la navigazione anonima. \n    Inserisci le tue credenziali per accedere\n  \n  \n    \n      \n    \n    \n      \n    \n    \n    \n      INVIA\n    \n  \n  \n    \n     Accedi come amministratore per aggiungere nuovi utenti.\n    CREDENZIALI DA AMMINISTRATORE: [email] - [password]\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  LOGIN  All\\'interno di questa applicazione non è prevista la navigazione anonima.     Inserisci le tue credenziali per accedere                                              INVIA                 Accedi come amministratore per aggiungere nuovi utenti.    CREDENZIALI DA AMMINISTRATORE: [email] - [password]  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageUsersComponent.html":{"url":"components/ManageUsersComponent.html","title":"component - ManageUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/manage-users/manage-users.component.ts\n\n\n    \n        Description\n    \n    \n        Users Management page, in this page the user can add new users, set boss for any user and see a complete list of users\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                manage-users\n            \n\n            \n                styleUrls\n                manage-users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manage-users.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                number\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                password2\n                            \n                            \n                                    Private\n                                showPassword\n                            \n                            \n                                    Private\n                                showPassword2\n                            \n                            \n                                    Public\n                                surname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add_user\n                            \n                            \n                                get_number\n                            \n                            \n                                openBottomSheet\n                            \n                            \n                                password_confirmed\n                            \n                            \n                                set_number\n                            \n                            \n                                toggle_show_password\n                            \n                            \n                                toggle_show_password2\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bottomSheet: MatBottomSheet, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/manage-users/manage-users.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bottomSheet\n                                                  \n                                                        \n                                                                    MatBottomSheet\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add_user\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd_user()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            This function is called when submit button of the form is clicked\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_number()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Method used in the template to show the total number of users\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openBottomSheet\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenBottomSheet(employee: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            This function is called when set_boss button is clicked for some user in the table, it opens the bottom-list for boss selection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employee\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password_confirmed\n                            \n                            \n                        \n                    \n                \n                \n                    \npassword_confirmed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Control for password fields (they have to hold the same value)\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nset_number(val: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:130\n                            \n                        \n\n\n                \n                    \n                            Handler for inner component (user-table) emission: the emitted values is the number of users\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_show_password\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_show_password()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Makes password field's content visible or make it hidden again\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_show_password2\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_show_password2()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            Makes password2 field's content visible or make it hidden again\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Simple validation for add-user form, all fields must be not null and passwords must be equals\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            number\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        number:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showPassword:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showPassword2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showPassword2:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            surname\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        surname:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/manage-users.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { UserService } from \"../user.service\";\nimport {\n  MAT_BOTTOM_SHEET_DATA,\n  MatBottomSheet,\n  MatBottomSheetRef\n} from \"@angular/material\";\nimport { UserType } from \"../interfaces\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * This component is used to show a list of users in order to make user chose new boss for previously selected user (data of the selected user (employee) are injected from outer component)\n *\n * NOTE: base component code got from Angular Material\n */\n@Component({\n  selector: \"bottom-list\",\n  templateUrl: \"./bottom-list.component.html\"\n})\nexport class BottomListComponent {\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    private bottomSheetRef: MatBottomSheetRef,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * When user selects new boss from the list this function is called to send a request to backend\n   */\n  set_boss(id_user, id_boss) {\n    //UserService's set_boss method is called, component ref is passed to allow to close this list after the submission of the request to the backend\n    this.UserService.set_boss(id_user, id_boss, this.bottomSheetRef);\n  }\n}\n\n/**\n * Users Management page, in this page the user can add new users, set boss for any user and see a complete list of users\n */\n@Component({\n  selector: \"manage-users\",\n  templateUrl: \"./manage-users.component.html\",\n  styleUrls: [\"./manage-users.component.css\"]\n})\nexport class ManageUsersComponent {\n  private showPassword: boolean = false;\n  private showPassword2: boolean = false;\n\n  //fields of add-user form\n  public number: number;\n  public name: string;\n  public surname: string;\n  public email: string;\n  public password: string;\n  public password2: string;\n\n  constructor(\n    private bottomSheet: MatBottomSheet,\n    private UserService: UserService\n  ) {}\n\n  /**\n   * This function is called when submit button of the form is clicked\n   */\n  add_user() {\n    var user = {\n      name: this.name,\n      surname: this.surname,\n      email: this.email,\n      password: this.password\n    };\n    //UserService's add_user method is called\n    this.UserService.add_user(user);\n\n    //clear form\n    this.name = null;\n    this.surname = null;\n    this.email = null;\n    this.password = null;\n    this.password2 = null;\n  }\n\n  /**\n   * Method used in the template to show the total number of users\n   */\n  get_number() {\n    if (this.number) {\n      return \"(\" + this.number + \")\";\n    } else return \"\";\n  }\n\n  /**\n   * This function is called when set_boss button is clicked for some user in the table, it opens the bottom-list for boss selection\n   */\n  openBottomSheet(employee) {\n    var array = this.UserService.get_users(); //full list of users got from UserService\n    var users = [];\n    for (var i = 0; i \n    \n\n    \n        \n    \n        \n            Inserimento Utente\n        \n        \n            \n                \n                    \n                       \n                    \n                \n                \n                    \n                       \n                    \n                \n                \n                    \n                      \n                    \n                \n                \n                    \n                      \n                    \n                    \n                \n                \n                    \n                      \n                    \n                    \n                \n              \n                INVIA\n                \n                 Le due password non coincidono\n              \n            \n        \n    \n    \n        \n            Lista Impiegati {{get_number()}}\n        \n        \n            \n        \n        \n            Nessun Utente da mostrare...\n        \n        \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Inserimento Utentee due password non coincidono                                                              Lista Impiegati {{get_number()}}                                                        Nessun Utente da mostrare...                                        '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        short_name\n                                \n                                \n                                        sub_menu\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        short_name\n                                    \n                                \n                                \n                                    \n                                        short_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub_menu\n                                    \n                                \n                                \n                                    \n                                        sub_menu:     string[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[][]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MiniSidebarItem.html":{"url":"components/MiniSidebarItem.html","title":"component - MiniSidebarItem","body":"\n                   \n\n\n\n\n\n  Components\n  MiniSidebarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/sidebar/sidebar-body/sidebar-body.component.ts\n\n\n    \n        Description\n    \n    \n        This component is an Element of restricted sidebar menu (desktop-only)\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mini-sidebar-item\n            \n\n            \n                styleUrls\n                mini-sidebar-item.component.css\n            \n\n\n\n            \n                templateUrl\n                mini-sidebar-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get_icon\n                            \n                            \n                                get_section_active\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, Router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        Router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type:    MenuItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.target' \n                        \n                    \n                \n                    \ndocument:click(targetElement: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            The Listener is used to handle every click on the window, and if the element clicked is not this menu-item the sub-menu is closed\n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_icon\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_icon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Get tha class of the icon to be shown for this menu entry\n\n\n                            \n                                Returns :     \"fas fa-calendar-times\" | \"fas fa-chalkboard-teacher\" | \"fas fa-question\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_section_active\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_section_active()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Checks if current route is in the section related to this item, so it can be displayed as active\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Output\n} from \"@angular/core\";\nimport { UserService } from \"../../user.service\";\nimport { Router } from \"@angular/router/\";\nimport { interval } from \"rxjs\";\nimport { MenuItem } from \"../../interfaces\";\n\n/**\n * This component is an Element of restricted sidebar menu (desktop-only)\n */\n@Component({\n  selector: \"mini-sidebar-item\",\n  templateUrl: \"mini-sidebar-item.component.html\",\n  styleUrls: [\"./mini-sidebar-item.component.css\"]\n})\nexport class MiniSidebarItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is shown\n\n  constructor(private _elementRef: ElementRef, private Router: Router) {}\n\n  /**\n   * The Listener is used to handle every click on the window, and if the element clicked is not this menu-item the sub-menu is closed\n   */\n  @HostListener(\"document:click\", [\"$event.target\"])\n  public onClick(targetElement) {\n    const clickedInside = this._elementRef.nativeElement.contains(\n      targetElement\n    ); //check if element is clicked\n    if (!clickedInside) {\n      this.active = false; //close sub-menu if click is external to this component\n    }\n  }\n\n  /**\n   * Get tha class of the icon to be shown for this menu entry\n   */\n  get_icon() {\n    if (this.item.name == \"Sezione Assenze\") return \"fas fa-calendar-times\";\n    if (this.item.name == \"Sezione Aule\") return \"fas fa-chalkboard-teacher\";\n    return \"fas fa-question\";\n  }\n\n  /**\n   * Checks if current route is in the section related to this item, so it can be displayed as active\n   */\n  get_section_active() {\n    var parts = this.Router.url.split(\"/\");\n    if (parts[1] == \"absences\" && this.item.short_name == \"Assenze\")\n      return true;\n    if (parts[1] == \"surveys\" && this.item.short_name == \"Sondaggi\")\n      return true;\n    if (parts[1] == \"rooms\" && this.item.short_name == \"Aule\") return true;\n    return false;\n  }\n}\n\n/**\n * This component is an Element of expanded-sidebar menu\n */\n@Component({\n  selector: \"sidebar-menu-item\",\n  templateUrl: \"sidebar-menu-item.component.html\",\n  styleUrls: [\"./sidebar-menu-item.component.css\"]\n})\nexport class SidebarMenuItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is visible\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor(private Router: Router) {}\n\n  /**\n   * Method called when a submenu item is clicked, it hides sidebar in mobile devices\n   */\n  collapse_if_mobile() {\n    if (window.screen.width  {\n      this.today = Date.now(); //refresh datetime every second\n    });\n\n    //Build the list of data object to be injected in menu-item components\n    var obj = {\n      //first item, absences section\n      name: \"Sezione Assenze\",\n      short_name: \"Assenze\",\n      sub_menu: [\n        [\"Calendario\", \"absences/calendar\"],\n        [\"Le tue Richieste\", \"/absences/myabsences\"],\n        [\"Richieste (amministratore)\", \"/absences/employees\"]\n      ]\n    };\n    this.items.push(obj);\n\n    /*obj = {\n      //second item, rooms section\n      name: \"Sezione Aule\",\n      short_name: \"Aule\",\n      sub_menu: [\n        [\"Aule (amministratore)\", \"\"],\n        [\"Le tue prenotazioni\", \"\"],\n        [\"Prenota Aula\", \"\"],\n        [\"Tutte le Aule\", \"\"]\n      ]\n    };\n    this.items.push(obj);*/\n\n    obj = {\n      //third item, surveys section\n      name: \"Sezione Sondaggi\",\n      short_name: \"Sondaggi\",\n      sub_menu: [\n        [\"Crea Sondaggio\", \"surveys/createsurvey\"],\n        [\"Sondaggi (amministratore)\", \"surveys/admin\"],\n        [\"Tutti i Sondaggi\", \"surveys/allsurveys\"]\n      ]\n    };\n    this.items.push(obj);\n  }\n\n  /**\n   * Emits output to the outer component in oorder to change sidebar status\n   */\n  emit_toggle() {\n    this.toggle.emit();\n  }\n\n  /**\n   * Emits output to the outer component in order to change sidebar status (just for mobile devices)\n   */\n  emit_toggle_if_mobile() {\n    if (window.screen.width \n    \n\n    \n        \n  \n    \n  \n  \n  {{item.short_name}}\n\n\n  \n    \n      {{item[0]}}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{item.short_name}}            {{item[0]}}      '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MiniSidebarItem'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModifyQuestionComponent.html":{"url":"components/ModifyQuestionComponent.html","title":"component - ModifyQuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModifyQuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/surveys-section/createsurvey/createsurvey.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows modal for survey modification, and contains a form very similar to the creation of the survey, both as a structure and as a logic\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modify-question\n            \n\n            \n                styleUrls\n                modify-question/modify-question.component.css\n            \n\n\n\n            \n                templateUrl\n                modify-question/modify-question.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                answers\n                            \n                            \n                                    Private\n                                api\n                            \n                            \n                                condition\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                previous_answer\n                            \n                            \n                                previous_answers\n                            \n                            \n                                previous_question\n                            \n                            \n                                previous_questions\n                            \n                            \n                                question\n                            \n                            \n                                step\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                deleteAnswer\n                            \n                            \n                                fillanswerslist\n                            \n                            \n                                insertAnswer\n                            \n                            \n                                multipleQuestions\n                            \n                            \n                                questionanswers\n                            \n                            \n                                submit\n                            \n                            \n                                upgradeQuestionsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type, UserService: UserService, HttpClient: HttpClient, RequestsSurveysService: RequestsSurveysService)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/createsurvey/createsurvey.component.ts:351\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsSurveysService\n                                                  \n                                                        \n                                                                    RequestsSurveysService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:455\n                            \n                        \n\n\n                \n                    \n                            Method called when user clicks 'ok' button, just closes the dialog and submit modify\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:463\n                            \n                        \n\n\n                \n                    \n                            Delete question from database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteAnswer(answer: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:445\n                            \n                        \n\n\n                \n                    \n                            Delete answer from answers list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answer\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillanswerslist\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillanswerslist(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:385\n                            \n                        \n\n\n                \n                    \n                            Create a list of answers from answer string received from database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insertAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \ninsertAnswer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:376\n                            \n                        \n\n\n                \n                    \n                            Insert answer in answers array\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multipleQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nmultipleQuestions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:427\n                            \n                        \n\n\n                \n                    \n                            Return only Multiple questions from previous_question array\n\n\n                            \n                                Returns :     QuestionsType[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionanswers\n                            \n                            \n                        \n                    \n                \n                \n                    \nquestionanswers(question: QuestionsType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:437\n                            \n                        \n\n\n                \n                    \n                            return answer list of question passed by parameter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    QuestionsType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:473\n                            \n                        \n\n\n                \n                    \n                            Submit question modification into database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upgradeQuestionsList\n                            \n                            \n                        \n                    \n                \n                \n                    \nupgradeQuestionsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:396\n                            \n                        \n\n\n                \n                    \n                            Pull questions already submitted from database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:339\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answers:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:347\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:351\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            condition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        condition:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:342\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:355\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:353\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previous_answer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previous_answer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:345\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previous_answers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previous_answers:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:349\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previous_question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previous_question:     QuestionsType\n\n                    \n                \n                    \n                        \n                            Type :     QuestionsType\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:344\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previous_questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previous_questions:     QuestionsType[]\n\n                    \n                \n                    \n                        \n                            Type :     QuestionsType[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:348\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        question:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:338\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            step\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        step:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:341\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:340\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Open\", \"Multiple\"]\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/createsurvey/createsurvey.component.ts:336\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA,\n  MatStepper\n} from \"@angular/material\";\nimport { RequestsSurveysService } from \"../requests.service\";\nimport {\n  QuestionsType,\n  SurveyCreationResponseType,\n  QuestionsResponseType,\n  SuccessResponseType\n} from \"../../interfaces\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, interval } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport swal from \"sweetalert\";\nimport { switchMap, map, share, filter } from \"rxjs/operators\";\nimport { UserService } from \"../../user.service\";\nimport * as config from \"../../config.json\";\n\n/**\n * This component shows frontend section for survey creation, and contains  a tree-times stepper(first step for general informations, second step for questions submit and third step for survey summary) that drive the creation of the survey\n */\n\n@Component({\n  selector: \"createsurvey\",\n  templateUrl: \"./createsurvey.component.html\",\n  styleUrls: [\"./createsurvey.component.css\"]\n})\nexport class CreatesurveyComponent implements OnInit {\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  name: string; //name of the survey\n  survey: any; //survey object\n\n  types: string[] = [\"Open\", \"Multiple\"]; //possible type of a single question\n\n  question: string; //NgModel for question input\n  answer: string; //NgModel for answer input\n  type: string; //NgModel for type radio\n  step: number = 1; //Current step in questions submit\n  condition: boolean = false; //NgModel for condition checkbox\n\n  previous_question: QuestionsType; //Ngmodel of previous question choosen for condition\n  previous_answer: string; //Ngmodel for answer select\n\n  answers: string[]; //list of all answers enter until now\n  questions: any; //list of all questions enter until now\n  previous_questions: QuestionsType[] = []; //questions included in the previous steps\n  previous_answers: string[]; //answers of previous question choosen for condition\n\n  timer: any;\n  ArrayStep: number[];\n\n  private api: string; //api base url\n\n  constructor(\n    public dialog: MatDialog,\n    private _formBuilder: FormBuilder,\n    private RequestsSurveysService: RequestsSurveysService, //Request service\n    private UserService: UserService, //User service\n    private HttpClient: HttpClient,\n    private router: Router //Router module\n  ) {\n    this.api = (config).api;\n    this.questions = [];\n    this.answers = [];\n    this.ArrayStep = [];\n    this.timer = interval(1000);\n  }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: [\"\", Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      question: [\"\", Validators.required],\n      answer: [\"\"],\n      type: [\"\"],\n      check: [\"\"],\n      pq: [\"\"],\n      pa: [\"\"]\n    });\n  }\n\n  /**\n   * Insert answer in answers array\n   */\n\n  insertAnswer() {\n    this.answers.push(this.answer);\n    this.answer = \"\";\n  }\n\n  /**\n   * Creates survey, create record into database and forward step\n   */\n\n  goForward(stepper: MatStepper) {\n    var url = this.api + \"surveys/surveys\";\n    //new request's data\n    var post = {\n      name: this.name\n    };\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.post(url, post, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (data.success) {\n          this.survey = data.survey;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n    stepper.next();\n  }\n\n  /**\n   * For every question contained in questions array creates record into database. At the end empties array\n   */\n\n  insertQuestion() {\n    var question = {\n      question: this.question,\n      answer: \"\",\n      answers: null,\n      type: this.type,\n      condition: \"false\",\n      previous_question: -1,\n      previous_answer: \"\"\n    };\n\n    //fill optional attributes if condition is selected\n    if (this.condition == true) {\n      question.condition = \"true\";\n      question.previous_question = this.previous_question.id;\n      question.previous_answer = this.previous_answer;\n    }\n\n    //fill answers if type is multiple\n    if (this.type == \"Multiple\") {\n      question.answer = this.answers.toString();\n      question.answers = this.answers;\n    }\n\n    this.question = \"None\";\n    this.answers = [];\n    this.previous_answer = \"\";\n    this.previous_question = null;\n\n    this.questions.push(question);\n  }\n\n  /**\n   * Call function for submit all questions and forward step of survey\n   */\n\n  forwardStep() {\n    this.RequestsSurveysService.sendQuestions(this.survey, this.questions); //send questions to database\n    this.upgradeQuestionsList(); //refresh previous_questions adding new questions\n    this.questions = []; //empties questions\n    this.ArrayStep.push(this.step);\n    this.step++; //increase step\n  }\n\n  /**\n   * Move to summary of the survey(ultimate step)\n   */\n\n  goForwardEnd(stepper: MatStepper) {\n    if (this.questions && this.questions.length > 0) this.forwardStep();\n    this.timer.subscribe(x => this.upgradeQuestionsList());\n    stepper.next();\n  }\n\n  /**\n   * Create a list of answers from answer string received from database\n   */\n\n  fillanswerslist(question) {\n    if (!question.answer) {\n      return;\n    }\n    this.previous_answers = question.answer.split(\",\");\n  }\n\n  /**\n   * Pull questions already submitted from database\n   */\n\n  upgradeQuestionsList() {\n    var url = this.api + \"surveys/surveys/\" + this.survey;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        this.previous_questions = data.questions;\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Return only Multiple questions from previous_question array\n   */\n\n  multipleQuestions(): QuestionsType[] {\n    return this.previous_questions.filter(\n      question => question.type == \"Multiple\"\n    );\n  }\n\n  /**\n   * Return only questions of specified step passed by parameter\n   */\n\n  stepQuestions(step: number): QuestionsType[] {\n    return this.previous_questions.filter(question => question.step == step);\n  }\n\n  /**\n   * return answer list of question passed by parameter\n   */\n\n  questionanswers(question: QuestionsType) {\n    return question.answer.split(\",\");\n  }\n\n  /**\n   * Delete Question before insert into database\n   */\n\n  deleteBeforeInsert(question: any) {\n    var index = this.questions.indexOf(question);\n    if (index > -1) {\n      this.questions.splice(index, 1);\n    }\n  }\n\n  /**\n   * Delete answer from answers list\n   */\n\n  deleteAnswer(answer) {\n    var index = this.answers.indexOf(answer);\n    if (index > -1) {\n      this.answers.splice(index, 1);\n    }\n  }\n\n  /**\n   * Open Dialog for survey modification\n   */\n\n  openDialog(question): void {\n    let dialogRef = this.dialog.open(ModifyQuestionComponent, {\n      data: { question: question, survey: this.survey }\n    });\n  }\n\n  /**\n   * Delete survey from database(with related questions ecc...)\n   */\n\n  deleteSurvey() {\n    swal({\n      title: \"Sei sicuro?\",\n      text:\n        \"Una volta eliminato perderai tutti i progressi relativi al sondaggio\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        this.RequestsSurveysService.deleteSurvey(this.survey);\n        this.router.navigate([\"/home\"]);\n      }\n    });\n  }\n\n  /**\n   * Finalizes the creation of survey\n   */\n\n  finishCreation() {\n    swal({\n      title: \"Sei sicuro?\",\n      text: \"Assicurati di aver controllato il riepilogo\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        swal(\"Fatto!\", \"Sondaggio creato con successo!\", \"success\");\n        this.router.navigate([\"/home\"]);\n      } else {\n      }\n    });\n  }\n}\n\n/**\n * This component shows modal for survey modification, and contains a form very similar to the creation of the survey, both as a structure and as a logic\n */\n\n@Component({\n  selector: \"modify-question\",\n  templateUrl: \"modify-question/modify-question.component.html\",\n  styleUrls: [\"modify-question/modify-question.component.css\"]\n})\nexport class ModifyQuestionComponent {\n  types: string[] = [\"Open\", \"Multiple\"];\n\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition: boolean = false;\n\n  previous_question: QuestionsType;\n  previous_answer: string;\n\n  answers: string[] = [];\n  previous_questions: QuestionsType[] = [];\n  previous_answers: string[];\n\n  private api: string;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA)\n    public data: { question: QuestionsType; survey: number },\n    private UserService: UserService,\n    private HttpClient: HttpClient,\n    private RequestsSurveysService: RequestsSurveysService\n  ) {\n    this.api = (config).api;\n\n    //Pull question informations and upload in modal variables\n    if (this.data.question.answer.length > 3)\n      this.answers = this.questionanswers(this.data.question);\n    this.question = this.data.question.question;\n    this.type = this.data.question.type;\n    this.step = this.data.question.step;\n    this.condition = this.data.question.condition_answer ? false : true;\n    this.upgradeQuestionsList();\n  }\n\n  /**\n   * Insert answer in answers array\n   */\n\n  insertAnswer() {\n    this.answers.push(this.answer);\n    this.answer = \"\";\n  }\n\n  /**\n   * Create a list of answers from answer string received from database\n   */\n\n  fillanswerslist(question) {\n    if (!question.answer) {\n      return;\n    }\n    this.previous_answers = question.answer.split(\",\");\n  }\n\n  /**\n   * Pull questions already submitted from database\n   */\n\n  upgradeQuestionsList() {\n    var url = this.api + \"surveys/surveys/\" + this.data.survey;\n    this.HttpClient.get(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          swal(\"Oops!\", \"Errore durante l'invio della richiesta!\", \"error\");\n          if (data.error) {\n            console.log(data.error);\n          }\n          return;\n        }\n        this.previous_questions = data.questions;\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n        return;\n      }\n    );\n    return;\n  }\n\n  /**\n   * Return only Multiple questions from previous_question array\n   */\n\n  multipleQuestions(): QuestionsType[] {\n    return this.previous_questions.filter(\n      question => question.type == \"Multiple\"\n    );\n  }\n\n  /**\n   * return answer list of question passed by parameter\n   */\n\n  questionanswers(question: QuestionsType) {\n    return question.answer.split(\",\");\n  }\n\n  /**\n   * Delete answer from answers list\n   */\n\n  deleteAnswer(answer) {\n    var index = this.answers.indexOf(answer);\n    if (index > -1) {\n      this.answers.splice(index, 1);\n    }\n  }\n\n  /**\n   * Method called when user clicks 'ok' button, just closes the dialog and submit modify\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Delete question from database\n   */\n\n  delete(): void {\n    this.RequestsSurveysService.deleteQuestion(this.data.question.id);\n    this.upgradeQuestionsList();\n    this.dialogRef.close();\n  }\n\n  /**\n   * Submit question modification into database\n   */\n\n  submit(): void {\n    var post = {\n      question: this.question,\n      answer: \"\",\n      type: this.type,\n      condition: \"false\",\n      previous_question: -1,\n      previous_answer: \"\"\n    };\n\n    if (this.type == \"Multiple\") {\n      post.answer = this.answers.toString();\n    }\n\n    if (this.condition == true) {\n      post.condition = \"true\";\n      post.previous_question = this.previous_question.id;\n      post.previous_answer = this.previous_answer;\n    }\n\n    this.RequestsSurveysService.modifyQuestion(this.data.question.id, post);\n    this.upgradeQuestionsList();\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Modifica domanda\n  \n      \n        \n        \n          \n        \n      \n      \n        \n          {{type}}\n        \n      \n    \n      \n        \n          \n        \n        Aggiungi\n      \n      \n       0\">\n        \n           {{answer}}\n        \n      \n    \n       1\">\n        Domanda condizionale\n      \n      \n        \n          \n            None\n            \n              {{question.question}}\n            \n          \n        \n      \n      \n        \n          \n            None\n            \n              {{answer}}\n            \n          \n        \n      \n  \n  \n    \n  \n  \n    Modifica\n    Elimina\n    Chiudi\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Modifica domanda                                                                        {{type}}                                                          Aggiungi                   0\">                   {{answer}}                         1\">        Domanda condizionale                                          None                          {{question.question}}                                                                        None                          {{answer}}                                                    Modifica    Elimina    Chiudi  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModifyQuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModifyRequestComponent.html":{"url":"components/ModifyRequestComponent.html","title":"component - ModifyRequestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModifyRequestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modify-request\n            \n\n            \n                styleUrls\n                modify-request/modify-request.component.css\n            \n\n\n\n            \n                templateUrl\n                modify-request/modify-request.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                custom_reason\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Private\n                                end_date\n                            \n                            \n                                    Private\n                                fileList\n                            \n                            \n                                    Private\n                                reason\n                            \n                            \n                                    Private\n                                start_date\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelClick\n                            \n                            \n                                fileChange\n                            \n                            \n                                save_changes\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type, RequestsService: RequestsService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChange(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save_changes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave_changes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:167\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            custom_reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        custom_reason:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            end_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end_date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileList:     FileList\n\n                    \n                \n                    \n                        \n                            Type :     FileList\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reason:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        start_date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:101\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy } from \"@angular/core\";\nimport { RequestsService } from \"../../requests.service\";\nimport { Subscription } from \"rxjs\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA\n} from \"@angular/material\";\nimport { RequestType } from \"../../../interfaces\";\nimport * as config from \"../../../config.json\";\nimport swal from \"sweetalert\";\n\n/*\n  This component contains the list of the requests made by the logged-in user\n*/\n@Component({\n  selector: \"my-absences-list\",\n  templateUrl: \"./my-absences-list.component.html\",\n  styleUrls: [\"./my-absences-list.component.css\"]\n})\nexport class MyAbsencesListComponent implements OnDestroy {\n  private api: string; //api base url\n  private myrequests: RequestType[]; //list of the requests\n  private filter: number = -1; //parameter to filter requests by the state\n  private myrequestsSubscription: Subscription;\n\n  constructor(\n    public dialog: MatDialog,\n    private RequestsService: RequestsService\n  ) {\n    this.api = (config).api;\n\n    //subscription to requests-service's observable to get myrequests list\n    this.myrequestsSubscription = this.RequestsService.myrequests$.subscribe(\n      requests => {\n        this.myrequests = requests; //save received data\n      }\n    );\n\n    //force observable to emit data in the stream even if it has not changed from last check\n    this.RequestsService.reset_myrequests_version();\n  }\n\n  //get the number of displayed requests considering the effect of the state filter\n  displayed_requests() {\n    if (!this.myrequests) return 0;\n    if (!this.filter || this.filter == -1) return this.myrequests.length;\n    var count = 0;\n    for (var i = 0; i ,\n    @Inject(MAT_DIALOG_DATA) public data: { request: RequestType },\n    private RequestsService: RequestsService\n  ) {\n    //set form data equals to selected request data\n    this.start_date = new Date(this.data.request.start_date);\n    this.end_date = new Date(this.data.request.end_date);\n\n    if (\n      this.data.request.reason == \"ferie\" ||\n      this.data.request.reason == \"malattia\" ||\n      this.data.request.reason == \"studio\"\n    ) {\n      this.reason = this.data.request.reason;\n      this.custom_reason = null;\n    } else {\n      this.reason = \"other\";\n      this.custom_reason = this.data.request.reason;\n    }\n  }\n\n  //User discarded changes, just close the dialog\n  cancelClick(): void {\n    this.dialogRef.close();\n  }\n\n  //get changes from file input\n  fileChange(event) {\n    this.fileList = event.target.files;\n  }\n\n  //Call requests-service method to modify the request after a confirm check\n  save_changes() {\n    //if reason is not standard set it to custom reason\n    var reason = this.reason == \"other\" ? this.custom_reason : this.reason;\n\n    //use swal to show confirm box\n    swal({\n      title: \"Conferma\",\n      text: \"Salvare le modifiche apportate alla richiesta?\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        //willDelete is true if user clicked ok\n        this.RequestsService.modify_request(\n          this.data.request.id,\n          reason,\n          this.start_date,\n          this.end_date,\n          this.fileList,\n          this.dialogRef\n        );\n        return;\n      }\n    });\n  }\n\n  //validation of form data\n  validate() {\n    //end_date must be after start_date\n    if (this.end_date && !(this.end_date >= this.start_date)) return false;\n\n    //absence reason must be set\n    if (!this.reason) return false;\n    if (\n      this.reason == \"other\" &&\n      (!this.custom_reason || this.custom_reason == \"\")\n    )\n      return false;\n\n    //check if some data has been modified\n    var old_start_date = new Date(this.data.request.start_date);\n    var old_end_date = new Date(this.data.request.end_date);\n    if (this.end_date.getTime() != old_end_date.getTime()) return true;\n    if (this.start_date.getTime() != old_start_date.getTime()) return true;\n    if (\n      this.data.request.reason != \"malattia\" &&\n      this.data.request.reason != \"ferie\" &&\n      this.data.request.reason != \"studio\" &&\n      this.data.request.reason != \"other\"\n    ) {\n      if (\n        this.reason != \"other\" ||\n        this.custom_reason != this.data.request.reason\n      )\n        return true;\n    }\n    if (\n      this.reason != this.data.request.reason &&\n      (this.data.request.reason == \"malattia\" ||\n        this.data.request.reason == \"ferie\" ||\n        this.data.request.reason == \"studio\")\n    )\n      return true;\n    if (this.fileList && this.fileList.length > 0) return true;\n\n    //no data has been modified, unvalidate form\n    return false;\n  }\n}\n\n    \n\n    \n        \n  Modifica Richiesta #{{data.request.id}}\n  \n    \n        \n            \n              \n              \n              \n            \n        \n        \n            \n              \n              \n              \n            \n        \n        \n            \n                \n                    Malattia\n                    Studio\n                    Ferie\n                    Altro (specifica)\n                \n            \n        \n        \n            \n              \n            \n        \n        \n                Carica file giustificativo\n                \n        \n    \n  \n  \n    \n  \n  \n    Salva Modifiche\n    Annulla\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Modifica Richiesta #{{data.request.id}}                                                                                                                                                                                                                                  Malattia                    Studio                    Ferie                    Altro (specifica)                                                                                                                  Carica file giustificativo                                            Salva Modifiche    Annulla  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModifyRequestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyAbsencesComponent.html":{"url":"components/MyAbsencesComponent.html","title":"component - MyAbsencesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyAbsencesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/my-absences/my-absences.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows a list of the absence-request made by the logged-in user, and contains a form to submit new requests\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-absences\n            \n\n            \n                styleUrls\n                my-absences.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-absences.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Private\n                                custom_reason\n                            \n                            \n                                    Private\n                                end_date\n                            \n                            \n                                    Private\n                                fileList\n                            \n                            \n                                    Private\n                                reason\n                            \n                            \n                                    Private\n                                start_date\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fileChange\n                            \n                            \n                                send_request\n                            \n                            \n                                validate\n                            \n                            \n                                validate_period_len\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(HttpClient: HttpClient, RequestsService: RequestsService, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/my-absences/my-absences.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nfileChange(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Handles file selection from file input by putting selected files in the fileList object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            send_request\n                            \n                            \n                        \n                    \n                \n                \n                    \nsend_request()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Collects data from inputs and call request-service's method to submit a new absence-request\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Validation of input data, end date, if set, must be after the start date, the absence period must be less than 180 days and a reason must be set\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate_period_len\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate_period_len()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Checks absence length (in days), it can't be more then 180 days\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            custom_reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        custom_reason:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            end_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end_date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileList:     FileList\n\n                    \n                \n                    \n                        \n                            Type :     FileList\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reason:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        start_date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport * as config from \"../../config.json\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { RequestsService } from \"../requests.service\";\nimport { UserService } from \"../../user.service\";\nimport swal from \"sweetalert\";\n\n/**\n * This component shows a list of the absence-request made by the logged-in user, and contains a form to submit new requests\n */\n@Component({\n  selector: \"my-absences\",\n  templateUrl: \"./my-absences.component.html\",\n  styleUrls: [\"./my-absences.component.css\"]\n})\nexport class MyAbsencesComponent {\n  private api: string; //api base url\n  private start_date: Date = new Date(); //start_date of the request\n  private end_date: Date; //end date of the request\n  private reason: string; //reason for the absence\n  private custom_reason: string; //a non-standard reason\n  private fileList: FileList; //fileList to upload justification file for the request\n  constructor(\n    private HttpClient: HttpClient,\n    private RequestsService: RequestsService,\n    private UserService: UserService\n  ) {\n    this.api = (config).api;\n    //we need just the date, not the time\n    this.start_date.setHours(0, 0, 0, 0);\n  }\n\n  /**\n   * Handles file selection from file input by putting selected files in the fileList object\n   */\n  fileChange(event) {\n    this.fileList = event.target.files;\n  }\n\n  /**\n   * Collects data from inputs and call request-service's method to submit a new absence-request\n   */\n  send_request() {\n    //check if reason is a custom reason\n    var reason = this.reason == \"other\" ? this.custom_reason : this.reason;\n\n    //check if end_date is set, otherwise set end date = start date\n    var end_date = this.end_date ? this.end_date : this.start_date;\n\n    //call requests-service method to submit request\n    this.RequestsService.send_request(\n      reason,\n      this.start_date,\n      end_date,\n      this.fileList\n    );\n\n    //clear form\n    this.start_date = new Date();\n    this.end_date = null;\n    this.reason = null;\n    this.custom_reason = null;\n    this.fileList = null;\n  }\n\n  /**\n   * Validation of input data, end date, if set, must be after the start date, the absence period must be less than 180 days and a reason must be set\n   */\n  validate() {\n    //if set, end_date must be after the start_date\n    if (this.end_date && !(this.end_date >= this.start_date)) return false;\n\n    //the max length for request is 6 month\n    if (this.validate_period_len() == false) return false;\n\n    //required field reason\n    if (!this.reason) return false;\n\n    //if reason is not standard, a custom one must be specified\n    if (\n      this.reason == \"other\" &&\n      (!this.custom_reason || this.custom_reason == \"\")\n    )\n      return false;\n    return true;\n  }\n\n  /**\n   * Checks absence length (in days), it can't be more then 180 days\n   */\n  validate_period_len() {\n    if (!this.end_date) return true;\n    var start = new Date(this.start_date);\n    var end = new Date(this.end_date);\n    var timeDiff = Math.abs(end.getTime() - start.getTime());\n    var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\n    if (diffDays > 180) return false;\n    return true;\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Richiedi un nuovo permesso\n        \n        \n            \n                \n                    \n                      \n                      \n                      \n                    \n                \n                \n                    \n                      \n                      \n                      \n                    \n                \n                \n                    \n                        \n                            Malattia\n                            Studio\n                            Ferie\n                            Altro (specifica)\n                        \n                    \n                \n                \n                    \n                      \n                    \n                \n                \n                        Carica file giustificativo\n                        \n                \n            \n            \n                INVIA\n                \n                 NOTA: Non è possibile richiedere permessi per periodi maggiori di sei mesi (180 giorni)\n            \n            \n                 NB: Le tue richieste dovranno essere approvate dal tuo superiore ({{UserService.get_boss_name(UserService.get_user().id)}}) prima di essere confermate\n            \n        \n    \n    \n        \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Richiedi un nuovo permesso                                                                                                                                                                                                                                                                                                                                                                                                        Malattia                            Studio                            Ferie                            Altro (specifica)                                                                                                                                                                                                  Carica file giustificativo                                                                                INVIA                                 NOTA: Non è possibile richiedere permessi per periodi maggiori di sei mesi (180 giorni)                                         NB: Le tue richieste dovranno essere approvate dal tuo superiore ({{UserService.get_boss_name(UserService.get_user().id)}}) prima di essere confermate                                                            '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyAbsencesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyAbsencesListComponent.html":{"url":"components/MyAbsencesListComponent.html","title":"component - MyAbsencesListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyAbsencesListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-absences-list\n            \n\n            \n                styleUrls\n                my-absences-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-absences-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                filter\n                            \n                            \n                                    Private\n                                myrequests\n                            \n                            \n                                    Private\n                                myrequestsSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayed_requests\n                            \n                            \n                                get_number\n                            \n                            \n                                get_state_label\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, RequestsService: RequestsService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        RequestsService\n                                                  \n                                                        \n                                                                    RequestsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayed_requests\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayed_requests()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_number\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_number()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_state_label\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_state_label(state: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"Approvata\" | \"Rifiutata\" | \"In attesa di approvazione\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(request: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myrequests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myrequests:     RequestType[]\n\n                    \n                \n                    \n                        \n                            Type :     RequestType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myrequestsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myrequestsSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy } from \"@angular/core\";\nimport { RequestsService } from \"../../requests.service\";\nimport { Subscription } from \"rxjs\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA\n} from \"@angular/material\";\nimport { RequestType } from \"../../../interfaces\";\nimport * as config from \"../../../config.json\";\nimport swal from \"sweetalert\";\n\n/*\n  This component contains the list of the requests made by the logged-in user\n*/\n@Component({\n  selector: \"my-absences-list\",\n  templateUrl: \"./my-absences-list.component.html\",\n  styleUrls: [\"./my-absences-list.component.css\"]\n})\nexport class MyAbsencesListComponent implements OnDestroy {\n  private api: string; //api base url\n  private myrequests: RequestType[]; //list of the requests\n  private filter: number = -1; //parameter to filter requests by the state\n  private myrequestsSubscription: Subscription;\n\n  constructor(\n    public dialog: MatDialog,\n    private RequestsService: RequestsService\n  ) {\n    this.api = (config).api;\n\n    //subscription to requests-service's observable to get myrequests list\n    this.myrequestsSubscription = this.RequestsService.myrequests$.subscribe(\n      requests => {\n        this.myrequests = requests; //save received data\n      }\n    );\n\n    //force observable to emit data in the stream even if it has not changed from last check\n    this.RequestsService.reset_myrequests_version();\n  }\n\n  //get the number of displayed requests considering the effect of the state filter\n  displayed_requests() {\n    if (!this.myrequests) return 0;\n    if (!this.filter || this.filter == -1) return this.myrequests.length;\n    var count = 0;\n    for (var i = 0; i ,\n    @Inject(MAT_DIALOG_DATA) public data: { request: RequestType },\n    private RequestsService: RequestsService\n  ) {\n    //set form data equals to selected request data\n    this.start_date = new Date(this.data.request.start_date);\n    this.end_date = new Date(this.data.request.end_date);\n\n    if (\n      this.data.request.reason == \"ferie\" ||\n      this.data.request.reason == \"malattia\" ||\n      this.data.request.reason == \"studio\"\n    ) {\n      this.reason = this.data.request.reason;\n      this.custom_reason = null;\n    } else {\n      this.reason = \"other\";\n      this.custom_reason = this.data.request.reason;\n    }\n  }\n\n  //User discarded changes, just close the dialog\n  cancelClick(): void {\n    this.dialogRef.close();\n  }\n\n  //get changes from file input\n  fileChange(event) {\n    this.fileList = event.target.files;\n  }\n\n  //Call requests-service method to modify the request after a confirm check\n  save_changes() {\n    //if reason is not standard set it to custom reason\n    var reason = this.reason == \"other\" ? this.custom_reason : this.reason;\n\n    //use swal to show confirm box\n    swal({\n      title: \"Conferma\",\n      text: \"Salvare le modifiche apportate alla richiesta?\",\n      icon: \"warning\",\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        //willDelete is true if user clicked ok\n        this.RequestsService.modify_request(\n          this.data.request.id,\n          reason,\n          this.start_date,\n          this.end_date,\n          this.fileList,\n          this.dialogRef\n        );\n        return;\n      }\n    });\n  }\n\n  //validation of form data\n  validate() {\n    //end_date must be after start_date\n    if (this.end_date && !(this.end_date >= this.start_date)) return false;\n\n    //absence reason must be set\n    if (!this.reason) return false;\n    if (\n      this.reason == \"other\" &&\n      (!this.custom_reason || this.custom_reason == \"\")\n    )\n      return false;\n\n    //check if some data has been modified\n    var old_start_date = new Date(this.data.request.start_date);\n    var old_end_date = new Date(this.data.request.end_date);\n    if (this.end_date.getTime() != old_end_date.getTime()) return true;\n    if (this.start_date.getTime() != old_start_date.getTime()) return true;\n    if (\n      this.data.request.reason != \"malattia\" &&\n      this.data.request.reason != \"ferie\" &&\n      this.data.request.reason != \"studio\" &&\n      this.data.request.reason != \"other\"\n    ) {\n      if (\n        this.reason != \"other\" ||\n        this.custom_reason != this.data.request.reason\n      )\n        return true;\n    }\n    if (\n      this.reason != this.data.request.reason &&\n      (this.data.request.reason == \"malattia\" ||\n        this.data.request.reason == \"ferie\" ||\n        this.data.request.reason == \"studio\")\n    )\n      return true;\n    if (this.fileList && this.fileList.length > 0) return true;\n\n    //no data has been modified, unvalidate form\n    return false;\n  }\n}\n\n    \n\n    \n        \n  Le tue richieste {{get_number()}}\n  \n    \n      \n          Tutte\n          Approvate\n          In Attesa\n          Rifiutate\n      \n    \n  \n\n\n  \n    \n      \n        \n          \n            Richiesta #{{request.id}} ({{request.reason | titlecase}})\n          \n          \n            {{get_state_label(request.state)}}\n          \n        \n        \n          \n        \n        \n          \n            \n              \n                Data di inizio: {{request.start_date | date : 'EEEE, d MMMM y' | titlecase}}\n              \n              \n                Data di fine (compresa): {{request.end_date | date : 'EEEE, d MMMM y' | titlecase}}\n              \n              \n                Motivazione: {{request.reason | titlecase}}\n              \n            \n          \n          \n            \n              File giustificativo:\n              \n                \n              \n              \n                \n              \n            \n          \n        \n        \n        Annulla\n        Modifica\n      \n      \n    \n  \n\n\n    \n\n\n\n    Nessuna richiesta da mostrare...\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Le tue richieste {{get_number()}}                      Tutte          Approvate          In Attesa          Rifiutate                                                      Richiesta #{{request.id}} ({{request.reason | titlecase}})                                {{get_state_label(request.state)}}                                                                                                        Data di inizio: {{request.start_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                            Data di fine (compresa): {{request.end_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                            Motivazione: {{request.reason | titlecase}}                                                                        File giustificativo:                                                                                                                                      Annulla        Modifica                          Nessuna richiesta da mostrare...'\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyAbsencesListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MySurveyType.html":{"url":"interfaces/MySurveyType.html","title":"interface - MySurveyType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MySurveyType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id_survey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_survey\n                                    \n                                \n                                \n                                    \n                                        id_survey:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MySurveysResponseType.html":{"url":"interfaces/MySurveysResponseType.html","title":"interface - MySurveysResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MySurveysResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        surveys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surveys\n                                    \n                                \n                                \n                                    \n                                        surveys:     MySurveyType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MySurveyType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PercentualAnswerResponseType.html":{"url":"interfaces/PercentualAnswerResponseType.html","title":"interface - PercentualAnswerResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PercentualAnswerResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        percentual\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentual\n                                    \n                                \n                                \n                                    \n                                        percentual:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PercentualAnswerType.html":{"url":"interfaces/PercentualAnswerType.html","title":"interface - PercentualAnswerType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PercentualAnswerType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        answer\n                                \n                                \n                                        percentual\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answer\n                                    \n                                \n                                \n                                    \n                                        answer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentual\n                                    \n                                \n                                \n                                    \n                                        percentual:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionsResponseType.html":{"url":"interfaces/QuestionsResponseType.html","title":"interface - QuestionsResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuestionsResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        questions\n                                \n                                \n                                        step\n                                \n                                \n                                        success\n                                \n                                \n                                        survey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                    \n                                \n                                \n                                    \n                                        questions:     QuestionsType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     QuestionsType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                    \n                                \n                                \n                                    \n                                        step:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        survey\n                                    \n                                \n                                \n                                    \n                                        survey:     SurveyType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SurveyType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionsType.html":{"url":"interfaces/QuestionsType.html","title":"interface - QuestionsType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuestionsType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        answer\n                                \n                                \n                                        answer_compile\n                                \n                                \n                                        answer_of_user\n                                \n                                \n                                        condition_answer\n                                \n                                \n                                        condition_confirmed\n                                \n                                \n                                        current_user\n                                \n                                \n                                        id\n                                \n                                \n                                        id_survey\n                                \n                                \n                                        percentual_answers\n                                \n                                \n                                        question\n                                \n                                \n                                        step\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answer\n                                    \n                                \n                                \n                                    \n                                        answer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answer_compile\n                                    \n                                \n                                \n                                    \n                                        answer_compile:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answer_of_user\n                                    \n                                \n                                \n                                    \n                                        answer_of_user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condition_answer\n                                    \n                                \n                                \n                                    \n                                        condition_answer:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condition_confirmed\n                                    \n                                \n                                \n                                    \n                                        condition_confirmed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current_user\n                                    \n                                \n                                \n                                    \n                                        current_user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_survey\n                                    \n                                \n                                \n                                    \n                                        id_survey:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentual_answers\n                                    \n                                \n                                \n                                    \n                                        percentual_answers:     PercentualAnswerType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PercentualAnswerType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        question\n                                    \n                                \n                                \n                                    \n                                        question:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                    \n                                \n                                \n                                    \n                                        step:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterResponseType.html":{"url":"interfaces/RegisterResponseType.html","title":"interface - RegisterResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RequestDetailsComponent.html":{"url":"components/RequestDetailsComponent.html","title":"component - RequestDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RequestDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/absences-section/absences-calendar/absences-calendar.component.ts\n\n\n    \n        Description\n    \n    \n        This is the dialog component, it contains the info of the selected request\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                request-details\n            \n\n            \n                styleUrls\n                request-details/request-details.component.css\n            \n\n\n\n            \n                templateUrl\n                request-details/request-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                get_state_label\n                            \n                            \n                                get_state_label_class\n                            \n                            \n                                get_user_name\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:159\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:197\n                            \n                        \n\n\n                \n                    \n                            Method called when user clicks 'ok' button, just closes the dialog\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_state_label\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_state_label(state: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:179\n                            \n                        \n\n\n                \n                    \n                            Get the label to be displayed according to the request state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"Approvata\" | \"Rifiutata\" | \"In Attesa di Conferma\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_state_label_class\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_state_label_class(state: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Get the class to change the color of request indicator according to the request state\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"green\" | \"red\" | \"grey\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_user_name\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_user_name()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:171\n                            \n                        \n\n\n                \n                    \n                            Get the complete name of the user thet made the request\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:159\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:162\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in app/absences-section/absences-calendar/absences-calendar.component.ts:161\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy } from \"@angular/core\";\nimport {\n  startOfDay,\n  endOfDay,\n  endOfMonth,\n  isSameDay,\n  isSameMonth\n} from \"date-fns\";\nimport { Subscription } from \"rxjs\";\nimport { CalendarEvent, CalendarEventAction } from \"angular-calendar\";\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogConfig,\n  MAT_DIALOG_DATA\n} from \"@angular/material\";\nimport { RequestsService } from \"../requests.service\";\nimport { UserService } from \"../../user.service\";\nimport { RequestType } from \"../../interfaces\";\nimport * as config from \"../../config.json\";\n\n//colors for absence indicators, it changes according to request's state\nconst colors: any = {\n  red: {\n    //refused requests\n    primary: \"#ad2121\",\n    secondary: \"#FAE3E3\"\n  },\n  grey: {\n    //pending requests\n    primary: \"#888888\",\n    secondary: \"#aaaaaa\"\n  },\n  green: {\n    //approved requests\n    primary: \"#21ad21\",\n    secondary: \"#e3fae3\"\n  }\n};\n\n/**\n * Absences calendar, for every day are displayed all the approved, refused and pending requests for absences\n *\n * NOTE: Component base code got from angular-calendar: https://mattlewis92.github.io/angular-calendar/docs/\n */\n@Component({\n  selector: \"absences-calendar\",\n  templateUrl: \"./absences-calendar.component.html\",\n  styleUrls: [\"./absences-calendar.component.css\"]\n})\nexport class AbsencesCalendarComponent implements OnDestroy {\n  private requests: RequestType[]; //list of all request made by any of the employees\n  private requestsSubscription: Subscription;\n  private events: CalendarEvent[]; //Type of event-item to be injected in the calendar\n  private viewDate: Date = new Date(); //selected date\n  private activeDayIsOpen: boolean = true; //If true the list of absences for the active day is shown\n  private state_filter: number = -1; //value of the state filter (-1 means no filter)\n\n  /**\n   * The constructor registers a new subscription to RequestsService's observable to get the list of all the absence requests in the company\n   */\n  constructor(\n    public dialog: MatDialog,\n    private RequestsService: RequestsService,\n    private UserService: UserService\n  ) {\n    //subscription to observable to get requests list from requests-service\n    this.requestsSubscription = this.RequestsService.all_requests$.subscribe(\n      data => {\n        this.requests = data;\n        this.make_event_list(); //Generate the list for the calendar for requests list\n      }\n    );\n    this.RequestsService.reset_all_requests_version(); //force observable to emit data in the stream even if it has not changed from last check\n  }\n\n  /**\n   * Handler for clicks on a day of the calendar, if opens/closes dayly-absence list for the clicked day\n   */\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false; //close event list if it was opened for the clicked day\n      } else {\n        this.activeDayIsOpen = true; //open the list\n        this.viewDate = date; //select the clicked day\n      }\n    }\n  }\n\n  /**\n   * This method gets a list of requests and maps it into an CalendarEvent List that can be used as input for the calendar\n   */\n  make_event_list() {\n    var res = [];\n    var user;\n    var color;\n    for (var i = 0; i ,\n    @Inject(MAT_DIALOG_DATA) public data: { request: RequestType },\n    private UserService: UserService\n  ) {\n    this.api = (config).api;\n  }\n\n  /**\n   * Get the complete name of the user thet made the request\n   */\n  get_user_name() {\n    var user = this.UserService.get_user_by_id(this.data.request.id_user);\n    return user.surname + \" \" + user.name;\n  }\n\n  /**\n   * Get the label to be displayed according to the request state\n   */\n  get_state_label(state) {\n    if (state == 1) return \"Approvata\";\n    if (state == 2) return \"Rifiutata\";\n    return \"In Attesa di Conferma\";\n  }\n\n  /**\n   * Get the class to change the color of request indicator according to the request state\n   */\n  get_state_label_class(state) {\n    if (state == 1) return \"green\";\n    if (state == 2) return \"red\";\n    return \"grey\";\n  }\n\n  /**\n   * Method called when user clicks 'ok' button, just closes the dialog\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Richiesta #{{data.request.id}} ({{get_user_name()}})\n  \n    \n      \n        \n          \n            Data di inizio: {{data.request.start_date | date : 'EEEE, d MMMM y' | titlecase}}\n          \n          \n            Data di fine (compresa): {{data.request.end_date | date : 'EEEE, d MMMM y' | titlecase}}\n          \n          \n            Motivazione: {{data.request.reason | titlecase}}\n          \n          \n            Stato: {{get_state_label(data.request.state)}}\n          \n          \n            File giustificativo:\n            \n              \n            \n            \n              \n            \n            Non disponibile\n          \n        \n\n      \n    \n  \n  \n    \n  \n  \n    Ok\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Richiesta #{{data.request.id}} ({{get_user_name()}})                                          Data di inizio: {{data.request.start_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                Data di fine (compresa): {{data.request.end_date | date : \\'EEEE, d MMMM y\\' | titlecase}}                                Motivazione: {{data.request.reason | titlecase}}                                Stato: {{get_state_label(data.request.state)}}                                File giustificativo:                                                                                        Non disponibile                                            Ok  '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RequestDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestType.html":{"url":"interfaces/RequestType.html","title":"interface - RequestType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        end_date\n                                \n                                \n                                        id\n                                \n                                \n                                        id_user\n                                \n                                \n                                        justification_file\n                                \n                                \n                                        reason\n                                \n                                \n                                        start_date\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end_date\n                                    \n                                \n                                \n                                    \n                                        end_date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        justification_file\n                                    \n                                \n                                \n                                    \n                                        justification_file:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reason\n                                    \n                                \n                                \n                                    \n                                        reason:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_date\n                                    \n                                \n                                \n                                    \n                                        start_date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestsResponseType.html":{"url":"interfaces/RequestsResponseType.html","title":"interface - RequestsResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestsResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        requests\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requests\n                                    \n                                \n                                \n                                    \n                                        requests:     RequestType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestsSurveysService.html":{"url":"injectables/RequestsSurveysService.html","title":"injectable - RequestsSurveysService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RequestsSurveysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/surveys-section/requests.service.ts\n        \n\n            \n                Description\n            \n            \n                This service can be used for all the survey-related funtionality. It's methods sends propr requests to backend to get and update values in the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                all_surveys_version\n                            \n                            \n                                    Public\n                                all_surveys$\n                            \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Private\n                                my_surveys_version\n                            \n                            \n                                    Public\n                                my_surveys$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteQuestion\n                            \n                            \n                                deleteSurvey\n                            \n                            \n                                modifyQuestion\n                            \n                            \n                                reset_all_surveys_version\n                            \n                            \n                                reset_my_surveys_version\n                            \n                            \n                                sendQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(HttpClient: HttpClient, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/surveys-section/requests.service.ts:29\n                            \n                        \n\n                \n                    \n                            The constructor creates 2 observables to get the lists of all surveys and the list of surveys submitted by user\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        HttpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteQuestion(question: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            Delete a specific question from database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteSurvey\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteSurvey(survey: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:120\n                            \n                        \n\n\n                \n                    \n                            Deletes a survey from database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifyQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodifyQuestion(question: , parameters: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Send request for modify a specific question\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        parameters\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset_all_surveys_version\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset_all_surveys_version()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:229\n                            \n                        \n\n\n                \n                    \n                            This method is called when a new subscription to all_surveys observable is registered, it forces to send the value even this has not changed by setting version code to '', so new subscribers can get the value\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset_my_surveys_version\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset_my_surveys_version()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:237\n                            \n                        \n\n\n                \n                    \n                            This method is called when a new subscription to my_surveys observable is registered, it forces to send the value even this has not changed by setting version code to '', so new subscribers can get the value\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendQuestions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendQuestions(survey: string, questions: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            Insert questions of specific survey into database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        survey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        questions\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            all_surveys_version\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        all_surveys_version:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            all_surveys$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        all_surveys$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            my_surveys_version\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        my_surveys_version:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            my_surveys$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        my_surveys$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in app/surveys-section/requests.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Component, Injectable, Inject } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, interval } from \"rxjs\";\nimport { switchMap, map, share, filter } from \"rxjs/operators\";\nimport {\n  SurveyCreationResponseType,\n  MySurveyType,\n  MySurveysResponseType,\n  QuestionsResponseType,\n  QuestionsType,\n  SuccessResponseType,\n  SurveyType,\n  SurveysResponseType,\n  VersionResponseType\n} from \"../interfaces\";\nimport * as config from \"../config.json\";\nimport swal from \"sweetalert\";\nimport { UserService } from \"../user.service\";\n\n/**\n * This service can be used for all the survey-related funtionality. It's methods sends propr requests to backend to get and update values in the database\n */\n@Injectable()\nexport class RequestsSurveysService {\n  private api: string; //api base url\n  public all_surveys$: Observable;\n  private all_surveys_version = \"\"; //version code for all_surveys list\n  public my_surveys$: Observable;\n  private my_surveys_version = \"\"; //version code for my_surveys list\n  /**\n   * The constructor creates 2 observables to get the lists of all surveys and the list of surveys submitted by user\n   */\n  constructor(\n    private HttpClient: HttpClient,\n    private UserService: UserService\n  ) {\n    this.api = (config).api;\n\n    //Observable to get the list of all surveys\n    this.all_surveys$ = interval(2000).pipe(\n      switchMap(() =>\n        this.HttpClient.get(\n          this.api + \"surveys/allsurveys/true\",\n          {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            ) //set authentication header with thoken got from UserService\n          }\n        )\n      ), //this request gets version code\n      filter((data: VersionResponseType) => {\n        if (data.version === this.all_surveys_version) {\n          return false; //stop stream for this iteration, value has not changed from last check\n        }\n        //data has changed, refresh version code\n        this.all_surveys_version = data.version;\n        return true;\n      }),\n      switchMap(() =>\n        this.HttpClient.get(\n          this.api + \"surveys/allsurveys/false\",\n          {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            )\n          }\n        )\n      ),\n      map(data => {\n        return data.surveys;\n      }), //save new value\n      share()\n    );\n\n    //Observable to get the list of surveys submitted by user\n    this.my_surveys$ = interval(2000).pipe(\n      switchMap(() =>\n        this.HttpClient.get(\n          this.api + \"surveys/allsurveyssubmitted/true\",\n          {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            ) //set authentication header with thoken got from UserService\n          }\n        )\n      ), //this request gets version code\n      filter((data: VersionResponseType) => {\n        if (data.version === this.my_surveys_version) {\n          return false; //stop stream for this iteration, value has not changed from last check\n        }\n        //data has changed, refresh version code\n        this.my_surveys_version = data.version;\n        return true;\n      }),\n      switchMap(() =>\n        this.HttpClient.get(\n          this.api + \"surveys/allsurveyssubmitted/false\",\n          {\n            headers: new HttpHeaders().set(\n              \"Authorization\",\n              \"bearer \" + this.UserService.get_token()\n            )\n          }\n        )\n      ),\n      map(data => {\n        return data.surveys;\n      }), //save new value\n      share()\n    );\n  }\n\n  /**\n   * Deletes a survey from database\n   */\n\n  deleteSurvey(survey: number) {\n    var url = this.api + \"surveys/surveys/\" + survey;\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.delete(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          console.log(data.error);\n          return;\n        }\n        swal(\"Fatto!\", \"Sondaggio eliminato!\", \"success\");\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Insert questions of specific survey into database\n   */\n\n  sendQuestions(survey: string, questions: any) {\n    var url = this.api + \"surveys/surveys/\" + survey;\n    //new request's data\n    var post = {\n      questions: JSON.stringify(questions)\n    };\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.post(url, post, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          console.log(data.error);\n          return;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Send request for modify a specific question\n   */\n\n  modifyQuestion(question, parameters) {\n    var url = this.api + \"surveys//questions/\" + question;\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.put(url, parameters, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          console.log(data.error);\n          return;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * Delete a specific question from database\n   */\n\n  deleteQuestion(question) {\n    var url = this.api + \"surveys//questions/\" + question;\n    //http request to backend (with authorization header containing the token got from UserService)\n    this.HttpClient.delete(url, {\n      headers: new HttpHeaders().set(\n        \"Authorization\",\n        \"bearer \" + this.UserService.get_token()\n      )\n    }).subscribe(\n      data => {\n        if (!data.success) {\n          console.log(data.error);\n          return;\n        }\n      },\n      err => {\n        swal(\"Oops!\", \"Errore durante l'operazione!\", \"error\");\n        console.log(err);\n      }\n    );\n  }\n\n  /**\n   * This method is called when a new subscription to all_surveys observable is registered, it forces to send the value even this has not changed by setting version code to '', so new subscribers can get the value\n   */\n\n  reset_all_surveys_version() {\n    this.all_surveys_version = \"\";\n  }\n\n  /**\n   * This method is called when a new subscription to my_surveys observable is registered, it forces to send the value even this has not changed by setting version code to '', so new subscribers can get the value\n   */\n\n  reset_my_surveys_version() {\n    this.my_surveys_version = \"\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarBodyComponent.html":{"url":"components/SidebarBodyComponent.html","title":"component - SidebarBodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarBodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/sidebar/sidebar-body/sidebar-body.component.ts\n\n\n    \n        Description\n    \n    \n        The whole sidebar-menu component, it contains components of type SidebarMenuItem and MiniSidebarItem and inject data in them\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidebar-body\n            \n\n            \n                styleUrls\n                sidebar-body.component.css\n            \n\n\n\n            \n                templateUrl\n                sidebar-body.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                    Private\n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emit_toggle\n                            \n                            \n                                emit_toggle_if_mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side_extended\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(UserService: UserService, Router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:113\n                            \n                        \n\n                \n                    \n                            The constructor builds the list of data object to be injected in menu-item components and subscribes to ano observable to refresh displayed datetime every second\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        Router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side_extended\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:111\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:113\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit_toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit_toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:165\n                            \n                        \n\n\n                \n                    \n                            Emits output to the outer component in oorder to change sidebar status\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit_toggle_if_mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit_toggle_if_mobile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:172\n                            \n                        \n\n\n                \n                    \n                            Emits output to the outer component in order to change sidebar status (just for mobile devices)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     MenuItem[]\n\n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            today\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        today:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : Date.now()\n                        \n                    \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:110\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Output\n} from \"@angular/core\";\nimport { UserService } from \"../../user.service\";\nimport { Router } from \"@angular/router/\";\nimport { interval } from \"rxjs\";\nimport { MenuItem } from \"../../interfaces\";\n\n/**\n * This component is an Element of restricted sidebar menu (desktop-only)\n */\n@Component({\n  selector: \"mini-sidebar-item\",\n  templateUrl: \"mini-sidebar-item.component.html\",\n  styleUrls: [\"./mini-sidebar-item.component.css\"]\n})\nexport class MiniSidebarItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is shown\n\n  constructor(private _elementRef: ElementRef, private Router: Router) {}\n\n  /**\n   * The Listener is used to handle every click on the window, and if the element clicked is not this menu-item the sub-menu is closed\n   */\n  @HostListener(\"document:click\", [\"$event.target\"])\n  public onClick(targetElement) {\n    const clickedInside = this._elementRef.nativeElement.contains(\n      targetElement\n    ); //check if element is clicked\n    if (!clickedInside) {\n      this.active = false; //close sub-menu if click is external to this component\n    }\n  }\n\n  /**\n   * Get tha class of the icon to be shown for this menu entry\n   */\n  get_icon() {\n    if (this.item.name == \"Sezione Assenze\") return \"fas fa-calendar-times\";\n    if (this.item.name == \"Sezione Aule\") return \"fas fa-chalkboard-teacher\";\n    return \"fas fa-question\";\n  }\n\n  /**\n   * Checks if current route is in the section related to this item, so it can be displayed as active\n   */\n  get_section_active() {\n    var parts = this.Router.url.split(\"/\");\n    if (parts[1] == \"absences\" && this.item.short_name == \"Assenze\")\n      return true;\n    if (parts[1] == \"surveys\" && this.item.short_name == \"Sondaggi\")\n      return true;\n    if (parts[1] == \"rooms\" && this.item.short_name == \"Aule\") return true;\n    return false;\n  }\n}\n\n/**\n * This component is an Element of expanded-sidebar menu\n */\n@Component({\n  selector: \"sidebar-menu-item\",\n  templateUrl: \"sidebar-menu-item.component.html\",\n  styleUrls: [\"./sidebar-menu-item.component.css\"]\n})\nexport class SidebarMenuItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is visible\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor(private Router: Router) {}\n\n  /**\n   * Method called when a submenu item is clicked, it hides sidebar in mobile devices\n   */\n  collapse_if_mobile() {\n    if (window.screen.width  {\n      this.today = Date.now(); //refresh datetime every second\n    });\n\n    //Build the list of data object to be injected in menu-item components\n    var obj = {\n      //first item, absences section\n      name: \"Sezione Assenze\",\n      short_name: \"Assenze\",\n      sub_menu: [\n        [\"Calendario\", \"absences/calendar\"],\n        [\"Le tue Richieste\", \"/absences/myabsences\"],\n        [\"Richieste (amministratore)\", \"/absences/employees\"]\n      ]\n    };\n    this.items.push(obj);\n\n    /*obj = {\n      //second item, rooms section\n      name: \"Sezione Aule\",\n      short_name: \"Aule\",\n      sub_menu: [\n        [\"Aule (amministratore)\", \"\"],\n        [\"Le tue prenotazioni\", \"\"],\n        [\"Prenota Aula\", \"\"],\n        [\"Tutte le Aule\", \"\"]\n      ]\n    };\n    this.items.push(obj);*/\n\n    obj = {\n      //third item, surveys section\n      name: \"Sezione Sondaggi\",\n      short_name: \"Sondaggi\",\n      sub_menu: [\n        [\"Crea Sondaggio\", \"surveys/createsurvey\"],\n        [\"Sondaggi (amministratore)\", \"surveys/admin\"],\n        [\"Tutti i Sondaggi\", \"surveys/allsurveys\"]\n      ]\n    };\n    this.items.push(obj);\n  }\n\n  /**\n   * Emits output to the outer component in oorder to change sidebar status\n   */\n  emit_toggle() {\n    this.toggle.emit();\n  }\n\n  /**\n   * Emits output to the outer component in order to change sidebar status (just for mobile devices)\n   */\n  emit_toggle_if_mobile() {\n    if (window.screen.width \n    \n\n    \n        \n  \n    {{today | date:'EEEE,' | titlecase}}\n    \n    {{today | date:'d MMMM y' | titlecase}}\n  \n  \n  \n    {{today | date:'H:mm:ss'}}\n  \n\n\n  \n\n\n  \n    \n       Home\n    \n  \n  \n    \n       Gestione Utenti\n    \n  \n  \n  \n    \n       Logout\n    \n  \n\n\n  \n    \n      \n    \n    \n    Home\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{today | date:\\'EEEE,\\' | titlecase}}        {{today | date:\\'d MMMM y\\' | titlecase}}          {{today | date:\\'H:mm:ss\\'}}                 Home                   Gestione Utenti                     Logout                              Home    '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarBodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle_sidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side_expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in app/sidebar/sidebar.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side_expanded\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle_sidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle_sidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar.component.ts:16\n                            \n                        \n\n\n                \n                    \n                            Emits an output to outer component in ordrd to change sidebar status\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  @Input() side_expanded:boolean; //Input from appcomponent to get sidebar status (collapsed/expanded)\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor() { }\n\n  /**\n   * Emits an output to outer component in ordrd to change sidebar status\n   */\n  toggle_sidebar(){\n    this.toggle.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarMenuItem.html":{"url":"components/SidebarMenuItem.html","title":"component - SidebarMenuItem","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarMenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/sidebar/sidebar-body/sidebar-body.component.ts\n\n\n    \n        Description\n    \n    \n        This component is an Element of expanded-sidebar menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidebar-menu-item\n            \n\n            \n                styleUrls\n                sidebar-menu-item.component.css\n            \n\n\n\n            \n                templateUrl\n                sidebar-menu-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collapse_if_mobile\n                            \n                            \n                                get_section_active\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(Router: Router)\n                    \n                \n                        \n                            \n                                Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type:    MenuItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:73\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:75\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapse_if_mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \ncollapse_if_mobile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Method called when a submenu item is clicked, it hides sidebar in mobile devices\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_section_active\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_section_active()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Checks if current route is in the section related to this item, so it can be displayed as active\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/sidebar/sidebar-body/sidebar-body.component.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Output\n} from \"@angular/core\";\nimport { UserService } from \"../../user.service\";\nimport { Router } from \"@angular/router/\";\nimport { interval } from \"rxjs\";\nimport { MenuItem } from \"../../interfaces\";\n\n/**\n * This component is an Element of restricted sidebar menu (desktop-only)\n */\n@Component({\n  selector: \"mini-sidebar-item\",\n  templateUrl: \"mini-sidebar-item.component.html\",\n  styleUrls: [\"./mini-sidebar-item.component.css\"]\n})\nexport class MiniSidebarItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is shown\n\n  constructor(private _elementRef: ElementRef, private Router: Router) {}\n\n  /**\n   * The Listener is used to handle every click on the window, and if the element clicked is not this menu-item the sub-menu is closed\n   */\n  @HostListener(\"document:click\", [\"$event.target\"])\n  public onClick(targetElement) {\n    const clickedInside = this._elementRef.nativeElement.contains(\n      targetElement\n    ); //check if element is clicked\n    if (!clickedInside) {\n      this.active = false; //close sub-menu if click is external to this component\n    }\n  }\n\n  /**\n   * Get tha class of the icon to be shown for this menu entry\n   */\n  get_icon() {\n    if (this.item.name == \"Sezione Assenze\") return \"fas fa-calendar-times\";\n    if (this.item.name == \"Sezione Aule\") return \"fas fa-chalkboard-teacher\";\n    return \"fas fa-question\";\n  }\n\n  /**\n   * Checks if current route is in the section related to this item, so it can be displayed as active\n   */\n  get_section_active() {\n    var parts = this.Router.url.split(\"/\");\n    if (parts[1] == \"absences\" && this.item.short_name == \"Assenze\")\n      return true;\n    if (parts[1] == \"surveys\" && this.item.short_name == \"Sondaggi\")\n      return true;\n    if (parts[1] == \"rooms\" && this.item.short_name == \"Aule\") return true;\n    return false;\n  }\n}\n\n/**\n * This component is an Element of expanded-sidebar menu\n */\n@Component({\n  selector: \"sidebar-menu-item\",\n  templateUrl: \"sidebar-menu-item.component.html\",\n  styleUrls: [\"./sidebar-menu-item.component.css\"]\n})\nexport class SidebarMenuItem {\n  @Input() item: MenuItem; //data of the menu entry to be shown\n  active: boolean = false; //if true the submenu is visible\n  @Output() toggle = new EventEmitter(); //emitter to outer component to order the change of sidebar status\n  constructor(private Router: Router) {}\n\n  /**\n   * Method called when a submenu item is clicked, it hides sidebar in mobile devices\n   */\n  collapse_if_mobile() {\n    if (window.screen.width  {\n      this.today = Date.now(); //refresh datetime every second\n    });\n\n    //Build the list of data object to be injected in menu-item components\n    var obj = {\n      //first item, absences section\n      name: \"Sezione Assenze\",\n      short_name: \"Assenze\",\n      sub_menu: [\n        [\"Calendario\", \"absences/calendar\"],\n        [\"Le tue Richieste\", \"/absences/myabsences\"],\n        [\"Richieste (amministratore)\", \"/absences/employees\"]\n      ]\n    };\n    this.items.push(obj);\n\n    /*obj = {\n      //second item, rooms section\n      name: \"Sezione Aule\",\n      short_name: \"Aule\",\n      sub_menu: [\n        [\"Aule (amministratore)\", \"\"],\n        [\"Le tue prenotazioni\", \"\"],\n        [\"Prenota Aula\", \"\"],\n        [\"Tutte le Aule\", \"\"]\n      ]\n    };\n    this.items.push(obj);*/\n\n    obj = {\n      //third item, surveys section\n      name: \"Sezione Sondaggi\",\n      short_name: \"Sondaggi\",\n      sub_menu: [\n        [\"Crea Sondaggio\", \"surveys/createsurvey\"],\n        [\"Sondaggi (amministratore)\", \"surveys/admin\"],\n        [\"Tutti i Sondaggi\", \"surveys/allsurveys\"]\n      ]\n    };\n    this.items.push(obj);\n  }\n\n  /**\n   * Emits output to the outer component in oorder to change sidebar status\n   */\n  emit_toggle() {\n    this.toggle.emit();\n  }\n\n  /**\n   * Emits output to the outer component in order to change sidebar status (just for mobile devices)\n   */\n  emit_toggle_if_mobile() {\n    if (window.screen.width \n    \n\n    \n        \n  \n    \n    {{item.name}}\n  \n\n\n  \n    \n      {{item[0]}}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{item.name}}              {{item[0]}}      '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarMenuItem'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SuccessResponseType.html":{"url":"interfaces/SuccessResponseType.html","title":"interface - SuccessResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SuccessResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SupervisionType.html":{"url":"interfaces/SupervisionType.html","title":"interface - SupervisionType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SupervisionType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id_boss\n                                \n                                \n                                        id_user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_boss\n                                    \n                                \n                                \n                                    \n                                        id_boss:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SupervisionsResponseType.html":{"url":"interfaces/SupervisionsResponseType.html","title":"interface - SupervisionsResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SupervisionsResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        supervisions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supervisions\n                                    \n                                \n                                \n                                    \n                                        supervisions:     SupervisionType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SupervisionType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyAdminResponseType.html":{"url":"interfaces/SurveyAdminResponseType.html","title":"interface - SurveyAdminResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveyAdminResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        surveys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surveys\n                                    \n                                \n                                \n                                    \n                                        surveys:     SurveyAdminType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SurveyAdminType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyAdminType.html":{"url":"interfaces/SurveyAdminType.html","title":"interface - SurveyAdminType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveyAdminType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ArrayStep\n                                \n                                \n                                        id\n                                \n                                \n                                        id_user\n                                \n                                \n                                        name\n                                \n                                \n                                        questions\n                                \n                                \n                                        step\n                                \n                                \n                                        users\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ArrayStep\n                                    \n                                \n                                \n                                    \n                                        ArrayStep:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                    \n                                \n                                \n                                    \n                                        questions:     QuestionsType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     QuestionsType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                    \n                                \n                                \n                                    \n                                        step:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     UserType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyCreationResponseType.html":{"url":"interfaces/SurveyCreationResponseType.html","title":"interface - SurveyCreationResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveyCreationResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        survey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        survey\n                                    \n                                \n                                \n                                    \n                                        survey:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyType.html":{"url":"interfaces/SurveyType.html","title":"interface - SurveyType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveyType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        id_user\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveysResponseType.html":{"url":"interfaces/SurveysResponseType.html","title":"interface - SurveysResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SurveysResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        surveys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surveys\n                                    \n                                \n                                \n                                    \n                                        surveys:     SurveyType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SurveyType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableUserType.html":{"url":"interfaces/TableUserType.html","title":"interface - TableUserType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableUserType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        position\n                                \n                                \n                                        surname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserResponseType.html":{"url":"interfaces/UserResponseType.html","title":"interface - UserResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/user.service.ts\n        \n\n            \n                Description\n            \n            \n                This service can be used for the user-related funtionality like login, logout, token and user info management.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                api\n                            \n                            \n                                    Private\n                                logged_in\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Private\n                                supervisions\n                            \n                            \n                                    Private\n                                supervisions_version\n                            \n                            \n                                    Public\n                                supervisions$\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Private\n                                users\n                            \n                            \n                                    Private\n                                users_version\n                            \n                            \n                                    Public\n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add_user\n                            \n                            \n                                get_boss_name\n                            \n                            \n                                get_login_status\n                            \n                            \n                                get_name\n                            \n                            \n                                get_token\n                            \n                            \n                                get_user\n                            \n                            \n                                get_user_by_id\n                            \n                            \n                                get_users\n                            \n                            \n                                load_cookies\n                            \n                            \n                                logout\n                            \n                            \n                                reset_version\n                            \n                            \n                                save_cookies\n                            \n                            \n                                set_boss\n                            \n                            \n                                try_login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(BlockScrollService: BlockScrollService, cookieService: CookieService, httpClient: HttpClient, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in app/user.service.ts:37\n                            \n                        \n\n                \n                    \n                            The constructor creates 2 observables to get the lists of users and supervisions from backend\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        BlockScrollService\n                                                  \n                                                        \n                                                                    BlockScrollService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add_user\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd_user(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:106\n                            \n                        \n\n\n                \n                    \n                            This function is called when user compiles the form for add a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_boss_name\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_boss_name(id_employee: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:148\n                            \n                        \n\n\n                \n                    \n                            This function is used by users management component to show boss complete name (name + surname) for each user (if it's set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id_employee\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_login_status\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_login_status()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_name\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_name()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:173\n                            \n                        \n\n\n                \n                    \n                            Get complete name (name + surname) of the user\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_token\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_token()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            If set, return the authentication token\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_user\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_user()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:184\n                            \n                        \n\n\n                \n                    \n                            Get info of the user\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_user_by_id\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_user_by_id(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:191\n                            \n                        \n\n\n                \n                    \n                            Return info of the user selected by his id, if not found returns info of the logged-in user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get_users\n                            \n                            \n                        \n                    \n                \n                \n                    \nget_users()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            Get users list holded by user-service instance\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load_cookies\n                            \n                            \n                        \n                    \n                \n                \n                    \nload_cookies()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:220\n                            \n                        \n\n\n                \n                    \n                            This method checks if cookies are set, if they are load them\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:237\n                            \n                        \n\n\n                \n                    \n                            This Method uses swal to show a confirm modal, and if the user click 'ok' clears login data and cookies\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset_version\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset_version()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:258\n                            \n                        \n\n\n                \n                    \n                            This method is called when a new subscription to users$ observable is registered, it forces to send the value even this has not changed, so new subscribers can get the value\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save_cookies\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave_cookies()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:265\n                            \n                        \n\n\n                \n                    \n                            Saves Login data in cookies\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_boss\n                            \n                            \n                        \n                    \n                \n                \n                    \nset_boss(id_user: , id_boss: , bottomsheetref: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:274\n                            \n                        \n\n\n                \n                    \n                            Sends a request to backend to add/update supervision entry for specified employee/boss couple\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id_user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id_boss\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        bottomsheetref\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            try_login\n                            \n                            \n                        \n                    \n                \n                \n                    \ntry_login(email: , password: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/user.service.ts:318\n                            \n                        \n\n\n                \n                    \n                            Sends authentication request to backend, providing credentials got through the login form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logged_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logged_in:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            supervisions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        supervisions:     SupervisionType[]\n\n                    \n                \n                    \n                        \n                            Type :     SupervisionType[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            supervisions_version\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        supervisions_version:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supervisions$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        supervisions$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     UserType\n\n                    \n                \n                    \n                        \n                            Type :     UserType\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     UserType[]\n\n                    \n                \n                    \n                        \n                            Type :     UserType[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users_version\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users_version:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in app/user.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BlockScrollService } from \"./block-scroll.service\";\nimport {\n  BossResponseType,\n  LogResponseType,\n  RegisterResponseType,\n  SuccessResponseType,\n  SupervisionsResponseType,\n  SupervisionType,\n  UserResponseType,\n  UsersResponseType,\n  UserType,\n  VersionResponseType\n} from \"./interfaces\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { filter, map, share, switchMap } from \"rxjs/operators\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { interval, Observable } from \"rxjs\";\nimport { MatSnackBar, MatSnackBarConfig } from \"@angular/material\";\nimport swal from \"sweetalert\";\nimport * as config from \"./config.json\";\n\n/**\n *This service can be used for the user-related funtionality like login, logout, token and user info management.\n */\n@Injectable()\nexport class UserService {\n  private api: string; //api base url\n  private logged_in: boolean = false;\n  public user: UserType; //Info of the user ( null if not logged in)\n  public token: string; //Authentication Token of the user (null if not logged in)\n  public users$: Observable; //observable to get user list\n  public supervisions$: Observable; //observable for supervisions list\n  private users_version = \"\"; //version code for user list\n  private supervisions_version = \"\"; //version code for supervision list\n  private supervisions: SupervisionType[] = []; //list of supervisions couples (id_user, id_boss)\n  private users: UserType[] = []; //list of users\n\n  /**\n   * The constructor creates 2 observables to get the lists of users and supervisions from backend\n   */\n  constructor(\n    private BlockScrollService: BlockScrollService,\n    private cookieService: CookieService,\n    private httpClient: HttpClient,\n    public snackBar: MatSnackBar\n  ) {\n    this.api = (config).api;\n    this.load_cookies();\n    //NOTE: components that use some observable must implement ngOnDestroy and call unsubscribe() on subscription object\n    //Observable to get Users List\n    this.users$ = interval(1000).pipe(\n      switchMap(() =>\n        this.httpClient.get(this.api + \"users/true\")\n      ), //this request gets version code\n      filter((data: VersionResponseType) => {\n        if (data.version === this.users_version) {\n          return false; //stop stream for this iteration, value has not changed from last check\n        }\n        this.users_version = data.version;\n        return true;\n      }),\n      switchMap(() =>\n        this.httpClient.get(this.api + \"users/false\")\n      ),\n      map(data => {\n        return data.users;\n      }), //save new value (get just users field from response)\n      share()\n    );\n    //Observable to get Supervisions List\n    this.supervisions$ = interval(1000).pipe(\n      switchMap(() =>\n        this.httpClient.get(this.api + \"supervisions/true\")\n      ), //this request gets version code\n      filter((data: VersionResponseType) => {\n        if (data.version === this.supervisions_version) {\n          return false; //stop stream for this iteration, value has not changed from last check\n        }\n        this.supervisions_version = data.version;\n        return true;\n      }),\n      switchMap(() =>\n        this.httpClient.get(\n          this.api + \"supervisions/false\"\n        )\n      ),\n      map(data => {\n        return data.supervisions;\n      }), //save new value (get just supervisions field from response)\n      share()\n    );\n    //subscribe to this observable to refresh user list every second\n    this.users$.subscribe(users => {\n      this.users = users;\n    });\n    //subscribe to this observable to refresh supervisions list every second\n    this.supervisions$.subscribe(supervisions => {\n      this.supervisions = supervisions;\n    });\n  }\n\n  /**\n   * This function is called when user compiles the form for add a new user\n   */\n  add_user(user) {\n    this.httpClient\n      .post(this.api + \"users\", user)\n      .subscribe(\n        data => {\n          if (data.success) {\n            //insertion succesfully\n            swal(\n              \"Inserimento Riuscito!\",\n              \"Utente salvato correttamente!\",\n              \"success\"\n            );\n          } else {\n            //insertion failed, error message shown in snackBar\n            let config = new MatSnackBarConfig();\n            config.duration = 2000;\n            if (data.error) {\n              console.log(data.error);\n            }\n            this.snackBar.open(\n              \"Inserimento non riuscito! Errore inaspettato nel server...\",\n              \"OK\",\n              config\n            );\n          }\n        },\n        err => {\n          let config = new MatSnackBarConfig();\n          config.duration = 2000;\n          this.snackBar.open(\n            \"Inserimento non riuscito! Errore inaspettato nel server...\",\n            \"OK\",\n            config\n          );\n          console.log(err);\n        }\n      );\n  }\n\n  /**\n   *This function is used by users management component to show boss complete name (name + surname) for each user (if it's set)\n   */\n  get_boss_name(id_employee) {\n    //search for user in supervisions list\n    for (var i = 0; i  {\n      if (willDelete) {\n        //willDelete is true if user clicked 'ok'\n        this.token = null;\n        this.user = null;\n        this.logged_in = false;\n        this.cookieService.deleteAll(); //clear login data and cookies\n      }\n    });\n  }\n\n  /**\n   * This method is called when a new subscription to users$ observable is registered, it forces to send the value even this has not changed, so new subscribers can get the value\n   */\n  reset_version() {\n    this.users_version = \"\"; //setting version code in this way the value will be sent in observable flow in next check for changes\n  }\n\n  /**\n   * Saves Login data in cookies\n   */\n  save_cookies() {\n    this.cookieService.set(\"logged_in\", \"true\");\n    this.cookieService.set(\"token\", this.token);\n    this.cookieService.set(\"user\", JSON.stringify(this.user));\n  }\n\n  /**\n   * Sends a request to backend to add/update supervision entry for specified employee/boss couple\n   */\n  set_boss(id_user, id_boss, bottomsheetref) {\n    var post = { user: id_user, boss: id_boss };\n    this.httpClient\n      .post(this.api + \"users/set_boss/\", post)\n      .subscribe(\n        data => {\n          if (data.success) {\n            //login succesfully\n            swal(\n              \"Nomina Riuscita!\",\n              \"Supervisione salvata correttamente!\",\n              \"success\"\n            );\n          } else {\n            //login failed\n            let config = new MatSnackBarConfig();\n            config.duration = 2000;\n            if (data.error) {\n              console.log(data.error);\n            }\n            this.snackBar.open(\n              \"Inserimento non riuscito! Errore inaspettato del server...\",\n              \"OK\",\n              config\n            );\n          }\n        },\n        err => {\n          let config = new MatSnackBarConfig();\n          config.duration = 2000;\n          this.snackBar.open(\n            \"Inserimento non riuscito! Errore inaspettato del server...\",\n            \"OK\",\n            config\n          );\n          console.log(err);\n        }\n      );\n    bottomsheetref.dismiss(); //close bottom sheet (boss choosing list) after sending the request\n  }\n\n  /**\n   * Sends authentication request to backend, providing credentials got through the login form\n   */\n  try_login(email, password) {\n    this.httpClient\n      .get(this.api + \"authenticate\", {\n        headers: new HttpHeaders().set(\n          \"Authorization\",\n          \"Basic \" + btoa(email + \":\" + password)\n        ) //basic authentication, base-64 encoded string :\n      })\n      .subscribe(\n        data => {\n          if (data.success) {\n            //login succesfully\n            this.token = data.token;\n            this.user = data.user;\n            this.logged_in = true;\n            this.save_cookies();\n            this.BlockScrollService.enable(); //scroll is disabled while login modal is shown, after login we can enable it\n          } else {\n            //login failed\n            let config = new MatSnackBarConfig();\n            config.duration = 2000;\n            this.snackBar.open(\n              \"Login non riuscito! Credenziali non valide...\",\n              \"OK\",\n              config\n            );\n          }\n        },\n        err => {\n          //login failed\n          let config = new MatSnackBarConfig();\n          config.duration = 2000;\n          this.snackBar.open(\n            \"Login non riuscito! Credenziali non valide...\",\n            \"OK\",\n            config\n          );\n          console.log(JSON.stringify(err));\n        }\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserTableComponent.html":{"url":"components/UserTableComponent.html","title":"component - UserTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    app/manage-users/user-table/user-table.component.ts\n\n\n    \n        Description\n    \n    \n        This component contains the table showing a complete list of users (name,surname,email, boss)\nNOTE: table base code got from Angula Material\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-table\n            \n\n            \n                styleUrls\n                user-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataSource\n                            \n                            \n                                    Private\n                                displayedColumns\n                            \n                            \n                                    Private\n                                usersSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                emit_employee\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ready\n                            \n                            \n                                set_boss\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(client: HttpClient, UserService: UserService)\n                    \n                \n                        \n                            \n                                Defined in app/manage-users/user-table/user-table.component.ts:29\n                            \n                        \n\n                \n                    \n                            The constructro subsribes to UserService Observable to get users list and checks device screen dimension in order to hide email column in mobile devices\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ready\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        set_boss\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filterValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Filter function for datatable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit_employee\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit_employee(user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Emits output to outer component, the value indicates wich user has been clicked in order to start boss assigment procedure\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Executes unsubscription from user-service's observable\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     \n\n                    \n                \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"name\", \"surname\", \"email\", \"boss\"]\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        usersSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in app/manage-users/user-table/user-table.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output\n} from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material\";\nimport { UserType } from \"../../interfaces\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subscription } from \"rxjs\";\nimport { UserService } from \"../../user.service\";\n\n/**\n * This component contains the table showing a complete list of users (name,surname,email, boss)\n *\n * NOTE: table base code got from Angula Material\n */\n@Component({\n  selector: \"user-table\",\n  templateUrl: \"./user-table.component.html\",\n  styleUrls: [\"./user-table.component.css\"]\n})\nexport class UserTableComponent implements OnDestroy {\n  @Output() ready = new EventEmitter(); //output to indicate to outer component if data is ready, it contains length of users list\n  @Output() set_boss = new EventEmitter(); //emit to outer component to show boss selection list\n  private displayedColumns = [\"name\", \"surname\", \"email\", \"boss\"];\n  private dataSource; //data source for datatable\n  private usersSubscription: Subscription; //Subscription to user-service observaable to get user list\n\n  /**\n   * The constructro subsribes to UserService Observable to get users list and checks device screen dimension in order to hide email column in mobile devices\n   */\n  constructor(client: HttpClient, private UserService: UserService) {\n    if (window.screen.width  {\n      //subscription to user-service's observable to get user list\n      this.dataSource = new MatTableDataSource(users); //inject received data in the table\n      if (users.length == 0) {\n        //emit query status to outer component\n        this.ready.emit(0); //no user found\n      } else {\n        this.ready.emit(users.length); //data is ready, table can be displayed\n      }\n    });\n    this.UserService.reset_version();\n  }\n\n  /**\n   * Filter function for datatable\n   */\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  /**\n   * Emits output to outer component, the value indicates wich user has been clicked in order to start boss assigment procedure\n   */\n  emit_employee(user) {\n    this.set_boss.emit(user);\n  }\n\n  /**\n   * Executes unsubscription from user-service's observable\n   */\n  ngOnDestroy() {\n    this.usersSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n  \n     Nome \n     {{element.name}} \n  \n  \n     Cognome \n     {{element.surname}} \n  \n  \n     Email \n     {{element.email}} \n  \n  \n     Capo \n    \n      \n        {{UserService.get_boss_name(element.id)}}\n      \n      Nomina Capo\n    \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         Nome      {{element.name}}          Cognome      {{element.surname}}          Email      {{element.email}}          Capo                   {{UserService.get_boss_name(element.id)}}            Nomina Capo          '\n    var COMPONENTS = [{'name': 'AbsencesCalendarComponent', 'selector': 'absences-calendar'},{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AllsurveysComponent', 'selector': 'allsurveys'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BottomListComponent', 'selector': 'bottom-list'},{'name': 'CompileComponent', 'selector': 'compile'},{'name': 'CreatesurveyComponent', 'selector': 'createsurvey'},{'name': 'EmployeeComponent', 'selector': 'app-employee'},{'name': 'EmployeesComponent', 'selector': 'employees'},{'name': 'HeaderComponent', 'selector': 'header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginDialogComponent', 'selector': 'login-dialog'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MiniSidebarItem', 'selector': 'mini-sidebar-item'},{'name': 'ModifyQuestionComponent', 'selector': 'modify-question'},{'name': 'ModifyRequestComponent', 'selector': 'modify-request'},{'name': 'MyAbsencesComponent', 'selector': 'my-absences'},{'name': 'MyAbsencesListComponent', 'selector': 'my-absences-list'},{'name': 'RequestChartsComponent', 'selector': 'request-charts'},{'name': 'RequestDetailsComponent', 'selector': 'request-details'},{'name': 'SidebarBodyComponent', 'selector': 'sidebar-body'},{'name': 'SidebarComponent', 'selector': 'sidebar'},{'name': 'SidebarMenuItem', 'selector': 'sidebar-menu-item'},{'name': 'UserTableComponent', 'selector': 'user-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserType.html":{"url":"interfaces/UserType.html","title":"interface - UserType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        surname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                    \n                                \n                                \n                                    \n                                        surname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersResponseType.html":{"url":"interfaces/UsersResponseType.html","title":"interface - UsersResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UsersResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        users\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     UserType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersSubmittedResponseType.html":{"url":"interfaces/UsersSubmittedResponseType.html","title":"interface - UsersSubmittedResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UsersSubmittedResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        users\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     UsersSubmittedType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UsersSubmittedType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersSubmittedType.html":{"url":"interfaces/UsersSubmittedType.html","title":"interface - UsersSubmittedType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UsersSubmittedType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id_user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_user\n                                    \n                                \n                                \n                                    \n                                        id_user:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VersionResponseType.html":{"url":"interfaces/VersionResponseType.html","title":"interface - VersionResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VersionResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            app/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        success\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddRequestResponseType {\n  success: boolean;\n  error: string;\n  request_id: number;\n}\n\nexport interface AnswerResponseType {\n  success: boolean;\n  error: string;\n  answer: string;\n}\n\nexport interface BossResponseType {\n  success: boolean;\n  error: string;\n  boss: number;\n}\n\nexport interface ConditionResponseType {\n  success: boolean;\n  error: string;\n  condition: string;\n}\n\nexport interface MenuItem {\n  name: string;\n  short_name: string;\n  sub_menu: string[][];\n}\n\nexport interface MySurveyType {\n  id_survey: number;\n}\n\nexport interface MySurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: MySurveyType[];\n}\n\nexport interface LogResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n  token: string;\n}\n\nexport interface QuestionsResponseType {\n  success: boolean;\n  error: string;\n  questions: QuestionsType[];\n  survey: SurveyType;\n  step: any;\n}\n\nexport interface PercentualAnswerResponseType {\n  success: boolean;\n  error: string;\n  percentual: number;\n}\n\nexport interface PercentualAnswerType {\n  answer: string;\n  percentual: number;\n}\n\nexport interface QuestionsType {\n  id: number;\n  question: string;\n  answer: string;\n  type: string;\n  step: number;\n  condition_answer: boolean;\n  id_survey: number;\n  answer_compile: string;\n  condition_confirmed: boolean;\n  percentual_answers: PercentualAnswerType[];\n  current_user: string;\n  answer_of_user: string;\n}\n\nexport interface RegisterResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface RequestsResponseType {\n  success: boolean;\n  error: string;\n  requests: RequestType[];\n}\n\nexport interface RequestType {\n  id: number;\n  id_user: number;\n  state: number;\n  reason: string;\n  justification_file: string;\n  start_date: Date;\n  end_date: Date;\n}\n\nexport interface SuccessResponseType {\n  success: boolean;\n  error: string;\n}\n\nexport interface SurveyCreationResponseType {\n  success: boolean;\n  error: string;\n  survey: number;\n}\n\nexport interface SurveyType {\n  id: number;\n  name: string;\n  id_user: number;\n}\n\nexport interface SurveyAdminResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyAdminType[];\n}\n\nexport interface SurveyAdminType {\n  id: number;\n  name: string;\n  id_user: number;\n  step: number;\n  questions: QuestionsType[];\n  ArrayStep: number[];\n  users: UserType[];\n}\n\nexport interface SurveysResponseType {\n  success: boolean;\n  error: string;\n  surveys: SurveyType[];\n}\n\nexport interface SupervisionsResponseType {\n  success: boolean;\n  error: string;\n  supervisions: SupervisionType[];\n}\n\nexport interface SupervisionType {\n  id_user: number;\n  id_boss: number;\n}\n\nexport interface UserResponseType {\n  success: boolean;\n  error: string;\n  user: UserType;\n}\n\nexport interface UsersResponseType {\n  success: boolean;\n  error: string;\n  users: UserType[];\n}\n\nexport interface UsersSubmittedResponseType {\n  success: boolean;\n  error: string;\n  users: UsersSubmittedType[];\n}\n\nexport interface UsersSubmittedType {\n  id_user: number;\n}\n\nexport interface UserType {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface TableUserType {\n  position: number;\n  name: string;\n  surname: string;\n  email: string;\n}\n\nexport interface VersionResponseType {\n  success: boolean;\n  error: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    app/absences-section/absences-calendar/absences-calendar.component.ts\n            \n            \n                component\n            \n            \n                AbsencesCalendarComponent\n            \n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                    app/absences-section/absences-calendar/absences-calendar.component.ts\n            \n            \n                component\n            \n            \n                RequestDetailsComponent\n            \n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                    app/absences-section/absences-calendar/absences-calendar.component.ts\n            \n            \n                variable\n            \n            \n                colors\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    app/absences-section/employee/employee.component.ts\n            \n            \n                component\n            \n            \n                EmployeeComponent\n            \n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                    app/absences-section/employees/employees.component.ts\n            \n            \n                component\n            \n            \n                EmployeesComponent\n            \n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                    app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts\n            \n            \n                component\n            \n            \n                ModifyRequestComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    app/absences-section/my-absences/my-absences-list/my-absences-list.component.ts\n            \n            \n                component\n            \n            \n                MyAbsencesListComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    app/absences-section/my-absences/my-absences.component.ts\n            \n            \n                component\n            \n            \n                MyAbsencesComponent\n            \n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                    app/absences-section/request-charts/request-charts.component.ts\n            \n            \n                component\n            \n            \n                RequestChartsComponent\n            \n            \n                66 %\n                (24/36)\n            \n        \n        \n            \n                \n                    app/absences-section/requests.service.ts\n            \n            \n                injectable\n            \n            \n                RequestsService\n            \n            \n                57 %\n                (12/21)\n            \n        \n        \n            \n                \n                    app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                    app/block-scroll.service.ts\n            \n            \n                injectable\n            \n            \n                BlockScrollService\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                    app/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                    app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                AddRequestResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                AnswerResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                BossResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                ConditionResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                LogResponseType\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                MenuItem\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                MySurveyType\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                MySurveysResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                PercentualAnswerResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                PercentualAnswerType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                QuestionsResponseType\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                QuestionsType\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                RegisterResponseType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                RequestType\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                RequestsResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SuccessResponseType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SupervisionType\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SupervisionsResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveyAdminResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveyAdminType\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveyCreationResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveyType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                SurveysResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                TableUserType\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UserResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UserType\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UsersResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UsersSubmittedResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                UsersSubmittedType\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    app/interfaces.ts\n            \n            \n                interface\n            \n            \n                VersionResponseType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    app/login-dialog/login-dialog.component.ts\n            \n            \n                component\n            \n            \n                LoginDialogComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    app/manage-users/manage-users.component.ts\n            \n            \n                component\n            \n            \n                BottomListComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    app/manage-users/manage-users.component.ts\n            \n            \n                component\n            \n            \n                ManageUsersComponent\n            \n            \n                50 %\n                (9/18)\n            \n        \n        \n            \n                \n                    app/manage-users/user-table/user-table.component.ts\n            \n            \n                component\n            \n            \n                UserTableComponent\n            \n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                    app/sidebar/sidebar-body/sidebar-body.component.ts\n            \n            \n                component\n            \n            \n                MiniSidebarItem\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                    app/sidebar/sidebar-body/sidebar-body.component.ts\n            \n            \n                component\n            \n            \n                SidebarBodyComponent\n            \n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                    app/sidebar/sidebar-body/sidebar-body.component.ts\n            \n            \n                component\n            \n            \n                SidebarMenuItem\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    app/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    app/surveys-section/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                    app/surveys-section/allsurveys/allsurveys.component.ts\n            \n            \n                component\n            \n            \n                AllsurveysComponent\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                    app/surveys-section/compile/compile.component.ts\n            \n            \n                component\n            \n            \n                CompileComponent\n            \n            \n                41 %\n                (7/17)\n            \n        \n        \n            \n                \n                    app/surveys-section/createsurvey/createsurvey.component.ts\n            \n            \n                component\n            \n            \n                CreatesurveyComponent\n            \n            \n                42 %\n                (16/38)\n            \n        \n        \n            \n                \n                    app/surveys-section/createsurvey/createsurvey.component.ts\n            \n            \n                component\n            \n            \n                ModifyQuestionComponent\n            \n            \n                40 %\n                (10/25)\n            \n        \n        \n            \n                \n                    app/surveys-section/requests.service.ts\n            \n            \n                injectable\n            \n            \n                RequestsSurveysService\n            \n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                    app/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                55 %\n                (15/27)\n            \n        \n        \n            \n                \n                    environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAbsencesCalendarComponent\n\nAbsencesCalendarComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAbsencesCalendarComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAllsurveysComponent\n\nAllsurveysComponent\n\nAppModule -->\n\nAllsurveysComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBottomListComponent\n\nBottomListComponent\n\nAppModule -->\n\nBottomListComponent->AppModule\n\n\n\n\n\nCompileComponent\n\nCompileComponent\n\nAppModule -->\n\nCompileComponent->AppModule\n\n\n\n\n\nCreatesurveyComponent\n\nCreatesurveyComponent\n\nAppModule -->\n\nCreatesurveyComponent->AppModule\n\n\n\n\n\nEmployeeComponent\n\nEmployeeComponent\n\nAppModule -->\n\nEmployeeComponent->AppModule\n\n\n\n\n\nEmployeesComponent\n\nEmployeesComponent\n\nAppModule -->\n\nEmployeesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginDialogComponent\n\nLoginDialogComponent\n\nAppModule -->\n\nLoginDialogComponent->AppModule\n\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\nAppModule -->\n\nManageUsersComponent->AppModule\n\n\n\n\n\nMiniSidebarItem\n\nMiniSidebarItem\n\nAppModule -->\n\nMiniSidebarItem->AppModule\n\n\n\n\n\nModifyQuestionComponent\n\nModifyQuestionComponent\n\nAppModule -->\n\nModifyQuestionComponent->AppModule\n\n\n\n\n\nModifyRequestComponent\n\nModifyRequestComponent\n\nAppModule -->\n\nModifyRequestComponent->AppModule\n\n\n\n\n\nMyAbsencesComponent\n\nMyAbsencesComponent\n\nAppModule -->\n\nMyAbsencesComponent->AppModule\n\n\n\n\n\nMyAbsencesListComponent\n\nMyAbsencesListComponent\n\nAppModule -->\n\nMyAbsencesListComponent->AppModule\n\n\n\n\n\nRequestChartsComponent\n\nRequestChartsComponent\n\nAppModule -->\n\nRequestChartsComponent->AppModule\n\n\n\n\n\nRequestDetailsComponent\n\nRequestDetailsComponent\n\nAppModule -->\n\nRequestDetailsComponent->AppModule\n\n\n\n\n\nSidebarBodyComponent\n\nSidebarBodyComponent\n\nAppModule -->\n\nSidebarBodyComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSidebarMenuItem\n\nSidebarMenuItem\n\nAppModule -->\n\nSidebarMenuItem->AppModule\n\n\n\n\n\nUserTableComponent\n\nUserTableComponent\n\nAppModule -->\n\nUserTableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBlockScrollService\n\nBlockScrollService\n\nAppModule -->\n\nBlockScrollService->AppModule\n\n\n\n\n\nRequestsService\n\nRequestsService\n\nAppModule -->\n\nRequestsService->AppModule\n\n\n\n\n\nRequestsSurveysService\n\nRequestsSurveysService\n\nAppModule -->\n\nRequestsSurveysService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        24 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        30 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            11 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            colors   (app/.../absences-calendar.component.ts)\n                        \n                        \n                            context   (test.ts)\n                        \n                        \n                            environment   (environments/.../environment.prod.ts)\n                        \n                        \n                            environment   (environments/.../environment.ts)\n                        \n                        \n                            require   (test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    app/absences-section/absences-calendar/absences-calendar.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            colors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colors:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  red: {\n    //refused requests\n    primary: \"#ad2121\",\n    secondary: \"#FAE3E3\"\n  },\n  grey: {\n    //pending requests\n    primary: \"#888888\",\n    secondary: \"#aaaaaa\"\n  },\n  green: {\n    //approved requests\n    primary: \"#21ad21\",\n    secondary: \"#e3fae3\"\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
